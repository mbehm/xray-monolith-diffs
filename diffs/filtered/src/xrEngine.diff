diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/bone.h xray-monolith/src/xrEngine/bone.h
--- coc-1.4-xray-64/src/xrEngine/bone.h	2023-10-20 20:54:50.495327400 +0100
+++ xray-monolith/src/xrEngine/bone.h	2023-10-20 20:54:32.504036600 +0100
@@ -97,3 +99,3 @@
     float u, v;
-    void get_pos(Fvector& p) { p.set(P); }
+	void get_pos(Fvector& p) const { p.set(P); }
 #ifdef DEBUG
@@ -112,3 +115,3 @@
     float u, v;
-    void get_pos(Fvector& p) { p.set(P); }
+	void get_pos(Fvector& p) const { p.set(P); }
 #ifdef DEBUG
@@ -127,3 +131,3 @@
     float u, v;
-    void get_pos(Fvector& p) { p.set(P); }
+	void get_pos(Fvector& p) const { p.set(P); }
 #ifdef DEBUG
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/CameraManager.cpp xray-monolith/src/xrEngine/CameraManager.cpp
--- coc-1.4-xray-64/src/xrEngine/CameraManager.cpp	2023-10-20 20:54:50.459327200 +0100
+++ xray-monolith/src/xrEngine/CameraManager.cpp	2023-10-20 20:54:32.470035600 +0100
@@ -225,2 +227,17 @@
 
+// demonized: removecameffector by pointer
+void CCameraManager::RemoveCamEffector(CEffectorCam* ef)
+{
+	for (EffectorCamIt it = m_EffectorsCam.begin(); it != m_EffectorsCam.end(); it++)
+	{
+		CEffectorCam* cam = (*it);
+		if (cam == ef)
+		{
+			OnEffectorReleased(cam);
+			m_EffectorsCam.erase(it);
+			return;
+		}
+	}
+}
+
 CEffectorPP* CCameraManager::GetPPEffector(EEffectorPPType type)
@@ -234,4 +251,4 @@
 {
-    for (ECamEffectorType index = (ECamEffectorType)effCustomEffectorStartID;
-         GetCamEffector(index);
+	ECamEffectorType index = (ECamEffectorType)effCustomEffectorStartID;
+	for (; GetCamEffector(index);
          index = (ECamEffectorType)(index + 1))
@@ -245,4 +262,4 @@
 {
-    for (EEffectorPPType index = (EEffectorPPType)effCustomEffectorStartID;
-         GetPPEffector(index);
+	EEffectorPPType index = (EEffectorPPType)effCustomEffectorStartID;
+	for (; GetPPEffector(index);
          index = (EEffectorPPType)(index + 1))
@@ -442,3 +460,17 @@
     Device.fASPECT = m_cam_info.fAspect;
-    Device.mProject.build_projection(deg2rad(m_cam_info.fFov), m_cam_info.fAspect, _viewport_near, m_cam_info.fFar);
+	//--#SM+# Begin-- +SecondVP+
+	// Ia?an÷eouâaai FOV äëy âoî?îaî âü?iî?oa [Recalculate scene FOV for SecondVP frame]
+	if (Device.m_SecondViewport.IsSVPFrame())
+	{
+		// Äëy âoî?îaî âü?iî?oa FOV âunoaâëyai çäanü
+		Device.fFOV = g_pGamePersistent->m_pGShaderConstants->hud_params.y;
+
+		// I?aäói?aaäaai ÷oî iu eçiaíeëe íano?îéee eaia?u
+		Device.m_SecondViewport.isCamReady = true;
+	}
+	else
+		Device.m_SecondViewport.isCamReady = false;
+
+	Device.mProject.build_projection(deg2rad(Device.fFOV), m_cam_info.fAspect, _viewport_near, m_cam_info.fFar);
+	//--#SM+# End--
 
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/CameraManager.h xray-monolith/src/xrEngine/CameraManager.h
--- coc-1.4-xray-64/src/xrEngine/CameraManager.h	2023-10-20 20:54:50.459327200 +0100
+++ xray-monolith/src/xrEngine/CameraManager.h	2023-10-20 20:54:32.471035500 +0100
@@ -129,2 +156,5 @@
 
+	// demonized: removecameffector by pointer
+	void RemoveCamEffector(CEffectorCam* ef);
+
     ECamEffectorType RequestCamEffectorId();
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/dedicated_server_only.h xray-monolith/src/xrEngine/dedicated_server_only.h
--- coc-1.4-xray-64/src/xrEngine/dedicated_server_only.h	2023-10-20 20:54:50.496326400 +0100
+++ xray-monolith/src/xrEngine/dedicated_server_only.h	2023-10-20 20:54:32.506036500 +0100
@@ -8,3 +8,4 @@
 #else// #ifdef DEDICATED_SERVER_ONLY
-# define PROTECT_API __declspec(dllexport)
+# define PROTECT_API
+//__declspec(dllexport)
 #endif // #ifdef DEDICATED_SERVER_ONLY
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/defines.cpp xray-monolith/src/xrEngine/defines.cpp
--- coc-1.4-xray-64/src/xrEngine/defines.cpp	2023-10-20 20:54:50.496326400 +0100
+++ xray-monolith/src/xrEngine/defines.cpp	2023-10-20 20:54:32.506036500 +0100
@@ -9,6 +9,8 @@
 //. u32 psCurrentMode = 1024;
-u32 psCurrentVidMode[2] = {1024, 768};
+u32 psCurrentVidMode[2] = {0, 0};
 u32 psCurrentBPP = 32;
 // release version always has "mt_*" enabled
-Flags32 psDeviceFlags = {rsFullscreen | rsDetails | mtPhysics | mtSound | mtNetwork | rsDrawStatic | rsDrawDynamic | rsRefresh60hz};
+Flags32 psDeviceFlags = {
+	rsFullscreen | rsDetails | mtPhysics | mtSound | mtNetwork | rsDrawStatic | rsDrawDynamic
+};
 
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/defines.h xray-monolith/src/xrEngine/defines.h
--- coc-1.4-xray-64/src/xrEngine/defines.h	2023-10-20 20:54:50.497326500 +0100
+++ xray-monolith/src/xrEngine/defines.h	2023-10-20 20:54:32.506036500 +0100
@@ -51,2 +51,19 @@
 ENGINE_API extern Flags32 psDeviceFlags;
+extern Flags32 psDeviceFlags2;
+
+enum
+{
+	rsClearModels = (1 << 0),
+	rsPrecompiledShaders = (1 << 1),
+	rsGrassShadow = (1 << 2),
+	rsNoScale = (1 << 3),
+	rsFxaa = (1 << 4),
+	rsDiscord = (1 << 5),
+	rsKeypress = (1 << 6),
+	rsCODPickup = (1 << 7),
+	rsFeelGrenade = (1 << 8),
+	rsOptShadowGeom = (1 << 9),
+	rsAimSway = (1 << 10),
+	rsAlwaysActive = (1 << 11),
+};
 
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/device.cpp xray-monolith/src/xrEngine/device.cpp
--- coc-1.4-xray-64/src/xrEngine/device.cpp	2023-10-20 20:54:50.497326500 +0100
+++ xray-monolith/src/xrEngine/device.cpp	2023-10-20 20:54:32.507040100 +0100
@@ -2,2 +2,4 @@
 #include "../xrCDB/frustum.h"
+#include "xr_ioconsole.h"
+#include "xr_input.h"
 
@@ -16,3 +18,5 @@
 #include "x_ray.h"
+#include "discord\discord.h"
 #include "render.h"
+#include <chrono>
 
@@ -30,4 +34,2 @@
 
-#include "../build_config_defines.h"
-
 #pragma comment( lib, "d3dx9.lib" )
@@ -43,2 +45,13 @@
 
+extern discord::Core* discord_core;
+extern bool use_discord;
+
+#ifdef ECO_RENDER
+std::chrono::high_resolution_clock::time_point tlastf = std::chrono::high_resolution_clock::now(), tcurrentf = std::
+	                                               chrono::high_resolution_clock::now();
+std::chrono::duration<float> time_span;
+ENGINE_API float refresh_rate = 0;
+#endif // ECO_RENDER
+
+
 BOOL CRenderDevice::Begin()
@@ -112,2 +124,4 @@
             m_pRender->ResourcesDestroyNecessaryTextures();
+
+			Msg("* [x-ray]: Handled Necessary Textures Destruction");
             Memory.mem_compact();
@@ -212,4 +228,69 @@
 
+void GetMonitorResolution(u32& horizontal, u32& vertical)
+{
+	HMONITOR hMonitor = MonitorFromWindow(
+		Device.m_hWnd, MONITOR_DEFAULTTOPRIMARY);
+
+	MONITORINFO mi;
+	mi.cbSize = sizeof(mi);
+	if (GetMonitorInfoA(hMonitor, &mi))
+	{
+		horizontal = mi.rcMonitor.right - mi.rcMonitor.left;
+		vertical = mi.rcMonitor.bottom - mi.rcMonitor.top;
+	}
+	else
+	{
+		RECT desktop;
+		const HWND hDesktop = GetDesktopWindow();
+		GetWindowRect(hDesktop, &desktop);
+		horizontal = desktop.right - desktop.left;
+		vertical = desktop.bottom - desktop.top;
+	}
+}
+
+float GetMonitorRefresh()
+{
+	DEVMODE lpDevMode;
+	memset(&lpDevMode, 0, sizeof(DEVMODE));
+	lpDevMode.dmSize = sizeof(DEVMODE);
+	lpDevMode.dmDriverExtra = 0;
+
+	if (EnumDisplaySettings(NULL, ENUM_CURRENT_SETTINGS, &lpDevMode) == 0)
+	{
+		return 1.f / 60.f;
+	}
+	else
+		return 1.f / lpDevMode.dmDisplayFrequency;
+}
+
+extern int ps_framelimiter;
+extern u32 g_screenmode;
+
+CTimer FreezeTimer;
+void mt_FreezeThread(void *ptr) {
+	float freezetime = 0.f;
+	float repeatcheck = 500.f;
+
+	while (true)
+	{
+		if (g_loading_events.size())
+			freezetime = 25000.0f;
+		else
+			freezetime = 5000.0f;
+
+		repeatcheck = 500.f;
+
+		if (FreezeTimer.GetElapsed_sec()*1000.f > freezetime)
+		{
+			FlushLog();
+			repeatcheck = 5000.f;
+		}
+		Sleep(repeatcheck);
+	}
+}
+
 void CRenderDevice::on_idle()
 {
+	FreezeTimer.Start();
+
     if (!b_is_Ready)
@@ -271,15 +352,42 @@
 #ifdef ECO_RENDER // ECO_RENDER START
-	static u32 time_frame = 0;
-	u32 time_curr = timeGetTime();
-	u32 time_diff = time_curr - time_frame;
-	time_frame = time_curr;
-	u32 optimal = 10;
-	if (Device.Paused() || IsMainMenuActive())
-		optimal = 32;
-	if (time_diff < optimal)
-		Sleep(optimal - time_diff);
-#else
-	Sleep(0);
+	if (Device.Paused() || IsMainMenuActive() || ps_framelimiter)
+	{
+		if (refresh_rate == 0)
+			refresh_rate = GetMonitorRefresh();
+
+		float rr;
+
+		if (ps_framelimiter)
+			rr = 1.f / ps_framelimiter;
+		else
+			rr = refresh_rate;
+
+		time_span = std::chrono::duration_cast<std::chrono::duration<float>>(tcurrentf - tlastf);
+		while (time_span.count() < rr)
+		{
+			tcurrentf = std::chrono::high_resolution_clock::now();
+			time_span = std::chrono::duration_cast<std::chrono::duration<float>>(tcurrentf - tlastf);
+		}
+		tlastf = std::chrono::high_resolution_clock::now();
+	}
 #endif // ECO_RENDER END
 
+	//Discord
+	if (use_discord && psDeviceFlags2.test(rsDiscord))
+	{
+		discord_core->RunCallbacks();
+
+		static float last_update;
+		if (!last_update)
+		{
+			updateDiscordPresence();
+			last_update = Device.fTimeGlobal;
+		}
+		else if ((Device.fTimeGlobal - last_update) > discord_update_rate)
+		{
+			updateDiscordPresence();
+			last_update = Device.fTimeGlobal;
+		}
+	}
+
 #ifndef DEDICATED_SERVER
@@ -334,2 +442,7 @@
 
+void CRenderDevice::Screenshot()
+{
+	Render->Screenshot();
+}
+
 void CRenderDevice::message_loop()
@@ -378,2 +491,3 @@
     mt_bMustExit = FALSE;
+	thread_spawn(mt_FreezeThread, "Freeze detecting thread", 0, 0);
     thread_spawn(mt_Thread, "X-RAY Secondary thread", 0, this);
@@ -467,3 +583,3 @@
         {
-            g_pauseMngr.Pause(TRUE);
+			g_pauseMngr().Pause(true);
 #ifdef DEBUG
@@ -484,6 +600,6 @@
     {
-        if (bTimer && g_pauseMngr.Paused())
+		if (bTimer && g_pauseMngr().Paused())
         {
             fTimeDelta = EPS_S + EPS_S;
-            g_pauseMngr.Pause(FALSE);
+			g_pauseMngr().Pause(false);
         }
@@ -509,8 +625,7 @@
 #endif
-
 }
 
-BOOL CRenderDevice::Paused()
+bool CRenderDevice::Paused()
 {
-    return g_pauseMngr.Paused();
+	return g_pauseMngr().Paused();
 }
@@ -523,2 +638,33 @@
 
+	if (psDeviceFlags2.test(rsAlwaysActive) && g_screenmode != 2)
+	{
+		Device.b_is_Active = TRUE;
+
+		if (Device.b_hide_cursor != bActive)
+		{
+			Device.b_hide_cursor = bActive;
+
+			if (Device.b_hide_cursor)
+			{
+				ShowCursor(FALSE);
+				if (m_hWnd)
+				{
+					RECT winRect;
+					GetClientRect(m_hWnd, &winRect);
+					MapWindowPoints(m_hWnd, nullptr, reinterpret_cast<LPPOINT>(&winRect), 2);
+					ClipCursor(&winRect);
+				}
+				pInput->OnAppActivate();
+			}
+			else
+			{
+				ShowCursor(TRUE);
+				ClipCursor(NULL);
+				pInput->OnAppDeactivate();
+			}
+		}
+
+		return;
+	}
+
     if (bActive != Device.b_is_Active)
@@ -540,3 +686,4 @@
                     RECT winRect;
-                    GetWindowRect(m_hWnd, &winRect);
+				GetClientRect(m_hWnd, &winRect);
+				MapWindowPoints(m_hWnd, nullptr, reinterpret_cast<LPPOINT>(&winRect), 2);
                     ClipCursor(&winRect);
@@ -594 +742,13 @@
 }
\ No newline at end of file
+
+void CRenderDevice::CSecondVPParams::SetSVPActive(bool bState) //--#SM+#-- +SecondVP+
+{
+	isActive = bState;
+	if (g_pGamePersistent != NULL)
+		g_pGamePersistent->m_pGShaderConstants->m_blender_mode.z = (isActive ? 1.0f : 0.0f);
+}
+
+bool CRenderDevice::CSecondVPParams::IsSVPFrame() //--#SM+#-- +SecondVP+
+{
+	return IsSVPActive() && Device.dwFrame % frameDelay == 0;
+}
\ No newline at end of file
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/device.h xray-monolith/src/xrEngine/device.h
--- coc-1.4-xray-64/src/xrEngine/device.h	2023-10-20 20:54:50.498326600 +0100
+++ xray-monolith/src/xrEngine/device.h	2023-10-20 20:54:32.507040100 +0100
@@ -1,2 +1,2 @@
-#ifndef xr_device
+ï»¿#ifndef xr_device
 #define xr_device
@@ -18,3 +18,6 @@
 
+#include "../build_config_defines.h"
+
 #define VIEWPORT_NEAR 0.2f
+#define R_VIEWPORT_NEAR 0.005f
 
@@ -51,2 +53,3 @@
     BOOL b_is_Active;
+	BOOL b_hide_cursor;
 public:
@@ -87,3 +90,3 @@
     //AVO: 
-    CTimer frame_timer;   //TODO: ïðîâåðèòü, íå äóáëèðóåòñÿ-ëè ñõîæèé òàéìåð (alpet)
+	CTimer frame_timer; //TODO: Ã¯Ã°Ã®Ã¢Ã¥Ã°Ã¨Ã²Ã¼, Ã­Ã¥ Ã¤Ã³Ã¡Ã«Ã¨Ã°Ã³Ã¥Ã²Ã±Ã¿-Ã«Ã¨ Ã±ÃµÃ®Ã¦Ã¨Ã© Ã²Ã Ã©Ã¬Ã¥Ã° (alpet)
     //-AVO
@@ -117,2 +119,24 @@
 {
+public:
+	class ENGINE_API CSecondVPParams //--#SM+#-- +SecondVP+
+	{
+		bool isActive; // Oeaa aeoeaaoee ?aiaa?a ai aoi?ie au?ii?o
+		u8 frameDelay;  // Ia eaeii eaa?a n iiiaioa i?ioeiai ?aiaa?a ai aoi?ie au?ii?o iu ia?i?i iiaue
+						  //(ia ii?ao auou iaiuoa 2 - ea?aue aoi?ie eaa?, ?ai aieuoa oai aieaa ieceee FPS ai aoi?ii au?ii?oa)
+
+	public:
+		bool isCamReady; // Oeaa aioiaiinoe eaia?u (FOV, iiceoey, e o.i) e ?aiaa?o aoi?iai au?ii?oa
+
+		IC bool IsSVPActive() { return isActive; }
+		void SetSVPActive(bool bState);
+		bool    IsSVPFrame();
+
+		IC u8 GetSVPFrameDelay() { return frameDelay; }
+		void  SetSVPFrameDelay(u8 iDelay)
+		{
+			frameDelay = iDelay;
+			clamp<u8>(frameDelay, 2, u8(-1));
+		}
+	};	
+	
 private:
@@ -206,2 +231,4 @@
 
+	CSecondVPParams m_SecondViewport;	//--#SM+#-- +SecondVP+
+
     //float fFOV;
@@ -227,4 +254,9 @@
         b_is_Ready = FALSE;
+		b_hide_cursor = FALSE;
         Timer.Start();
         m_bNearer = FALSE;
+		
+		m_SecondViewport.SetSVPActive(false);
+		m_SecondViewport.SetSVPFrameDelay(2);
+		m_SecondViewport.isCamReady = false;			
     };
@@ -232,3 +264,3 @@
     void Pause(BOOL bOn, BOOL bTimer, BOOL bSound, LPCSTR reason);
-    BOOL Paused();
+	bool Paused();
 
@@ -244,2 +276,5 @@
 
+	//Console Screenshot
+	void Screenshot();
+
     // Mode control
@@ -333,2 +368,5 @@
 
+#ifdef ECO_RENDER
+extern ENGINE_API float refresh_rate;
+#endif // ECO_RENDER
 
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/Device_create.cpp xray-monolith/src/xrEngine/Device_create.cpp
--- coc-1.4-xray-64/src/xrEngine/Device_create.cpp	2023-10-20 20:54:50.461326700 +0100
+++ xray-monolith/src/xrEngine/Device_create.cpp	2023-10-20 20:54:32.472035300 +0100
@@ -162,2 +163,5 @@
 
+extern u32 g_screenmode;
+extern void GetMonitorResolution(u32& horizontal, u32& vertical);
+
 PROTECT_API void CRenderDevice::Create()
@@ -200,2 +204,18 @@
 
+	if (g_screenmode == 1)
+	{
+		u32 w, h;
+		GetMonitorResolution(w, h);
+		SetWindowLongPtr(Device.m_hWnd, GWL_STYLE, WS_VISIBLE | WS_POPUP);
+		SetWindowPos(Device.m_hWnd, HWND_TOP, 0, 0, w, h, SWP_FRAMECHANGED);
+	}
+
+	DisableProcessWindowsGhosting();
+
+	RECT winRect;
+	GetClientRect(m_hWnd, &winRect);
+	MapWindowPoints(m_hWnd, nullptr, reinterpret_cast<LPPOINT>(&winRect), 2);
+	ClipCursor(&winRect);
+	SetActiveWindow(m_hWnd);
+
     string_path fname;
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/Device_destroy.cpp xray-monolith/src/xrEngine/Device_destroy.cpp
--- coc-1.4-xray-64/src/xrEngine/Device_destroy.cpp	2023-10-20 20:54:50.461326700 +0100
+++ xray-monolith/src/xrEngine/Device_destroy.cpp	2023-10-20 20:54:32.473036800 +0100
@@ -58,2 +58,5 @@
 extern BOOL bNeed_re_create_env;
+extern u32 g_screenmode;
+extern void GetMonitorResolution(u32& horizontal, u32& vertical);
+
 void CRenderDevice::Reset(bool precache)
@@ -88,9 +90,2 @@
 
-#ifndef DEDICATED_SERVER
-    ShowCursor(FALSE);
-    RECT winRect;
-    GetWindowRect(m_hWnd, &winRect);
-    ClipCursor(&winRect);
-#endif
-
     seqDeviceReset.Process(rp_DeviceReset);
@@ -101,2 +96,18 @@
     }
+
+	if (g_screenmode == 1)
+	{
+		u32 w, h;
+		GetMonitorResolution(w, h);
+		SetWindowLongPtr(Device.m_hWnd, GWL_STYLE, WS_VISIBLE | WS_POPUP);
+		SetWindowPos(Device.m_hWnd, HWND_TOP, 0, 0, w, h, SWP_FRAMECHANGED);
+	}
+
+#ifndef DEDICATED_SERVER
+	ShowCursor(FALSE);
+	RECT winRect;
+	GetClientRect(m_hWnd, &winRect);
+	MapWindowPoints(m_hWnd, nullptr, reinterpret_cast<LPPOINT>(&winRect), 2);
+	ClipCursor(&winRect);
+#endif
 }
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/Device_Initialize.cpp xray-monolith/src/xrEngine/Device_Initialize.cpp
--- coc-1.4-xray-64/src/xrEngine/Device_Initialize.cpp	2023-10-20 20:54:50.460326600 +0100
+++ xray-monolith/src/xrEngine/Device_Initialize.cpp	2023-10-20 20:54:32.472035300 +0100
@@ -72,3 +73,3 @@
         m_hWnd = CreateWindowEx(WS_EX_TOPMOST,
-                                wndclass, "S.T.A.L.K.E.R.: Call of Pripyat", m_dwWindowStyle,
+		                        wndclass, "S.T.A.L.K.E.R.: Anomaly", m_dwWindowStyle,
                                 /*rc.left, rc.top, */CW_USEDEFAULT, CW_USEDEFAULT,
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/Device_Misc.cpp xray-monolith/src/xrEngine/Device_Misc.cpp
--- coc-1.4-xray-64/src/xrEngine/Device_Misc.cpp	2023-10-20 20:54:50.460326600 +0100
+++ xray-monolith/src/xrEngine/Device_Misc.cpp	2023-10-20 20:54:32.472035300 +0100
@@ -13,3 +14,2 @@
 {
-    {"rsFullscreen", rsFullscreen},
     {"rsClearBB", rsClearBB},
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/edit_actions.cpp xray-monolith/src/xrEngine/edit_actions.cpp
--- coc-1.4-xray-64/src/xrEngine/edit_actions.cpp	2023-10-20 20:54:50.499326500 +0100
+++ xray-monolith/src/xrEngine/edit_actions.cpp	2023-10-20 20:54:32.507040100 +0100
@@ -12,2 +12,3 @@
 #include <locale.h>
+#include <locale>
 
@@ -103,3 +103,4 @@
         {
-            if (_isalpha_l(buff[0], current_locale) || buff[0] == char(-1)) // "ÿ" = -1
+				// demonized: add extra check for russian letters
+				if (std::isalpha(buff[0], std::locale("")) || _isalpha_l(buff[0], current_locale) || buff[0] == char(-1)) // "ÿ" = -1
             {
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/Engine.cpp xray-monolith/src/xrEngine/Engine.cpp
--- coc-1.4-xray-64/src/xrEngine/Engine.cpp	2023-10-20 20:54:50.463326700 +0100
+++ xray-monolith/src/xrEngine/Engine.cpp	2023-10-20 20:54:32.475035700 +0100
@@ -27,2 +25,4 @@
 
+extern "C" void __cdecl xrBind_PSGP(xrDispatchTable* T, _processor_info* ID);
+
 PROTECT_API void CEngine::Initialize(void)
@@ -30,5 +30,7 @@
     // Bind PSGP
-    hPSGP = LoadLibrary("xrCPU_Pipe.dll");
-    R_ASSERT(hPSGP);
-    xrBinder* bindCPU = (xrBinder*)GetProcAddress(hPSGP, "xrBind_PSGP");
+	//hPSGP = LoadLibrary("xrCPU_Pipe.dll");
+	hPSGP = 0;
+	//R_ASSERT(hPSGP);
+	//xrBinder* bindCPU = (xrBinder*)GetProcAddress(hPSGP, "xrBind_PSGP");
+	xrBinder* bindCPU = xrBind_PSGP;
     R_ASSERT(bindCPU);
@@ -46,2 +48,4 @@
 
+extern "C" void __cdecl ttapi_Done();
+
 void CEngine::Destroy()
@@ -55,10 +59,11 @@
 
-    if (hPSGP)
+	//if (hPSGP)
     {
-        ttapi_Done_func* ttapi_Done = (ttapi_Done_func*)GetProcAddress(hPSGP, "ttapi_Done");
-        R_ASSERT(ttapi_Done);
-        if (ttapi_Done)
-            ttapi_Done();
+		//ttapi_Done_func* ttapi_Done = (ttapi_Done_func*)GetProcAddress(hPSGP, "ttapi_Done");
+		ttapi_Done_func* ttapiDone = ttapi_Done;
+		R_ASSERT(ttapiDone);
+		if (ttapiDone)
+			ttapiDone();
 
-        FreeLibrary(hPSGP);
+		//FreeLibrary(hPSGP);
         hPSGP = 0;
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/EngineAPI.cpp xray-monolith/src/xrEngine/EngineAPI.cpp
--- coc-1.4-xray-64/src/xrEngine/EngineAPI.cpp	2023-10-20 20:54:50.464326800 +0100
+++ xray-monolith/src/xrEngine/EngineAPI.cpp	2023-10-20 20:54:32.475035700 +0100
@@ -10,2 +10,7 @@
 
+//#define STATIC_RENDERER_R1
+//#define STATIC_RENDERER_R2
+//#define STATIC_RENDERER_R3
+//#define STATIC_RENDERER_R4
+
 extern xr_token* vid_quality_token;
@@ -19,6 +24,71 @@
 };
+
+// xrSound
+// libogg_static.lib;libvorbis_static.lib;libvorbisfile_static.lib;OpenAL32.lib
+// xrPhysics
+// libvorbisfile_static.lib;libogg_static.lib;OpenAL32.lib
+// xrNetServer
+// Ws2_32.lib;dxerr.lib
+// xrEngine
+// vfw32.lib;libogg_static.lib;libtheora_static.lib
+// xrRenderR4
+// dxguid.lib;d3dx11.lib;D3DCompiler.lib;d3d11.lib;dxgi.lib;nvapi.lib;dxerr.lib;d3d10.lib
+// xrRenderR3
+// dxguid.lib;d3dcompiler.lib;d3d10.lib;d3dx10.lib;dxgi.lib;nvapi.lib
+// xrRenderR2
+// nvapi.lib
+// xrRenderR1
+// d3dx9.lib;nvapi.lib
+// OpenAL32
+// version.lib;winmm.lib
+
+#pragma comment(lib, "Ws2_32.lib")
+#pragma comment(lib, "vfw32.lib")
+#pragma comment(lib, "nvapi.lib")
+
+#if !defined(STATIC_RENDERER_R1) && !defined(STATIC_RENDERER_R2) && !defined(STATIC_RENDERER_R3) && !defined(STATIC_RENDERER_R4)
+	#error Select one of the renderers R1, R2, R3, or R4
+#endif
+
+#ifdef STATIC_RENDERER_R1
+#if defined(STATIC_RENDERER_R2) || defined(STATIC_RENDERER_R3) || defined(STATIC_RENDERER_R4)
+		#error Only one of the renderers R1, R2, R3, and R4 can be selected at once
+#endif
+	#pragma comment(lib, "xrRender_R1.lib")
+	#pragma comment(lib, "d3dx9.lib")
+#endif
+#ifdef STATIC_RENDERER_R2
+#if defined(STATIC_RENDERER_R1) || defined(STATIC_RENDERER_R3) || defined(STATIC_RENDERER_R4)
+		#error Only one of the renderers R1, R2, R3, and R4 can be selected at once
+#endif
+	#pragma comment(lib, "xrRender_R2.lib")
+#endif
+#ifdef STATIC_RENDERER_R3
+#if defined(STATIC_RENDERER_R1) || defined(STATIC_RENDERER_R2) || defined(STATIC_RENDERER_R4)
+		#error Only one of the renderers R1, R2, R3, and R4 can be selected at once
+#endif
+#pragma comment(lib, "xrRender_R3.lib")
+#pragma comment(lib, "dxguid.lib")
+#pragma comment(lib, "d3dcompiler.lib")
+#pragma comment(lib, "d3d10.lib")
+#pragma comment(lib, "d3dx10.lib")
+#pragma comment(lib, "dxgi.lib")
+#endif
+#ifdef STATIC_RENDERER_R4
+#if  defined(STATIC_RENDERER_R1) || defined(STATIC_RENDERER_R2) || defined(STATIC_RENDERER_R3)
+		#error Only one of the renderers R1, R2, R3, and R4 can be selected at once
+#endif
+	#pragma comment(lib, "xrRender_R4.lib")
+	#pragma comment(lib, "dxguid.lib")
+	#pragma comment(lib, "d3dx11.lib")
+	#pragma comment(lib, "D3DCompiler.lib")
+	#pragma comment(lib, "d3d11.lib")
+	#pragma comment(lib, "dxgi.lib")
+	#pragma comment(lib, "d3d10.lib")
+#endif
+
 CEngineAPI::CEngineAPI()
 {
-    hGame = 0;
-    hRender = 0;
+	//hGame = 0;
+	//hRender = 0;
     hTuner = 0;
@@ -45,5 +115,6 @@
 {
-    SYSTEM_INFO system_info;
-        GetSystemInfo(&system_info);
-        return (*(u32*)&system_info.lpMaximumApplicationAddress) > 0x90000000;
+	return true; // we are on 64 bit, so it's always true
+	//SYSTEM_INFO system_info;
+	//    GetSystemInfo(&system_info);
+	//    return (*(u32*)&system_info.lpMaximumApplicationAddress) > 0x90000000;
 }
@@ -52,2 +123,20 @@
 
+extern BOOL DllMainXrRenderR1(HANDLE hModule, DWORD ul_reason_for_call, LPVOID lpReserved);
+extern BOOL DllMainXrRenderR2(HANDLE hModule, DWORD ul_reason_for_call, LPVOID lpReserved);
+extern BOOL DllMainXrRenderR3(HANDLE hModule, DWORD ul_reason_for_call, LPVOID lpReserved);
+extern BOOL DllMainXrRenderR4(HANDLE hModule, DWORD ul_reason_for_call, LPVOID lpReserved);
+
+#ifdef STATIC_RENDERER_R1
+	#define DLL_MAIN_RENDERER DllMainXrRenderR1
+#endif
+#ifdef STATIC_RENDERER_R2
+	#define DLL_MAIN_RENDERER DllMainXrRenderR2
+#endif
+#ifdef STATIC_RENDERER_R3
+#define DLL_MAIN_RENDERER DllMainXrRenderR3
+#endif
+#ifdef STATIC_RENDERER_R4
+	#define DLL_MAIN_RENDERER DllMainXrRenderR4
+#endif
+
 void CEngineAPI::InitializeNotDedicated()
@@ -57,45 +146,59 @@
     LPCSTR r4_name = "xrRender_R4.dll";
-    if (psDeviceFlags.test(rsR4))
+#ifdef STATIC_RENDERER_R4
+	//if (psDeviceFlags.test(rsR4))
     {
         // try to initialize R4
+		psDeviceFlags.set(rsR2, FALSE);
+		psDeviceFlags.set(rsR3, FALSE);
         Log("Loading DLL:", r4_name);
-        hRender = LoadLibrary(r4_name);
-        if (0 == hRender)
-        {
-            // try to load R1
-            Msg("! ...Failed - incompatible hardware/pre-Vista OS.");
-            psDeviceFlags.set(rsR2, TRUE);
-        }
+		DllMainXrRenderR4(NULL, DLL_PROCESS_ATTACH, NULL);
+        //hRender = LoadLibrary(r4_name);
+	//if (0 == hRender)
+	//{
+	//    // try to load R1
+	//    Msg("! ...Failed - incompatible hardware/pre-Vista OS.");
+	//    psDeviceFlags.set(rsR2, TRUE);
+        //}
+		g_current_renderer = 0;
     }
+#endif
 
-    if (psDeviceFlags.test(rsR3))
+#ifdef STATIC_RENDERER_R3
+	//if (psDeviceFlags.test(rsR3))
     {
         // try to initialize R3
+		psDeviceFlags.set(rsR2, FALSE);
+		psDeviceFlags.set(rsR4, FALSE);
         Log("Loading DLL:", r3_name);
-        hRender = LoadLibrary(r3_name);
-        if (0 == hRender)
-        {
-            // try to load R1
-            Msg("! ...Failed - incompatible hardware/pre-Vista OS.");
-            psDeviceFlags.set(rsR2, TRUE);
-        }
-        else
+		DllMainXrRenderR3(NULL, DLL_PROCESS_ATTACH, NULL);
+		//hRender = LoadLibrary(r3_name);
+		//if (0 == hRender)
+		//{
+		//    // try to load R1
+		//    Msg("! ...Failed - incompatible hardware/pre-Vista OS.");
+		//    psDeviceFlags.set(rsR2, TRUE);
+		//}
+		//else
             g_current_renderer = 3;
     }
+#endif
 
-    if (psDeviceFlags.test(rsR2))
+#ifdef STATIC_RENDERER_R2
+	//if (psDeviceFlags.test(rsR2))
     {
         // try to initialize R2
-        psDeviceFlags.set(rsR4, FALSE);
         psDeviceFlags.set(rsR3, FALSE);
+		psDeviceFlags.set(rsR4, FALSE);
         Log("Loading DLL:", r2_name);
-        hRender = LoadLibrary(r2_name);
-        if (0 == hRender)
-        {
-            // try to load R1
-            Msg("! ...Failed - incompatible hardware.");
-        }
-        else
+		DllMainXrRenderR2(NULL, DLL_PROCESS_ATTACH, NULL);
+		//hRender = LoadLibrary(r2_name);
+	//if (0 == hRender)
+	//{
+	//    // try to load R1
+	//    Msg("! ...Failed - incompatible hardware.");
+	//}
+        //else
             g_current_renderer = 2;
     }
+#endif
 }
@@ -103,2 +206,9 @@
 
+extern BOOL DllMainXrGame(HANDLE hModule, u32 ul_reason_for_call, LPVOID lpReserved);
+
+extern "C"
+DLL_Pure* __cdecl xrFactory_Create(CLASS_ID clsid);
+extern "C"
+void __cdecl xrFactory_Destroy(DLL_Pure* O);
+
 
@@ -114,3 +224,4 @@
 
-    if (0 == hRender)
+#ifdef STATIC_RENDERER_R1
+	//if (0 == hRender)
     {
@@ -123,7 +234,9 @@
         Log("Loading DLL:", r1_name);
-        hRender = LoadLibrary(r1_name);
-        if (0 == hRender) R_CHK(GetLastError());
-        R_ASSERT(hRender);
+		DllMainXrRenderR1(NULL, DLL_PROCESS_ATTACH, NULL);
+		//hRender = LoadLibrary(r1_name);
+	//if (0 == hRender) R_CHK(GetLastError());
+        //R_ASSERT(hRender);
         g_current_renderer = 1;
     }
+#endif
 
@@ -135,8 +248,11 @@
         Log("Loading DLL:", g_name);
-        hGame = LoadLibrary(g_name);
-        if (0 == hGame) R_CHK(GetLastError());
-        R_ASSERT2(hGame, "Game DLL raised exception during loading or there is no game DLL at all");
-        pCreate = (Factory_Create*)GetProcAddress(hGame, "xrFactory_Create");
+		//hGame = LoadLibrary(g_name);
+		DllMainXrGame(NULL, DLL_PROCESS_ATTACH, NULL);
+		//if (0 == hGame) R_CHK(GetLastError());
+		//R_ASSERT2(hGame, "Game DLL raised exception during loading or there is no game DLL at all");
+		//pCreate = (Factory_Create*)GetProcAddress(hGame, "xrFactory_Create");
+		pCreate = xrFactory_Create;
         R_ASSERT(pCreate);
-        pDestroy = (Factory_Destroy*)GetProcAddress(hGame, "xrFactory_Destroy");
+		//pDestroy = (Factory_Destroy*)GetProcAddress(hGame, "xrFactory_Destroy");
+		pDestroy = xrFactory_Destroy;
         R_ASSERT(pDestroy);
@@ -164,4 +281,6 @@
 {
-    if (hGame) { FreeLibrary(hGame); hGame = 0; }
-    if (hRender) { FreeLibrary(hRender); hRender = 0; }
+	//if (hGame) { FreeLibrary(hGame); hGame = 0; }
+	DllMainXrGame(NULL, DLL_PROCESS_DETACH, NULL);
+	//if (hRender) { FreeLibrary(hRender); hRender = 0; }
+	DLL_MAIN_RENDERER(NULL, DLL_PROCESS_DETACH, NULL);
     pCreate = 0;
@@ -173,5 +292,18 @@
 extern "C" {
-    typedef bool __cdecl SupportsAdvancedRendering(void);
-    typedef bool _declspec(dllexport) SupportsDX10Rendering();
-    typedef bool _declspec(dllexport) SupportsDX11Rendering();
+typedef bool __cdecl SupportsAdvancedRenderingREF(void);
+typedef bool /*_declspec(dllexport)*/ SupportsDX10RenderingREF();
+typedef bool /*_declspec(dllexport)*/ SupportsDX11RenderingREF();
+};
+
+extern "C" {
+#ifdef STATIC_RENDERER_R2
+	bool /*_declspec(dllexport)*/ SupportsAdvancedRendering();
+#endif
+#ifdef STATIC_RENDERER_R3
+bool /*_declspec(dllexport)*/ SupportsDX10Rendering();
+
+#endif
+#ifdef STATIC_RENDERER_R4
+	bool /*_declspec(dllexport)*/ SupportsDX11Rendering();
+#endif
 };
@@ -211,14 +343,19 @@
     {
+#ifdef STATIC_RENDERER_R2
         // try to initialize R2
         Log("Loading DLL:", r2_name);
-        hRender = LoadLibrary(r2_name);
-        if (hRender)
+        //hRender = LoadLibrary(r2_name);
+		DllMainXrRenderR2(NULL, DLL_PROCESS_ATTACH, NULL);
+        //if (hRender)
         {
             bSupports_r2 = true;
-            SupportsAdvancedRendering* test_rendering = (SupportsAdvancedRendering*)GetProcAddress(hRender, "SupportsAdvancedRendering");
+            //SupportsAdvancedRenderingREF* test_rendering = (SupportsAdvancedRenderingREF*)GetProcAddress(hRender, "SupportsAdvancedRendering");
+            SupportsAdvancedRenderingREF* test_rendering = SupportsAdvancedRendering;
             R_ASSERT(test_rendering);
             bSupports_r2_5 = test_rendering();
-            FreeLibrary(hRender);
+            //FreeLibrary(hRender);
         }
+#endif
 
+#ifdef STATIC_RENDERER_R3
         // try to initialize R3
@@ -227,13 +364,17 @@
         SetErrorMode(SEM_FAILCRITICALERRORS);
-        hRender = LoadLibrary(r3_name);
+		//hRender = LoadLibrary(r3_name);
+		DllMainXrRenderR3(NULL, DLL_PROCESS_ATTACH, NULL);
         // Restore error handling
         SetErrorMode(0);
-        if (hRender)
+		//if (hRender)
         {
-            SupportsDX10Rendering* test_dx10_rendering = (SupportsDX10Rendering*)GetProcAddress(hRender, "SupportsDX10Rendering");
+			//SupportsDX10RenderingREF* test_dx10_rendering = (SupportsDX10RenderingREF*)GetProcAddress(hRender, "SupportsDX10Rendering");
+			SupportsDX10RenderingREF* test_dx10_rendering = SupportsDX10Rendering;
             R_ASSERT(test_dx10_rendering);
             bSupports_r3 = test_dx10_rendering();
-            FreeLibrary(hRender);
+			//FreeLibrary(hRender);
         }
+#endif
 
+#ifdef STATIC_RENDERER_R4
         // try to initialize R4
@@ -242,18 +383,24 @@
         SetErrorMode(SEM_FAILCRITICALERRORS);
-        hRender = LoadLibrary(r4_name);
+        //hRender = LoadLibrary(r4_name);
+		DllMainXrRenderR4(NULL, DLL_PROCESS_ATTACH, NULL);
         // Restore error handling
         SetErrorMode(0);
-        if (hRender)
+        //if (hRender)
         {
-            SupportsDX11Rendering* test_dx11_rendering = (SupportsDX11Rendering*)GetProcAddress(hRender, "SupportsDX11Rendering");
+            //SupportsDX11RenderingREF* test_dx11_rendering = (SupportsDX11RenderingREF*)GetProcAddress(hRender, "SupportsDX11Rendering");
+            SupportsDX11RenderingREF* test_dx11_rendering = SupportsDX11Rendering;
             R_ASSERT(test_dx11_rendering);
             bSupports_r4 = test_dx11_rendering();
-            FreeLibrary(hRender);
+            //FreeLibrary(hRender);
         }
+#endif
     }
 
-    hRender = 0;
+	//hRender = 0;
     bool proceed = true;
     xr_vector<LPCSTR> _tmp;
+#ifdef STATIC_RENDERER_R1
     _tmp.push_back("renderer_r1");
+#endif
+#ifdef STATIC_RENDERER_R2
     if (proceed &= bSupports_r2, proceed)
@@ -265,6 +412,13 @@
         _tmp.push_back("renderer_r2.5");
+#endif
+#ifdef STATIC_RENDERER_R3
     if (proceed &= bSupports_r3, proceed)
         _tmp.push_back("renderer_r3");
+#endif
+#ifdef STATIC_RENDERER_R4
     if (proceed &= bSupports_r4, proceed)
         _tmp.push_back("renderer_r4");
+#endif
+
+	R_ASSERT2(_tmp.size() != 0, "No valid renderer found, please use a render system that's supported by your PC");
     
@@ -276,5 +430,5 @@
 
-#ifdef DEBUG
+	//#ifdef DEBUG
     Msg("Available render modes[%d]:", _tmp.size());
-#endif // DEBUG
+	//#endif // DEBUG
     for (u32 i = 0; i < _tmp.size(); ++i)
@@ -283,5 +437,5 @@
         vid_quality_token[i].name = _tmp[i];
-#ifdef DEBUG
+		//#ifdef DEBUG
         Msg("[%s]", _tmp[i]);
-#endif // DEBUG
+		//#endif // DEBUG
     }
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/EngineAPI.h xray-monolith/src/xrEngine/EngineAPI.h
--- coc-1.4-xray-64/src/xrEngine/EngineAPI.h	2023-10-20 20:54:50.464326800 +0100
+++ xray-monolith/src/xrEngine/EngineAPI.h	2023-10-20 20:54:32.476036800 +0100
@@ -37,4 +40,4 @@
 private:
-    HMODULE hGame;
-    HMODULE hRender;
+	//HMODULE hGame;
+	//HMODULE hRender;
     HMODULE hTuner;
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/Envelope.cpp xray-monolith/src/xrEngine/Envelope.cpp
--- coc-1.4-xray-64/src/xrEngine/Envelope.cpp	2023-10-20 20:54:50.465326800 +0100
+++ xray-monolith/src/xrEngine/Envelope.cpp	2023-10-20 20:54:32.476036800 +0100
@@ -62,3 +62,4 @@
 {
-    for (KeyIt k_it = keys.begin(); k_it != keys.end(); k_it++)
+	KeyIt k_it = keys.begin();
+	for (; k_it != keys.end(); k_it++)
     {
@@ -114,3 +115,4 @@
         float offset = 0;
-        for (KeyIt it = min_k + 1; it != max_k; it++)
+		KeyIt it = min_k + 1;
+		for (; it != max_k; it++)
         {
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/Environment.cpp xray-monolith/src/xrEngine/Environment.cpp
--- coc-1.4-xray-64/src/xrEngine/Environment.cpp	2023-10-20 20:54:50.465326800 +0100
+++ xray-monolith/src/xrEngine/Environment.cpp	2023-10-20 20:54:32.477036300 +0100
@@ -76,2 +76,4 @@
 
+	wetness_factor = 0.f;
+
     wind_blast_strength = 0.f;
@@ -143,2 +145,13 @@
         );
+	m_sun_pos_config =
+		xr_new<CInifile>(
+			FS.update_path(
+				file_name,
+				"$game_config$",
+				"environment\\sun_positions.ltx"
+			),
+			TRUE,
+			TRUE,
+			FALSE
+		);
     m_thunderbolt_collections_config =
@@ -212,2 +225,6 @@
 
+	VERIFY(m_sun_pos_config);
+	CInifile::Destroy(m_sun_pos_config);
+	m_sun_pos_config = 0;
+
     VERIFY(m_thunderbolt_collections_config);
@@ -296,3 +314,3 @@
         }
-        R_ASSERT3(it != WeatherCycles.end(), "Invalid weather name.", *name);
+		// R_ASSERT3(it != WeatherCycles.end(), "Invalid weather name.", *name);
         CurrentCycleName = it->first;
@@ -312,3 +330,3 @@
 #ifndef _EDITOR
-        FATAL("! Empty weather name");
+		Msg("! Empty weather name");
 #endif
@@ -509,3 +530,6 @@
     // final lerp
+	if (!m_paused)
     CurrentEnv->lerp(this, *Current[0], *Current[1], current_weight, EM, mpower);
+
+	//Msg("Puddles amount: %f", wetness_factor);
 }
@@ -545,3 +569,3 @@
 #ifdef DYNAMIC_SUN_MOVEMENT
-    if (!::Render->is_sun_static())
+    if (!::Render->is_sun_static() && fGameTime > 18000.f && fGameTime < 79000.f)
         calculate_dynamic_sun_dir();
@@ -567,5 +591,17 @@
 
-    shared_str l_id = (current_weight < 0.5f) ? Current[0]->lens_flare_id : Current[1]->lens_flare_id;
+	shared_str l_id;
+	shared_str t_id;
+	if (m_paused)
+	{
+		l_id = CurrentEnv->lens_flare_id;
+		t_id = CurrentEnv->tb_id;
+	}
+	else
+	{
+		calculate_config_sun_dir();
+		l_id = (current_weight < 0.5f) ? Current[0]->lens_flare_id : Current[1]->lens_flare_id;
+		t_id = (current_weight < 0.5f) ? Current[0]->tb_id : Current[1]->tb_id;
+	}
+
     eff_LensFlare->OnFrame(l_id);
-    shared_str t_id = (current_weight < 0.5f) ? Current[0]->tb_id : Current[1]->tb_id;
     eff_Thunderbolt->OnFrame(t_id, CurrentEnv->bolt_period, CurrentEnv->bolt_duration);
@@ -577,2 +613,38 @@
 
+void CEnvironment::calculate_config_sun_dir()
+{
+	float current_time = fGameTime / (DAY_LENGTH / 24);
+	int weather_time = floor(current_time);
+	float s_weight = current_time - weather_time;
+
+	float real_sun_alt, real_sun_long;
+	float s_alt = sun_hp[weather_time].x;
+	float s_long = sun_hp[weather_time].y;
+
+	if (s_weight > 0)
+	{
+		int next_hour = weather_time == 23 ? 0 : weather_time + 1;
+		float s_alt2 = sun_hp[next_hour].x;
+		float s_long2 = sun_hp[next_hour].y;
+
+		real_sun_alt = _lerp(s_alt, s_alt2, s_weight);
+		real_sun_long = _lerp(s_long, s_long2, s_weight);
+	}
+	else
+	{
+		real_sun_alt = s_alt;
+		real_sun_long = s_long;
+	}
+
+	R_ASSERT(_valid(real_sun_alt));
+	R_ASSERT(_valid(real_sun_long));
+
+	CurrentEnv->sun_dir.setHP(
+		deg2rad(real_sun_alt),
+		deg2rad(real_sun_long)
+	);
+
+	R_ASSERT(_valid(CurrentEnv->sun_dir));
+}
+
 void CEnvironment::calculate_dynamic_sun_dir()
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/Environment.h xray-monolith/src/xrEngine/Environment.h
--- coc-1.4-xray-64/src/xrEngine/Environment.h	2023-10-20 20:54:50.466326400 +0100
+++ xray-monolith/src/xrEngine/Environment.h	2023-10-20 20:54:32.477036300 +0100
@@ -159,2 +180,5 @@
 
+	float volumetric_intensity_factor;
+	float volumetric_distance_factor;
+
     Fvector3 ambient;
@@ -166,2 +190,6 @@
 
+	float m_fHemiVibrance;
+	float m_fHemiContrast;
+	float m_fWetSurfaces;
+
 #ifdef TREE_WIND_EFFECT
@@ -211,3 +240,5 @@
     CEnvDescriptorMixer(shared_str const& identifier);
-    INGAME_EDITOR_VIRTUAL void lerp(CEnvironment* parent, CEnvDescriptor& A, CEnvDescriptor& B, float f, CEnvModifier& M, float m_power);
+	INGAME_EDITOR_VIRTUAL void lerp(CEnvironment* parent, CEnvDescriptor& A, CEnvDescriptor& B, float f,
+	                                CEnvModifier& M, float m_power);
+	void boost(CEnvironment* env);
     void clear();
@@ -242,2 +275,3 @@
     void calculate_dynamic_sun_dir();
+	void calculate_config_sun_dir();
 public:
@@ -262,2 +298,4 @@
 
+	float wetness_factor;
+
     // wind blast params
@@ -307,2 +345,3 @@
     INGAME_EDITOR_VIRTUAL void unload();
+	INGAME_EDITOR_VIRTUAL void Reload();
 
@@ -346,2 +385,18 @@
     bool m_paused;
+
+	float GetGameTime() { return fGameTime; }
+
+	struct boost_values
+	{
+		float ambient;
+		float hemi;
+		float clouds_color;
+		float fog_color;
+		float rain_color;
+		float sky_color;
+		float sun_color;
+	} env_boost;
+
+	Fvector2 sun_hp[24];
+
 #endif // #ifdef _EDITOR
@@ -352,2 +407,3 @@
     CInifile* m_suns_config;
+	CInifile* m_sun_pos_config;
     CInifile* m_thunderbolt_collections_config;
@@ -357,2 +413,3 @@
     INGAME_EDITOR_VIRTUAL CEnvDescriptor* create_descriptor(shared_str const& identifier, CInifile* config);
+	void load_sun();
     INGAME_EDITOR_VIRTUAL void load_weathers();
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/Environment_misc.cpp xray-monolith/src/xrEngine/Environment_misc.cpp
--- coc-1.4-xray-64/src/xrEngine/Environment_misc.cpp	2023-10-20 20:54:50.466326400 +0100
+++ xray-monolith/src/xrEngine/Environment_misc.cpp	2023-10-20 20:54:32.478035500 +0100
@@ -16,2 +16,3 @@
 extern float ps_r2_sun_shafts_value;
+extern Fvector3 ssfx_wetness_multiplier;
 
@@ -240,4 +241,10 @@
 
+	m_fHemiVibrance	= 1.f;
+	m_fHemiContrast	= 1.f;
+	m_fWetSurfaces	= 0.f; ///no extra gloss
+	volumetric_intensity_factor = 1.f;
+	volumetric_distance_factor = 1.f;
+
 #ifdef TREE_WIND_EFFECT
-    m_fTreeAmplitudeIntensity = 0.01;
+	m_fTreeAmplitudeIntensity = 0.01f;
 #endif
@@ -250,3 +257,4 @@
 
-#define C_CHECK(C) if (C.x<0 || C.x>2 || C.y<0 || C.y>2 || C.z<0 || C.z>2) { Msg("! Invalid '%s' in env-section '%s'",#C,m_identifier.c_str());}
+#define C_CHECK(C) if (C.x<0 || C.x>5 || C.y<0 || C.y>5 || C.z<0 || C.z>5) { Msg("! Invalid '%s' in env-section '%s'",#C,m_identifier.c_str());}
+
 void CEnvDescriptor::load(CEnvironment& environment, CInifile& config)
@@ -287,21 +297,13 @@
     sun_color = config.r_fvector3(m_identifier.c_str(), "sun_color");
-    // if (config.line_exist(m_identifier.c_str(),"sun_altitude"))
-    sun_dir.setHP(
-        deg2rad(config.r_float(m_identifier.c_str(), "sun_altitude")),
-        deg2rad(config.r_float(m_identifier.c_str(), "sun_longitude"))
-        );
-    R_ASSERT(_valid(sun_dir));
-    // else
-    // sun_dir.setHP (
-    // deg2rad(config.r_fvector2(m_identifier.c_str(),"sun_dir").y),
-    // deg2rad(config.r_fvector2(m_identifier.c_str(),"sun_dir").x)
-    // );
-    //AVO: commented to allow COC run in debug. I belive Cromm set longtitude to negative value in AF3 and that's why it is failing here
-    //VERIFY2(sun_dir.y < 0, "Invalid sun direction settings while loading");
 
-    lens_flare_id = environment.eff_LensFlare->AppendDef(environment, environment.m_suns_config, config.r_string(m_identifier.c_str(), "sun"));
-    tb_id = environment.eff_Thunderbolt->AppendDef(environment, environment.m_thunderbolt_collections_config, environment.m_thunderbolts_config, config.r_string(m_identifier.c_str(), "thunderbolt_collection"));
+	lens_flare_id = environment.eff_LensFlare->AppendDef(environment, environment.m_suns_config,
+	                                                     config.r_string(m_identifier.c_str(), "sun"));
+	tb_id = environment.eff_Thunderbolt->AppendDef(environment, environment.m_thunderbolt_collections_config,
+	                                               environment.m_thunderbolts_config,
+	                                               config.r_string(m_identifier.c_str(), "thunderbolt_collection"));
     bolt_period = (tb_id.size()) ? config.r_float(m_identifier.c_str(), "thunderbolt_period") : 0.f;
     bolt_duration = (tb_id.size()) ? config.r_float(m_identifier.c_str(), "thunderbolt_duration") : 0.f;
-    env_ambient = config.line_exist(m_identifier.c_str(), "ambient") ? environment.AppendEnvAmb(config.r_string(m_identifier.c_str(), "ambient")) : 0;
+	env_ambient = config.line_exist(m_identifier.c_str(), "ambient")
+		              ? environment.AppendEnvAmb(config.r_string(m_identifier.c_str(), "ambient"))
+		              : 0;
 
@@ -313,2 +315,19 @@
 
+
+	//lemurten
+	if (config.line_exist(m_identifier.c_str(), "hemi_vibrance"))
+		m_fHemiVibrance = config.r_float(m_identifier.c_str(), "hemi_vibrance");
+
+	if (config.line_exist(m_identifier.c_str(), "hemi_contrast"))
+		m_fHemiContrast = config.r_float(m_identifier.c_str(), "hemi_contrast");
+
+	if (config.line_exist(m_identifier.c_str(), "wet_surface_factor"))
+		m_fWetSurfaces = config.r_float(m_identifier.c_str(), "wet_surface_factor");
+
+	if (config.line_exist(m_identifier.c_str(), "volumetric_intensity_factor"))
+		volumetric_intensity_factor = config.r_float(m_identifier.c_str(), "volumetric_intensity_factor");
+
+	if (config.line_exist(m_identifier.c_str(), "volumetric_distance_factor"))
+		volumetric_distance_factor = config.r_float(m_identifier.c_str(), "volumetric_distance_factor");
+
 #ifdef TREE_WIND_EFFECT
@@ -403,3 +422,4 @@
 
-void CEnvDescriptorMixer::lerp(CEnvironment*, CEnvDescriptor& A, CEnvDescriptor& B, float f, CEnvModifier& Mdf, float modifier_power)
+void CEnvDescriptorMixer::lerp(CEnvironment* env, CEnvDescriptor& A, CEnvDescriptor& B, float f, CEnvModifier& Mdf,
+                               float modifier_power)
 {
@@ -407,18 +427,3 @@
     float fi = 1 - f;
-
     m_pDescriptorMixer->lerp(&*A.m_pDescriptor, &*B.m_pDescriptor);
-    /*
-    sky_r_textures.clear ();
-    sky_r_textures.push_back (mk_pair(0,A.sky_texture));
-    sky_r_textures.push_back (mk_pair(1,B.sky_texture));
-
-    sky_r_textures_env.clear ();
-
-    sky_r_textures_env.push_back(mk_pair(0,A.sky_texture_env));
-    sky_r_textures_env.push_back(mk_pair(1,B.sky_texture_env));
-
-    clouds_r_textures.clear ();
-    clouds_r_textures.push_back (mk_pair(0,A.clouds_texture));
-    clouds_r_textures.push_back (mk_pair(1,B.clouds_texture));
-    */
 
@@ -430,3 +435,2 @@
 
-    //. far_plane = (fi*A.far_plane + f*B.far_plane + Mdf.far_plane)*psVisDistance*modif_power;
     if (Mdf.use_flags.test(eViewDist))
@@ -436,3 +440,2 @@
 
-    //. fog_color.lerp (A.fog_color,B.fog_color,f).add(Mdf.fog_color).mul(modif_power);
     fog_color.lerp(A.fog_color, B.fog_color, f);
@@ -441,3 +444,2 @@
 
-    //. fog_density = (fi*A.fog_density + f*B.fog_density + Mdf.fog_density)*modif_power;
     fog_density = (fi*A.fog_density + f*B.fog_density);
@@ -450,2 +452,3 @@
     fog_distance = (fi*A.fog_distance + f*B.fog_distance);
+	clamp(fog_distance, 1.f, far_plane - 10);
     fog_near = (1.0f - fog_density)*0.85f * fog_distance;
@@ -455,5 +458,6 @@
     rain_color.lerp(A.rain_color, B.rain_color, f);
+
     bolt_period = fi*A.bolt_period + f*B.bolt_period;
     bolt_duration = fi*A.bolt_duration + f*B.bolt_duration;
-    // wind
+
     wind_velocity = fi*A.wind_velocity + f*B.wind_velocity;
@@ -469,2 +473,9 @@
 
+	m_fHemiVibrance = fi*A.m_fHemiVibrance + f*B.m_fHemiVibrance;
+	m_fHemiContrast = fi*A.m_fHemiContrast + f*B.m_fHemiContrast;
+	m_fWetSurfaces = fi*A.m_fWetSurfaces + f*B.m_fWetSurfaces;
+
+	volumetric_intensity_factor = fi*A.volumetric_intensity_factor + f*B.volumetric_intensity_factor;
+	volumetric_distance_factor = fi*A.volumetric_distance_factor + f*B.volumetric_distance_factor;
+
 #ifdef TREE_WIND_EFFECT
@@ -474,3 +485,2 @@
     // colors
-    //. sky_color.lerp (A.sky_color,B.sky_color,f).add(Mdf.sky_color).mul(modif_power);
     sky_color.lerp(A.sky_color, B.sky_color, f);
@@ -479,3 +489,2 @@
 
-    //. ambient.lerp (A.ambient,B.ambient,f).add(Mdf.ambient).mul(modif_power);
     ambient.lerp(A.ambient, B.ambient, f);
@@ -498,8 +507,68 @@
 
-    R_ASSERT(_valid(A.sun_dir));
-    R_ASSERT(_valid(B.sun_dir));
-    sun_dir.lerp(A.sun_dir, B.sun_dir, f).normalize();
-    R_ASSERT(_valid(sun_dir));
+	if (rain_density > 0.f)
+		env->wetness_factor += ( rain_density * ssfx_wetness_multiplier.x) / 10000.f;
+	else
+		env->wetness_factor -= 0.0001f * ssfx_wetness_multiplier.y;
+
+	clamp(env->wetness_factor, 0.f, 1.f);
+
+	//Brightness adjustment
+	boost(env);
+}
+
+void CEnvDescriptorMixer::boost(CEnvironment* env)
+{
+	//Sky color brightness adjustment
+	if (env->env_boost.sky_color != 0.f)
+	{
+		sky_color.add(env->env_boost.sky_color);
+		sky_color.clamp({0.f, 0.f, 0.f}, {1.f, 1.f, 1.f});
+	}
+	
+	//Clouds color brightness adjustment
+	if (env->env_boost.clouds_color != 0.f)
+	{
+		clouds_color.add(env->env_boost.clouds_color);
+		clouds_color.clamp({0.f, 0.f, 0.f,0.f}, {1.f, 1.f, 1.f, 1.f});
+	}
+
+	//Ambient color brightness adjustment
+	if (env->env_boost.ambient != 0.f)
+	{
+		ambient.add(env->env_boost.ambient);
+		ambient.clamp({0.f, 0.f, 0.f}, {1.f, 1.f, 1.f});
+	}
+
+	//Hemi color brightness adjustment
+	if (env->env_boost.hemi != 0.f)
+	{
+		float adj = hemi_color.w;
+		hemi_color.add(env->env_boost.hemi);
+		hemi_color.w = adj;
+		clamp(hemi_color.x, 0.f, 1.f);
+		clamp(hemi_color.y, 0.f, 1.f);
+		clamp(hemi_color.z, 0.f, 1.f);
+	}
+
+	//Sun color brightness adjustment
+	if (env->env_boost.sun_color != 0.f)
+	{
+		sun_color.add(env->env_boost.sun_color);
+		sun_color.clamp({0.f, 0.f, 0.f}, {1.f, 1.f, 1.f});
+	}
+
+	//Rain color brightness adjustment
+	if (env->env_boost.rain_color != 0.f)
+	{
+		rain_color.add(env->env_boost.rain_color);
+		rain_color.clamp({0.f, 0.f, 0.f}, {1.f, 1.f, 1.f});
+	}
+
+	//Fog color brightness adjustment
+	if (env->env_boost.fog_color != 0.f)
+	{
+		fog_color.add(env->env_boost.fog_color);
+		fog_color.clamp({0.f, 0.f, 0.f}, {1.f, 1.f, 1.f});
+	}
 
-    VERIFY2(sun_dir.y < 0, "Invalid sun direction settings while lerp");
 }
@@ -609,2 +679,21 @@
 
+void CEnvironment::load_sun()
+{
+	int i = 0;
+	do
+	{
+		char sun_identifier[10];
+		sprintf(sun_identifier, i >= 10 ? "%d:00:00" : "0%d:00:00", i);
+
+		float sun_alt = m_sun_pos_config->r_float(sun_identifier, "sun_altitude");
+		float sun_long = m_sun_pos_config->r_float(sun_identifier, "sun_longitude");
+
+		R_ASSERT(_valid(sun_alt));
+		R_ASSERT(_valid(sun_long));
+		sun_hp[i].set(sun_alt, sun_long);
+		i++;
+	}
+	while (i < 24);
+}
+
 void CEnvironment::load_weathers()
@@ -623,7 +712,10 @@
         u32 length = xr_strlen(*i);
-        VERIFY(length >= 4);
-        VERIFY((*i)[length - 4] == '.');
-        VERIFY((*i)[length - 3] == 'l');
-        VERIFY((*i)[length - 2] == 't');
-        VERIFY((*i)[length - 1] == 'x');
+
+		if (!((length >= 4) &&
+			((*i)[length - 4] == '.') &&
+			((*i)[length - 3] == 'l') &&
+			((*i)[length - 2] == 't') &&
+			((*i)[length - 1] == 'x')))
+			continue;
+
         id.assign(*i, length - 4);
@@ -763,2 +854,3 @@
     load_weather_effects();
+	load_sun();
 }
@@ -803 +895,18 @@
 }
+
+void CEnvironment::Reload()
+{
+	EnvsMapIt _I, _E;
+	// clear weathers
+	_I = WeatherCycles.begin();
+	_E = WeatherCycles.end();
+	for (; _I != _E; _I++)
+	{
+		for (EnvIt it = _I->second.begin(); it != _I->second.end(); it++)
+			xr_delete(*it);
+	}
+
+	WeatherCycles.clear();
+	load_weathers();
+	Log("Info : Weather Environment has been reloaded");
+}
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/FDemoRecord.cpp xray-monolith/src/xrEngine/FDemoRecord.cpp
--- coc-1.4-xray-64/src/xrEngine/FDemoRecord.cpp	2023-10-20 20:54:50.468326300 +0100
+++ xray-monolith/src/xrEngine/FDemoRecord.cpp	2023-10-20 20:54:32.480035500 +0100
@@ -23,2 +23,3 @@
 CDemoRecord::force_position CDemoRecord::g_position = {false, {0, 0, 0}};
+CDemoRecord::force_direction CDemoRecord::g_direction = {false, {0, 0, 0}};
 
@@ -76,2 +80,4 @@
     file = FS.w_open(name);
+	isInputBlocked = FALSE;
+	pDemoRecords = nullptr;
     if (file)
@@ -122,2 +128,19 @@
 
+CDemoRecord::CDemoRecord(const char* name, std::unordered_set<CDemoRecord*>* pDemoRecords, BOOL isInputBlocked, float life_time) : CDemoRecord(name, life_time)
+{
+	pDemoRecords->insert(this);
+	this->pDemoRecords = pDemoRecords;
+	this->isInputBlocked = isInputBlocked;
+	if (!file) {
+		StopDemo();
+	}
+}
+
+void CDemoRecord::StopDemo() {
+	fLifeTime = -1;
+	if (pDemoRecords) {
+		pDemoRecords->erase(this);
+	}
+}
+
 CDemoRecord::~CDemoRecord()
@@ -129,2 +152,5 @@
     }
+	if (pDemoRecords) {
+		pDemoRecords->erase(this);
+	}
     g_bDisableRedText = stored_red_text;
@@ -203,6 +233,3 @@
         psDeviceFlags.zero();
-        psDeviceFlags.set(rsClearBB | rsFullscreen | rsDrawStatic, TRUE);
-        if (!psDeviceFlags.equal(s_dev_flags, rsFullscreen))
-            Device.Reset();
-
+			psDeviceFlags.set(rsClearBB | rsDrawStatic, TRUE);
     }
@@ -240,3 +267,2 @@
             psDeviceFlags = s_dev_flags;
-            if (bDevReset) Device.Reset();
             m_bMakeLevelMap = FALSE;
@@ -373,2 +397,9 @@
             g_position.p.set(m_Position);
+
+		if (g_direction.set_direction)
+		{
+			m_HPB.set(g_direction.d);
+			g_direction.set_direction = false;
+		} else
+			g_direction.d.set(m_Position);
         // move
@@ -400,2 +431,5 @@
         fLifeTime -= Device.fTimeDelta;
+		if (fLifeTime < 0) {
+			StopDemo();
+		}
 
@@ -407,4 +441,24 @@
 
+extern int mouse_button_2_key[];
+
+void CDemoRecord::IR_OnMousePress(int btn)
+{
+	IR_OnKeyboardPress(mouse_button_2_key[btn]);
+}
+
+void CDemoRecord::IR_OnMouseRelease(int btn)
+{
+	IR_OnKeyboardRelease(mouse_button_2_key[btn]);
+}
+
 void CDemoRecord::IR_OnKeyboardPress(int dik)
 {
+	if (isInputBlocked) {
+		if (dik == DIK_PAUSE)
+			Device.Pause(!Device.Paused(), TRUE, TRUE, "demo_record");
+		if (dik == DIK_GRAVE)
+			Console->Show();
+		if (dik == DIK_ESCAPE)
+			Console->Execute("main_menu on");
+	} else {
 	if (dik == DIK_MULTIPLY) m_b_redirect_input_to_level = !m_b_redirect_input_to_level;
@@ -422,3 +476,3 @@
 	if (dik == DIK_F12) MakeScreenshot();
-	if (dik == DIK_ESCAPE) fLifeTime = -1;
+		if (dik == DIK_ESCAPE) StopDemo();
 
@@ -433,3 +487,3 @@
 				g_pGameLevel->CurrentEntity()->ForceTransform(m_Camera);
-				fLifeTime = -1;
+					StopDemo();
 			}
@@ -444,2 +498,11 @@
 
+}
+
+void CDemoRecord::IR_OnKeyboardRelease(int dik)
+{
+	if (isInputBlocked) return;
+	if (m_b_redirect_input_to_level)
+		g_pGameLevel->IR_OnKeyboardRelease(dik);
+}
+
 static void update_whith_timescale(Fvector& v, const Fvector& v_delta)
@@ -452,5 +515,5 @@
 
-
 void CDemoRecord::IR_OnKeyboardHold(int dik)
 {
+	if (isInputBlocked) return;
     if (m_b_redirect_input_to_level)
@@ -511,2 +573,3 @@
 {
+	if (isInputBlocked) return;
     if (m_b_redirect_input_to_level)
@@ -530,2 +593,3 @@
 {
+	if (isInputBlocked) return;
     if (m_b_redirect_input_to_level)
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/FDemoRecord.h xray-monolith/src/xrEngine/FDemoRecord.h
--- coc-1.4-xray-64/src/xrEngine/FDemoRecord.h	2023-10-20 20:54:50.468326300 +0100
+++ xray-monolith/src/xrEngine/FDemoRecord.h	2023-10-20 20:54:32.480035500 +0100
@@ -8,2 +8,4 @@
 
+#include <unordered_set>
+
 class ENGINE_API CDemoRecord :
@@ -19,2 +21,9 @@
     } g_position;
+
+	static struct force_direction
+	{
+		bool set_direction;
+		Fvector d;
+	} g_direction;
+
     int iCount;
@@ -45,2 +54,5 @@
 
+	BOOL isInputBlocked;
+	std::unordered_set<CDemoRecord*>* pDemoRecords;
+
     void MakeCubeMapFace(Fvector& D, Fvector& N);
@@ -54,2 +66,3 @@
     CDemoRecord(const char* name, float life_time = 60 * 60 * 1000);
+	CDemoRecord(const char* name, std::unordered_set<CDemoRecord*>* pDemoRecords, BOOL isInputBlocked = 0, float life_time = 60 * 60 * 1000);
     virtual ~CDemoRecord();
@@ -57,2 +70,3 @@
     virtual void IR_OnKeyboardPress(int dik);
+	virtual void IR_OnKeyboardRelease(int dik);
     virtual void IR_OnKeyboardHold(int dik);
@@ -60,2 +74,5 @@
     virtual void IR_OnMouseHold(int btn);
+	virtual void IR_OnMousePress(int btn);
+	virtual void IR_OnMouseRelease(int btn);
+	void StopDemo();
 
@@ -64,2 +81,4 @@
     static void GetGlobalPosition(Fvector& p) { p.set(g_position.p); }
+	static void SetGlobalDirection(const Fvector& d) { g_direction.d.set(d), g_direction.set_direction = true; }
+	static void GetGlobalDirection(Fvector& d) { d.set(g_direction.d); }
     BOOL m_b_redirect_input_to_level;
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/Feel_Touch.cpp xray-monolith/src/xrEngine/Feel_Touch.cpp
--- coc-1.4-xray-64/src/xrEngine/Feel_Touch.cpp	2023-10-20 20:54:50.469326500 +0100
+++ xray-monolith/src/xrEngine/Feel_Touch.cpp	2023-10-20 20:54:32.480035500 +0100
@@ -59,4 +59,8 @@
                 BOOL bDeny = FALSE;
-                for (dit = 0; dit < feel_touch_disable.size(); dit++)
-                    if (O == feel_touch_disable[dit].O) { bDeny = TRUE; break; }
+				for (u32 dit = 0; dit < feel_touch_disable.size(); dit++)
+					if (O == feel_touch_disable[dit].O)
+					{
+						bDeny = TRUE;
+						break;
+					}
 
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/GameFont.cpp xray-monolith/src/xrEngine/GameFont.cpp
--- coc-1.4-xray-64/src/xrEngine/GameFont.cpp	2023-10-20 20:54:50.471326500 +0100
+++ xray-monolith/src/xrEngine/GameFont.cpp	2023-10-20 20:54:32.482035500 +0100
@@ -28,3 +28,22 @@
     TCMap = NULL;
-    Initialize(pSettings->r_string(section, "shader"), pSettings->r_string(section, "texture"));
+
+	const auto FindTextureName = [&](LPCSTR _sect)
+	{
+		static char* tex_names[] = { "texture800", "texture", "texture1600", "texture2160" };
+		int idx = 1;
+		u32 h = Device.dwHeight;
+		if (h <= 600) idx = 0;
+		else if (h < 1024) idx = 1;
+		else if (h < 1440) idx = 2;
+		else idx = 3;
+		while (idx >= 0)
+		{
+			if (pSettings->line_exist(_sect, tex_names[idx]))
+				return pSettings->r_string(_sect, tex_names[idx]);
+			--idx;
+		}
+		return pSettings->r_string(_sect, tex_names[1]);
+	};
+
+	Initialize(pSettings->r_string(section, "shader"), FindTextureName(section));
     if (pSettings->line_exist(section, "size"))
@@ -221,4 +238,5 @@
     u16 len = mbhMulti2Wide(wsStr, wsPos, MAX_MB_CHARS, pszText);
+	u16 i = 1;
 
-    for (u16 i = 1; i <= len; i++)
+	for (; i <= len; i++)
     {
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/GameFont.h xray-monolith/src/xrEngine/GameFont.h
--- coc-1.4-xray-64/src/xrEngine/GameFont.h	2023-10-20 20:54:50.472327600 +0100
+++ xray-monolith/src/xrEngine/GameFont.h	2023-10-20 20:54:32.482035500 +0100
@@ -74,4 +76,4 @@
 
-    IC void SetHeightI(float S);
-    IC void SetHeight(float S);
+	void SetHeightI(float S);
+	void SetHeight(float S);
 
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/GameMtlLib.h xray-monolith/src/xrEngine/GameMtlLib.h
--- coc-1.4-xray-64/src/xrEngine/GameMtlLib.h	2023-10-20 20:54:50.472327600 +0100
+++ xray-monolith/src/xrEngine/GameMtlLib.h	2023-10-20 20:54:32.483037300 +0100
@@ -356,6 +392,9 @@
 
-#define CLONE_MTL_SOUND(_res_, _mtl_pair_, _a_vector_)\
- { VERIFY2(!_mtl_pair_##->_a_vector_.empty(),_mtl_pair_->dbg_Name());\
- _res_.clone(GET_RANDOM(_mtl_pair_##->_a_vector_),st_Effect,sg_SourceType);\
- }
+#ifdef DEBUG
+#define CLONE_MTL_SOUND_CHECK(_res_, _mtl_pair_, _a_vector_)\
+ { VERIFY2(!_mtl_pair_##->_a_vector_.empty(),_mtl_pair_->dbg_Name()); }
+#endif
+
+#define CLONE_MTL_SOUND_DO(_res_, _mtl_pair_, _a_vector_)\
+ { _res_.clone(GET_RANDOM(_mtl_pair_##->_a_vector_),st_Effect,sg_SourceType); }
 
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/GameMtlLib_Engine.cpp xray-monolith/src/xrEngine/GameMtlLib_Engine.cpp
--- coc-1.4-xray-64/src/xrEngine/GameMtlLib_Engine.cpp	2023-10-20 20:54:50.473326300 +0100
+++ xray-monolith/src/xrEngine/GameMtlLib_Engine.cpp	2023-10-20 20:54:32.483037300 +0100
@@ -30,6 +31,33 @@
     R_ASSERT(cnt <= GAMEMTL_SUBITEM_COUNT + 2);
-    lst.resize(cnt);
+
     for (int k = 0; k < cnt; ++k)
-        lst[k].create(_GetItem(buf, k, tmp), st_Effect, sg_SourceType);
+	{
+		_GetItem(buf, k, tmp);
+
+		if (strstr(tmp, "*"))
+		{
+			xr_strcat(tmp, ".ogg");
+			FS_FileSet fset;
+			FS.file_list(fset, "$game_sounds$", FS_ListFiles, tmp);
+
+			for (FS_FileSet::iterator it = fset.begin(); it != fset.end(); it++)
+			{
+				string128 name;
+				xr_strcpy(name, sizeof(name), (*it).name.c_str());
+				*strext(name) = 0;
+
+				ref_sound snd;
+				snd.create(name, st_Effect, sg_SourceType);
+				lst.push_back(snd);
+			}
+		}
+		else
+		{
+			ref_sound snd;
+			snd.create(tmp, st_Effect, sg_SourceType);
+			lst.push_back(snd);
 }
+	}
+}
+
 /*
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/IGame_Level.cpp xray-monolith/src/xrEngine/IGame_Level.cpp
--- coc-1.4-xray-64/src/xrEngine/IGame_Level.cpp	2023-10-20 20:54:50.473326300 +0100
+++ xray-monolith/src/xrEngine/IGame_Level.cpp	2023-10-20 20:54:32.484035800 +0100
@@ -43,2 +43,3 @@
     // Unregister
+	Device.seqParallel.clear_not_free();
     Device.seqRender.Remove(this);
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/IGame_Persistent.cpp xray-monolith/src/xrEngine/IGame_Persistent.cpp
--- coc-1.4-xray-64/src/xrEngine/IGame_Persistent.cpp	2023-10-20 20:54:50.475326500 +0100
+++ xray-monolith/src/xrEngine/IGame_Persistent.cpp	2023-10-20 20:54:32.486035500 +0100
@@ -13,2 +13,3 @@
 # include "CustomHUD.h"
+# include "perlin.h"
 #endif
@@ -23,5 +24,10 @@
 
+extern Fvector4 ps_ssfx_grass_interactive;
+
 ENGINE_API IGame_Persistent* g_pGamePersistent = NULL;
 
-bool IsMainMenuActive() { return  g_pGamePersistent && g_pGamePersistent->m_pMainMenu && g_pGamePersistent->m_pMainMenu->IsActive(); } //ECO_RENDER add
+bool IsMainMenuActive()
+{
+	return g_pGamePersistent && g_pGamePersistent->m_pMainMenu && g_pGamePersistent->m_pMainMenu->IsActive();
+} //ECO_RENDER add
 
@@ -34,2 +40,3 @@
     RDEVICE.seqAppDeactivate.Add(this);
+	m_pGShaderConstants = new ShadersExternalData(); //--#SM+#--
 
@@ -37,2 +44,6 @@
 
+	PerlinNoise1D = xr_new<CPerlinNoise1D>(Random.randI(0, 0xFFFF));
+	PerlinNoise1D->SetOctaves(2);
+	PerlinNoise1D->SetAmplitude(0.66666f);
+
 #ifndef INGAME_EDITOR
@@ -51,2 +62,3 @@
 {
+	xr_delete(PerlinNoise1D);
     RDEVICE.seqFrame.Remove(this);
@@ -59,2 +71,7 @@
 #endif
+	xr_delete(m_pGShaderConstants); //--#SM+#--
+
+	VERIFY(m_textures_prefetch_config);
+	CInifile::Destroy(m_textures_prefetch_config);
+	m_textures_prefetch_config = 0;
 }
@@ -74,2 +91,16 @@
 #endif
+
+	// Texture Prefetch Config
+	string_path file_name;
+	m_textures_prefetch_config =
+		xr_new<CInifile>(
+			FS.update_path(
+				file_name,
+				"$game_config$",
+				"prefetch\\textures.ltx"
+			),
+			TRUE,
+			TRUE,
+			FALSE
+			);
 }
@@ -147,2 +179,3 @@
 {
+	Msg("* [x-ray]: Prefetching Data");
     // prefetch game objects & models
@@ -155,5 +188,60 @@
     Render->models_Prefetch();
-    //Device.Resources->DeferredUpload ();
+	Log("Loading textures...");
+	
+	const auto loadFileFolder = [&](LPCSTR _folder)
+	{
+		string_path folder;
+		strconcat(sizeof(folder), folder, _folder, "\\*.dds");
+
+		FS_FileSet fset;
+		FS.file_list(fset, "$game_textures$", FS_ListFiles, folder);
+
+		for (FS_FileSet::iterator it = fset.begin(); it != fset.end(); it++)
+			Device.m_pRender->ResourcesPrefetchCreateTexture(it->name.c_str());
+	};
+
+	if (m_textures_prefetch_config->section_exist("prefetch_folders"))
+	{
+		CInifile::Sect const& sect_f = m_textures_prefetch_config->r_section("prefetch_folders");
+		for (CInifile::SectCIt I = sect_f.Data.begin(); I != sect_f.Data.end(); I++)
+		{
+			if (I->second.size() && !xr_strcmp(*I->second, "*"))
+			{
+				string_path folder;
+				FS.update_path(folder, "$game_textures$", *I->first);
+				xr_strcat(folder, sizeof(folder), "\\");
+
+				xr_vector<LPSTR> *subfolders = FS.file_list_open(folder, FS_ListFolders);
+
+				if (subfolders == nullptr)
+				{
+					FS.file_list_close(subfolders);
+					continue;
+				}
+
+				for (LPSTR subfolder : *subfolders)
+				{
+					string_path path;
+					strconcat(sizeof(path), path, folder, subfolder);
+
+					loadFileFolder(path);
+				}
+
+				FS.file_list_close(subfolders);
+			}
+
+			loadFileFolder(*I->first);
+		}
+	}
+
+	if (m_textures_prefetch_config->section_exist("prefetch_textures"))
+	{
+		CInifile::Sect const& sect = m_textures_prefetch_config->r_section("prefetch_textures");
+		for (CInifile::SectCIt I = sect.Data.begin(); I != sect.Data.end(); I++)
+			Device.m_pRender->ResourcesPrefetchCreateTexture(I->first.c_str());
+	}
+
     Device.m_pRender->ResourcesDeferredUpload();
 
+	Msg("* [x-ray]: Prefetched Data");
     p_time = 1000.f*Device.GetTimerGlobal()->GetElapsed_sec() - p_time;
@@ -260 +348,303 @@
 }
+
+void IGame_Persistent::GrassBendersUpdate(u16 id, u8& data_idx, u32& data_frame, Fvector& position, float init_radius, float init_str, bool CheckDistance)
+{
+	// Interactive grass disabled
+	if (ps_ssfx_grass_interactive.y < 1)
+		return;
+
+	// Just update position if not NULL
+	if (data_idx != NULL)
+	{
+		// Explosions can take the mem spot, unassign and try to get a spot later.
+		if (grass_shader_data.id[data_idx] != id)
+		{
+			data_idx = NULL;
+			data_frame = RDEVICE.dwFrame + Random.randI(10, 35);
+		}
+		else
+		{
+			grass_shader_data.pos[data_idx] = position;
+		}
+	}
+
+	if (RDEVICE.dwFrame < data_frame)
+		return;
+
+	// Wait some random frames to split the checks
+	data_frame = RDEVICE.dwFrame + Random.randI(10, 35);
+
+	// Check Distance
+	if (CheckDistance)
+	{
+		if (position.distance_to_xz_sqr(Device.vCameraPosition) > ps_ssfx_grass_interactive.z)
+		{
+			GrassBendersRemoveByIndex(data_idx);
+			return;
+		}
+	}
+
+	CFrustum& view_frust = ::Render->ViewBase;
+	u32 mask = 0xff;
+	float rad = data_idx == NULL ? 1.0 : std::max(1.0f, grass_shader_data.radius_curr[data_idx] + 0.5f);
+
+	// In view frustum?
+	if (!view_frust.testSphere(position, rad, mask))
+	{
+		GrassBendersRemoveByIndex(data_idx);
+		return;
+	}
+
+	// Empty slot, let's use this
+	if (data_idx == NULL)
+	{
+		u8 idx = grass_shader_data.index + 1;
+
+		// Add to grass blenders array
+		if (grass_shader_data.id[idx] == NULL)
+		{
+			data_idx = idx;
+			GrassBendersSet(idx, id, position, Fvector3().set(0, -99, 0), 0, 0, 0.0f, init_radius, BENDER_ANIM_DEFAULT, true);
+
+			grass_shader_data.str_target[idx] = init_str;
+			grass_shader_data.radius_curr[idx] = init_radius;
+		}
+		// Back to 0 when the array limit is reached
+		grass_shader_data.index = idx < ps_ssfx_grass_interactive.y ? idx : 0;
+	}
+	else
+	{
+		// Already inview, let's add more time to re-check
+		data_frame += 60;
+		grass_shader_data.pos[data_idx] = position;
+	}
+}
+
+void IGame_Persistent::GrassBendersAddExplosion(u16 id, Fvector position, Fvector3 dir, float fade, float speed, float intensity, float radius)
+{
+	if (ps_ssfx_grass_interactive.y < 1)
+		return;
+
+	for (int idx = 1; idx < ps_ssfx_grass_interactive.y + 1; idx++)
+	{
+		// Add explosion to any spot not already taken by an explosion.
+		if (grass_shader_data.anim[idx] != BENDER_ANIM_EXPLOSION)
+		{
+			// Add 99 to the ID to avoid conflicts between explosions and basic benders happening at the same time with the same ID.
+			GrassBendersSet(idx, id + 99, position, dir, fade, speed, intensity, radius, BENDER_ANIM_EXPLOSION, true);
+			grass_shader_data.str_target[idx] = intensity;
+			break;
+		}
+	}
+}
+
+void IGame_Persistent::GrassBendersAddShot(u16 id, Fvector position, Fvector3 dir, float fade, float speed, float intensity, float radius)
+{
+	// Is disabled?
+	if (ps_ssfx_grass_interactive.y < 1 || intensity <= 0.0f)
+		return;
+
+	// Check distance
+	if (position.distance_to_xz_sqr(Device.vCameraPosition) > ps_ssfx_grass_interactive.z)
+		return;
+
+	int AddAt = -1;
+
+	// Look for a spot
+	for (int idx = 1; idx < ps_ssfx_grass_interactive.y + 1; idx++)
+	{
+		// Already exist, just update and increase intensity
+		if (grass_shader_data.id[idx] == id)
+		{
+			float currentSTR = grass_shader_data.str[idx];
+			GrassBendersSet(idx, id, position, dir, fade, speed, currentSTR, radius, BENDER_ANIM_EXPLOSION, false);
+			grass_shader_data.str_target[idx] += intensity;
+			AddAt = -1;
+			break;
+		}
+		else
+		{
+			// Check all indexes and keep usable index to use later if needed...
+			if (AddAt == -1 && grass_shader_data.radius[idx] == NULL)
+				AddAt = idx;
+		}
+	}
+
+	// We got an available index... Add bender at AddAt
+	if (AddAt != -1)
+	{
+		GrassBendersSet(AddAt, id, position, dir, fade, speed, 0.001f, radius, BENDER_ANIM_EXPLOSION, true);
+		grass_shader_data.str_target[AddAt] = intensity;
+	}
+}
+
+void IGame_Persistent::GrassBendersUpdateAnimations()
+{
+	for (int idx = 1; idx < ps_ssfx_grass_interactive.y + 1; idx++)
+	{
+		if (grass_shader_data.id[idx] != NULL)
+		{
+			switch (grass_shader_data.anim[idx])
+			{
+			case BENDER_ANIM_EXPLOSION: // Internal Only ( You can use BENDER_ANIM_PULSE for anomalies )
+			{
+				// Radius
+				grass_shader_data.time[idx] += Device.fTimeDelta * grass_shader_data.speed[idx];
+				grass_shader_data.radius_curr[idx] = grass_shader_data.radius[idx] * std::min(1.0f, grass_shader_data.time[idx]);
+
+				grass_shader_data.str_target[idx] = std::min(1.0f, grass_shader_data.str_target[idx]);
+
+				// Easing
+				float diff = abs(grass_shader_data.str[idx] - grass_shader_data.str_target[idx]);
+				diff = std::max(0.1f, diff);
+
+				// Intensity
+				if (grass_shader_data.str_target[idx] <= grass_shader_data.str[idx])
+				{
+					grass_shader_data.str[idx] -= Device.fTimeDelta * grass_shader_data.fade[idx] * diff;
+				}
+				else
+				{
+					grass_shader_data.str[idx] += Device.fTimeDelta * grass_shader_data.speed[idx] * diff;
+
+					if (grass_shader_data.str[idx] >= grass_shader_data.str_target[idx])
+						grass_shader_data.str_target[idx] = 0;
+				}
+
+				// Remove Bender
+				if (grass_shader_data.str[idx] < 0.0f)
+					GrassBendersReset(idx);
+			}
+			break;
+
+			case BENDER_ANIM_WAVY:
+			{
+				// Anim Speed
+				grass_shader_data.time[idx] += Device.fTimeDelta * 1.5f * grass_shader_data.speed[idx];
+
+				// Curve
+				float curve = sin(grass_shader_data.time[idx]);
+
+				// Intensity using curve
+				grass_shader_data.str[idx] = curve * cos(curve * 1.4f) * 1.8f * grass_shader_data.str_target[idx];
+			}
+
+			break;
+
+			case BENDER_ANIM_SUCK:
+			{
+				// Anim Speed
+				grass_shader_data.time[idx] += Device.fTimeDelta * grass_shader_data.speed[idx];
+
+				// Perlin Noise
+				float curve = clampr(PerlinNoise1D->GetContinious(grass_shader_data.time[idx]) + 0.5f, 0.f, 1.f) * -1.0;
+
+				// Intensity using Perlin
+				grass_shader_data.str[idx] = curve * grass_shader_data.str_target[idx];
+			}
+			break;
+
+			case BENDER_ANIM_BLOW:
+			{
+				// Anim Speed
+				grass_shader_data.time[idx] += Device.fTimeDelta * 1.2f * grass_shader_data.speed[idx];
+
+				// Perlin Noise
+				float curve = clampr(PerlinNoise1D->GetContinious(grass_shader_data.time[idx]) + 1.0f, 0.f, 2.0f) * 0.25f;
+
+				// Intensity using Perlin
+				grass_shader_data.str[idx] = curve * grass_shader_data.str_target[idx];
+			}
+			break;
+
+			case BENDER_ANIM_PULSE:
+			{
+				// Anim Speed
+				grass_shader_data.time[idx] += Device.fTimeDelta * grass_shader_data.speed[idx];
+
+				// Radius
+				grass_shader_data.radius_curr[idx] = grass_shader_data.radius[idx] * std::min(1.0f, grass_shader_data.time[idx]);
+
+				// Diminish intensity when radius target is reached
+				if (grass_shader_data.radius_curr[idx] >= grass_shader_data.radius[idx])
+					grass_shader_data.str[idx] += GrassBenderToValue(grass_shader_data.str[idx], 0.0f, grass_shader_data.speed[idx] * 0.6f, true);
+
+				// Loop when intensity is <= 0
+				if (grass_shader_data.str[idx] <= 0.0f)
+				{
+					grass_shader_data.str[idx] = grass_shader_data.str_target[idx];
+					grass_shader_data.radius_curr[idx] = 0.0f;
+					grass_shader_data.time[idx] = 0.0f;
+				}
+
+			}
+			break;
+
+			case BENDER_ANIM_DEFAULT:
+
+				// Just fade to target strength
+				grass_shader_data.str[idx] += GrassBenderToValue(grass_shader_data.str[idx], grass_shader_data.str_target[idx], 2.0f, true);
+
+				break;
+			}
+		}
+	}
+}
+
+void IGame_Persistent::GrassBendersRemoveByIndex(u8& idx)
+{
+	if (idx != NULL)
+	{
+		GrassBendersReset(idx);
+		idx = NULL;
+	}
+}
+
+void IGame_Persistent::GrassBendersRemoveById(u16 id)
+{
+	// Search by Object ID ( Used when removing benders CPHMovementControl::DestroyCharacter() )
+	for (int i = 1; i < ps_ssfx_grass_interactive.y + 1; i++)
+		if (grass_shader_data.id[i] == id)
+			GrassBendersReset(i);
+}
+
+void IGame_Persistent::GrassBendersReset(u8 idx)
+{
+	// Reset Everything
+	GrassBendersSet(idx, NULL, Fvector3().set(0, 0, 0), Fvector3().set(0, -99, 0), 0, 0, 0, 0, BENDER_ANIM_DEFAULT, true);
+	grass_shader_data.str_target[idx] = 0;
+}
+
+void IGame_Persistent::GrassBendersSet(u8 idx, u16 id, Fvector position, Fvector3 dir, float fade, float speed, float intensity, float radius, GrassBenders_Anim anim, bool resetTime)
+{
+	// Set values
+	grass_shader_data.anim[idx] = anim;
+	grass_shader_data.pos[idx] = position;
+	grass_shader_data.id[idx] = id;
+	grass_shader_data.radius[idx] = radius;
+	grass_shader_data.str[idx] = intensity;
+	grass_shader_data.fade[idx] = fade;
+	grass_shader_data.speed[idx] = speed;
+	grass_shader_data.dir[idx] = dir;
+
+	if (resetTime)
+	{
+		grass_shader_data.radius_curr[idx] = 0.01f;
+		grass_shader_data.time[idx] = 0;
+	}
+}
+
+float IGame_Persistent::GrassBenderToValue(float& current, float go_to, float intensity, bool use_easing)
+{
+	float diff = abs(current - go_to);
+
+	float r_value = Device.fTimeDelta * intensity * (use_easing ? std::min(0.5f, diff) : 1.0f);
+
+	if (diff - r_value <= 0)
+	{
+		current = go_to;
+		return 0;
+	}
+
+	return current < go_to ? r_value : -r_value;
+}
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/IGame_Persistent.h xray-monolith/src/xrEngine/IGame_Persistent.h
--- coc-1.4-xray-64/src/xrEngine/IGame_Persistent.h	2023-10-20 20:54:50.475326500 +0100
+++ xray-monolith/src/xrEngine/IGame_Persistent.h	2023-10-20 20:54:32.486035500 +0100
@@ -10,4 +10,7 @@
 
+#include "ShadersExternalData.h" //--#SM+#--
+
 class IRenderVisual;
 class IMainMenu;
+class ScriptWallmarksManager;
 class ENGINE_API CPS_Instance;
@@ -58,2 +66,40 @@
     xr_vector<CPS_Instance*> ps_needtoplay;
+public:
+	enum GrassBenders_Anim
+	{
+		BENDER_ANIM_EXPLOSION = 0,
+		BENDER_ANIM_DEFAULT = 1,
+		BENDER_ANIM_WAVY = 2,
+		BENDER_ANIM_SUCK = 3,
+		BENDER_ANIM_BLOW = 4,
+		BENDER_ANIM_PULSE = 5,
+	}; 
+
+	void GrassBendersUpdateAnimations();
+	void GrassBendersAddExplosion(u16 id, Fvector position, Fvector3 dir, float fade, float speed, float intensity, float radius);
+	void GrassBendersAddShot(u16 id, Fvector position, Fvector3 dir, float fade, float speed, float intensity, float radius);
+	void GrassBendersRemoveById(u16 id);
+	void GrassBendersRemoveByIndex(u8& idx);
+	void GrassBendersUpdate(u16 id, u8& data_idx, u32& data_frame, Fvector& position, float radius, float str, bool CheckDistance );
+	void GrassBendersReset(u8 idx);
+	void GrassBendersSet(u8 idx, u16 id, Fvector position, Fvector3 dir, float fade, float speed, float str, float radius, GrassBenders_Anim anim, bool resetTime);
+	float GrassBenderToValue(float& current, float go_to, float intensity, bool use_easing);
+
+	CPerlinNoise1D* PerlinNoise1D;
+
+	struct grass_data
+	{
+		u8 index;
+		s8 anim[16];
+		u16 id[16];
+		Fvector pos[16];
+		Fvector3 dir[16];
+		float radius[16];
+		float radius_curr[16];
+		float str[16];
+		float str_target[16];
+		float time[16];
+		float fade[16];
+		float speed[16];
+	} grass_shader_data;
 
@@ -73,7 +119,14 @@
     IMainMenu* m_pMainMenu;
-
+	ScriptWallmarksManager* m_pWallmarksManager;
+	IC ScriptWallmarksManager& GetWallmarksManager() const { return *m_pWallmarksManager; }
+	ShadersExternalData* m_pGShaderConstants; //--#SM+#--
 
     virtual bool OnRenderPPUI_query() { return FALSE; }; // should return true if we want to have second function called
-    virtual void OnRenderPPUI_main() {};
-    virtual void OnRenderPPUI_PP() {};
+	virtual void OnRenderPPUI_main()
+	{
+	};
+
+	virtual void OnRenderPPUI_PP()
+	{
+	};
 
@@ -108,2 +169,10 @@
 
+	struct act_dat
+	{
+		float health;
+		float stamina;
+		float bleeding;
+		BOOL helmet;
+	} actor_data;
+
     IGame_Persistent();
@@ -118,4 +187,22 @@
 #endif
-    virtual void LoadTitle(bool change_tip = false, shared_str map_name = "") {}
+	virtual void LoadTitle(bool change_tip = false, shared_str map_name = "")
+	{
+	}
+
     virtual bool CanBePaused() { return true; }
+
+	struct pda_data
+	{
+		float pda_display_factor;
+		float pda_psy_influence;
+		float pda_displaybrightness;
+	} pda_shader_data;
+
+	struct nv_data
+	{
+		float lum_factor;
+	} nv_shader_data;
+
+private:
+	CInifile* m_textures_prefetch_config;
 };
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/IRenderable.h xray-monolith/src/xrEngine/IRenderable.h
--- coc-1.4-xray-64/src/xrEngine/IRenderable.h	2023-10-20 20:54:50.478327000 +0100
+++ xray-monolith/src/xrEngine/IRenderable.h	2023-10-20 20:54:32.489037000 +0100
@@ -25,2 +26,7 @@
     virtual BOOL renderable_ShadowReceive() { return FALSE; };
+
+	//--DSR-- HeatVision_start
+	virtual float GetHotness() { return 0.0; }
+	virtual float GetTransparency() { return 0.0; }
+	//--DSR-- HeatVision_end
 };
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/ISheduled.cpp xray-monolith/src/xrEngine/ISheduled.cpp
--- coc-1.4-xray-64/src/xrEngine/ISheduled.cpp	2023-10-20 20:54:50.478327000 +0100
+++ xray-monolith/src/xrEngine/ISheduled.cpp	2023-10-20 20:54:32.489037000 +0100
@@ -16,4 +16,6 @@
 extern BOOL g_bSheduleInProgress;
+
 ISheduled::~ISheduled()
 {
+#ifdef DEBUG
     VERIFY2(
@@ -22,3 +24,3 @@
         );
-
+#endif
     // sad, but true
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/LightAnimLibrary.cpp xray-monolith/src/xrEngine/LightAnimLibrary.cpp
--- coc-1.4-xray-64/src/xrEngine/LightAnimLibrary.cpp	2023-10-20 20:54:50.481326600 +0100
+++ xray-monolith/src/xrEngine/LightAnimLibrary.cpp	2023-10-20 20:54:32.490036600 +0100
@@ -20,2 +20,3 @@
     fFPS = 15.f;
+	def_fFPS = fFPS;
     iFrameCount = 1;
@@ -33,2 +34,3 @@
     fFPS = F.r_float();
+	def_fFPS = fFPS;
     iFrameCount = F.r_u32();
@@ -218,3 +220,4 @@
 
-__declspec(dllexport) void ELightAnimLibrary::Load()
+//__declspec(dllexport)
+void ELightAnimLibrary::Load()
 {
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/LightAnimLibrary.h xray-monolith/src/xrEngine/LightAnimLibrary.h
--- coc-1.4-xray-64/src/xrEngine/LightAnimLibrary.h	2023-10-20 20:54:50.481326600 +0100
+++ xray-monolith/src/xrEngine/LightAnimLibrary.h	2023-10-20 20:54:32.490036600 +0100
@@ -14,2 +14,3 @@
     float fFPS;
+	float def_fFPS;
     DEFINE_MAP(int, u32, KeyMap, KeyPairIt);
@@ -29,2 +30,4 @@
     u32 CalculateBGR(float T, int& frame);
+	void SetFramerate(float framerate) { fFPS = framerate; }
+	void ResetFramerate() { fFPS = def_fFPS; }
     void Resize(int new_len);
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/line_edit_control.cpp xray-monolith/src/xrEngine/line_edit_control.cpp
--- coc-1.4-xray-64/src/xrEngine/line_edit_control.cpp	2023-10-20 20:54:50.520328900 +0100
+++ xray-monolith/src/xrEngine/line_edit_control.cpp	2023-10-20 20:54:32.509038200 +0100
@@ -415,2 +413,3 @@
 {
+		if (!str) str = "";
     u32 str_size = xr_strlen(str);
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/motion.h xray-monolith/src/xrEngine/motion.h
--- coc-1.4-xray-64/src/xrEngine/motion.h	2023-10-20 20:54:50.522326600 +0100
+++ xray-monolith/src/xrEngine/motion.h	2023-10-20 20:54:32.511037800 +0100
@@ -87,3 +113,2 @@
 {
-    CEnvelope* envs[ctMaxChannel];
 public:
@@ -102,2 +127,4 @@
 
+	CEnvelope* envs[ctMaxChannel];
+
 #ifdef _LW_EXPORT
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/ObjectAnimator.cpp xray-monolith/src/xrEngine/ObjectAnimator.cpp
--- coc-1.4-xray-64/src/xrEngine/ObjectAnimator.cpp	2023-10-20 20:54:50.482326500 +0100
+++ xray-monolith/src/xrEngine/ObjectAnimator.cpp	2023-10-20 20:54:32.491036300 +0100
@@ -18,2 +18,3 @@
     m_Name = "";
+	m_XFORM.identity();
 }
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/ObjectAnimator.h xray-monolith/src/xrEngine/ObjectAnimator.h
--- coc-1.4-xray-64/src/xrEngine/ObjectAnimator.h	2023-10-20 20:54:50.482326500 +0100
+++ xray-monolith/src/xrEngine/ObjectAnimator.h	2023-10-20 20:54:32.491036300 +0100
@@ -12,4 +12,2 @@
 protected:
-    bool bLoop;
-
     shared_str m_Name;
@@ -40,2 +38,4 @@
     IC const Fmatrix& XFORM() { return m_XFORM; }
+	const SAnimParams& anim_param() { return m_MParam; }
+	bool bLoop;
     float GetLength();
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/psystem.h xray-monolith/src/xrEngine/psystem.h
--- coc-1.4-xray-64/src/xrEngine/psystem.h	2023-10-20 20:54:50.524326400 +0100
+++ xray-monolith/src/xrEngine/psystem.h	2023-10-20 20:54:32.513037000 +0100
@@ -5,5 +5,7 @@
 #ifdef XR_PARTICLES_EXPORTS
-#define PARTICLES_API __declspec(dllexport)
+#define PARTICLES_API
+//__declspec(dllexport)
 #else
-#define PARTICLES_API __declspec(dllimport)
+#define PARTICLES_API
+//__declspec(dllimport)
 #ifdef _EDITOR
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/Rain.cpp xray-monolith/src/xrEngine/Rain.cpp
--- coc-1.4-xray-64/src/xrEngine/Rain.cpp	2023-10-20 20:54:50.484327000 +0100
+++ xray-monolith/src/xrEngine/Rain.cpp	2023-10-20 20:54:32.493035500 +0100
@@ -43,2 +43,3 @@
     snd_Ambient.create("ambient\\rain", st_Effect, sg_Undefined);
+	rain_volume = 0.0f;
 
@@ -62,2 +63,3 @@
     snd_Ambient.destroy();
+	rain_volume = 0.0f;
 
@@ -70,3 +72,3 @@
 // Born
-void CEffect_Rain::Born(Item& dest, float radius)
+void CEffect_Rain::Born(Item& dest, float radius, float speed)
 {
@@ -89,3 +91,3 @@
     // dest.P.set (x+view.x,height+view.y,z+view.z);
-    dest.fSpeed = ::Random.randF(drop_speed_min, drop_speed_max);
+	dest.fSpeed = ::Random.randF(drop_speed_min, drop_speed_max) * speed;
 
@@ -155,2 +157,3 @@
         hemi_factor = hemi_factor*(1.0f - t) + f*t;
+		rain_hemi = hemi_val;
     }
@@ -172,2 +175,3 @@
             snd_Ambient.stop();
+			rain_volume = 0.0f;
             return;
@@ -183,3 +187,5 @@
         // snd_Ambient.set_position(sndP);
-        snd_Ambient.set_volume(_max(0.1f, factor) * hemi_factor);
+		rain_volume = factor * hemi_factor;
+		clamp(rain_volume, .1f, 1.f);
+		snd_Ambient.set_volume(rain_volume);
     }
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/Rain.h xray-monolith/src/xrEngine/Rain.h
--- coc-1.4-xray-64/src/xrEngine/Rain.h	2023-10-20 20:54:50.485326600 +0100
+++ xray-monolith/src/xrEngine/Rain.h	2023-10-20 20:54:32.494035500 +0100
@@ -70,2 +75,4 @@
     ref_sound snd_Ambient;
+	float rain_volume;
+	float rain_hemi = 0.0f;
 
@@ -82,3 +89,3 @@
     // Some methods
-    void Born(Item& dest, float radius);
+	void Born(Item& dest, float radius, float speed);
     void Hit(Fvector& pos);
@@ -92,3 +99,12 @@
     void OnFrame();
-    void InvalidateState()		{ state = stIdle; }
+
+	void InvalidateState()
+	{
+		if (state != stIdle) snd_Ambient.stop();
+		rain_volume = 0.0f;
+		state = stIdle;
+	}
+
+	float GetRainVolume() { return rain_volume; }
+	float GetRainHemi() { return rain_hemi; }
 };
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/Render.h xray-monolith/src/xrEngine/Render.h
--- coc-1.4-xray-64/src/xrEngine/Render.h	2023-10-20 20:54:50.485326600 +0100
+++ xray-monolith/src/xrEngine/Render.h	2023-10-20 20:54:32.494035500 +0100
@@ -181,4 +204,13 @@
     };
+
+	enum RRT
+	{
+		rtPDA = 1,
+		rtSVP,
+	};
+
+
 public:
     // options
+	bool hud_loading;
     s32 m_skinning;
@@ -246,3 +285,6 @@
     // Prefer this function when possible
-    virtual void add_StaticWallmark(IWallMarkArray* pArray, const Fvector& P, float s, CDB::TRI* T, Fvector* V) = 0;
+	virtual void add_StaticWallmark(IWallMarkArray* pArray, const Fvector& P, float s, CDB::TRI* T, Fvector* V, float ttl = 0.f, bool ignore_opt = false, bool random_rotation = true) = 0;
+
+	// demonized: add user defined rotation to wallmark
+	virtual void add_StaticWallmark(IWallMarkArray* pArray, const Fvector& P, float s, CDB::TRI* T, Fvector* V, float ttl, bool ignore_opt, float rotation) = 0;
     virtual void clear_static_wallmarks() = 0;
@@ -251,3 +293,4 @@
     // Prefer this function when possible
-    virtual void add_SkeletonWallmark(const Fmatrix* xf, IKinematics* obj, IWallMarkArray* pArray, const Fvector& start, const Fvector& dir, float size) = 0;
+	virtual void add_SkeletonWallmark(const Fmatrix* xf, IKinematics* obj, IWallMarkArray* pArray, const Fvector& start,
+	                                  const Fvector& dir, float size, float ttl = 0.f, bool ignore_opt = false) = 0;
 
@@ -278,2 +327,3 @@
     virtual void models_Prefetch() = 0;
+	virtual void models_PrefetchOne(LPCSTR name) = 0;
     virtual void models_Clear(BOOL b_complete) = 0;
@@ -294,2 +344,11 @@
 
+	// Particles
+	virtual void ExportParticles()
+	{
+	}
+
+	virtual void ImportParticles()
+	{
+	}
+
     // Render mode
@@ -300,2 +359,3 @@
     virtual u32 active_phase() = 0; //Swartz: actor shadow
+	virtual void RenderToTarget(RRT target) = 0;
     // Constructor/destructor
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/resource.rc xray-monolith/src/xrEngine/resource.rc
--- coc-1.4-xray-64/src/xrEngine/resource.rc	2023-10-20 20:54:50.530326100 +0100
+++ xray-monolith/src/xrEngine/resource.rc	2023-10-20 20:54:32.518037400 +0100
@@ -45,4 +45,4 @@
 VS_VERSION_INFO VERSIONINFO
- FILEVERSION 1,6,0,2
- PRODUCTVERSION 1,6,0,2
+ FILEVERSION 1,0,5,5
+ PRODUCTVERSION 1,0,5,5
  FILEFLAGSMASK 0x17L
@@ -61,10 +61,10 @@
         BEGIN
-            VALUE "CompanyName", "GSC Game World"
-            VALUE "FileDescription", "X-Ray 1.6 Engine"
-            VALUE "FileVersion", "1.6.02"
-            VALUE "InternalName", "xrEngine"
-            VALUE "LegalCopyright", "Copyright © 2009 GSC Game World"
-            VALUE "OriginalFilename", "xrEngine.exe"
-            VALUE "ProductName", "S.T.A.L.K.E.R.: Call Of Pripyat"
-            VALUE "ProductVersion", "1.6.02"
+            VALUE "CompanyName", "Anomaly Team"
+            VALUE "FileDescription", "X-Ray Monolith Engine"
+            VALUE "FileVersion", "1.0.5.5"
+            VALUE "InternalName", "Monolith Engine"
+            VALUE "LegalCopyright", "Copyright 2009 GSC Game World, 2018-2020 Anomaly Team"
+            VALUE "OriginalFilename", "Anomaly.exe"
+            VALUE "ProductName", "S.T.A.L.K.E.R.: Anomaly"
+            VALUE "ProductVersion", "1.0.5.5"
         END
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/SkeletonMotions.cpp xray-monolith/src/xrEngine/SkeletonMotions.cpp
--- coc-1.4-xray-64/src/xrEngine/SkeletonMotions.cpp	2023-10-20 20:54:50.486326600 +0100
+++ xray-monolith/src/xrEngine/SkeletonMotions.cpp	2023-10-20 20:54:32.496036900 +0100
@@ -198,2 +196,9 @@
             VERIFY2(bone_id != BI_NONE, "Invalid remap index.");
+
+			if ((bones->size() - 1) < bone_id)
+			{
+				MS->close();
+				return false;
+			}
+
             CMotion& M = m_motions[bones->at(bone_id)->name][m_idx];
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/Stats.cpp xray-monolith/src/xrEngine/Stats.cpp
--- coc-1.4-xray-64/src/xrEngine/Stats.cpp	2023-10-20 20:54:50.488328000 +0100
+++ xray-monolith/src/xrEngine/Stats.cpp	2023-10-20 20:54:32.497038800 +0100
@@ -83,2 +102,9 @@
 {
+	static u32 dw_lastframe;
+
+	if (dw_lastframe == Device.dwTimeGlobal)
+		return;
+
+	dw_lastframe = Device.dwTimeGlobal;
+
     // Stop timers
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/stdafx.h xray-monolith/src/xrEngine/stdafx.h
--- coc-1.4-xray-64/src/xrEngine/stdafx.h	2023-10-20 20:54:50.539340200 +0100
+++ xray-monolith/src/xrEngine/stdafx.h	2023-10-20 20:54:32.525037800 +0100
@@ -35,8 +35,12 @@
 #ifdef ENGINE_BUILD
-#define DLL_API __declspec(dllimport)
-#define ENGINE_API __declspec(dllexport)
+#define DLL_API
+//__declspec(dllimport)
+#define ENGINE_API
+//__declspec(dllexport)
 #else
 #undef DLL_API
-#define DLL_API __declspec(dllexport)
-#define ENGINE_API __declspec(dllimport)
+#define DLL_API
+//__declspec(dllexport)
+#define ENGINE_API
+//__declspec(dllimport)
 #endif
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/tntQAVI.cpp xray-monolith/src/xrEngine/tntQAVI.cpp
--- coc-1.4-xray-64/src/xrEngine/tntQAVI.cpp	2023-10-20 20:54:50.540326900 +0100
+++ xray-monolith/src/xrEngine/tntQAVI.cpp	2023-10-20 20:54:32.526036100 +0100
@@ -156,3 +146,3 @@
     // Íàéòè ïîäõîäÿùèé äåêîìïðåññîð
-    m_aviIC = ICLocate(ICTYPE_VIDEO, NULL, &m_biInFormat, &m_biOutFormat, \
+	m_aviIC = ICLocate(ICTYPE_VIDEO, NULL, &m_biInFormat, &m_biOutFormat,
                        // ICMODE_DECOMPRESS
@@ -201,3 +186,3 @@
     mmckinfoSubchunk.fccType = mmioFOURCC('m', 'o', 'v', 'i');
-    if (MMSYSERR_NOERROR != (res = mmioDescend(hmmioFile, &mmckinfoSubchunk, NULL, MMIO_FINDLIST)) \
+	if (MMSYSERR_NOERROR != (res = mmioDescend(hmmioFile, &mmckinfoSubchunk, NULL, MMIO_FINDLIST))
             || mmckinfoSubchunk.cksize <= 4)
@@ -242,3 +223,3 @@
 
-    if (MMSYSERR_NOERROR != (res = mmioDescend(hmmioFile, &mmckinfoSubchunk, NULL, MMIO_FINDCHUNK)) \
+	if (MMSYSERR_NOERROR != (res = mmioDescend(hmmioFile, &mmckinfoSubchunk, NULL, MMIO_FINDCHUNK))
             || mmckinfoSubchunk.cksize <= 4)
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/x_ray.cpp xray-monolith/src/xrEngine/x_ray.cpp
--- coc-1.4-xray-64/src/xrEngine/x_ray.cpp	2023-10-20 20:54:50.544327500 +0100
+++ xray-monolith/src/xrEngine/x_ray.cpp	2023-10-20 20:54:32.532036600 +0100
@@ -27,2 +27,6 @@
 
+#include <unicode\unistr.h>
+#include <unicode\ucnv.h>
+#include <discord\discord.h>
+
 #include "xrSash.h"
@@ -31,3 +35,5 @@
 
+
 //---------------------------------------------------------------------
+#define XRAY_MONOLITH_VERSION "X-Ray Monolith v1.5.2"
 ENGINE_API CInifile* pGameIni = NULL;
@@ -48,2 +54,23 @@
 
+//Discord
+discord::Core* discord_core{};
+discord::Activity discordPresence{};
+static int64_t StartTime;
+bool use_discord = true;
+#pragma comment(lib, "discord_game_sdk.lib")
+rpc_info discord_gameinfo;
+rpc_strings discord_strings;
+float discord_update_rate = .5f;
+
+//UTF-8 (ICU)
+#pragma comment(lib, "icuuc.lib")
+//#pragma comment(lib, "sicuuc.lib")
+//#pragma comment(lib, "sicudt.lib")
+
+//Reshade
+#pragma comment(lib, "reshadecompat.lib")
+bool use_reshade = false;
+extern bool init_reshade();
+extern void unregister_reshade();
+
 static LPSTR month_id[12] =
@@ -66,3 +93,2 @@
 
-#include "../xrGameSpy/gamespy/md5c.c"
 #include <ctype.h>
@@ -72,57 +98,2 @@
 
-PROTECT_API char* ComputeModuleHash(char* pszHash)
-{
-    //SECUROM_MARKER_HIGH_SECURITY_ON(3)
-
-    char szModuleFileName[MAX_PATH];
-    HANDLE hModuleHandle = NULL, hFileMapping = NULL;
-    LPVOID lpvMapping = NULL;
-    MEMORY_BASIC_INFORMATION MemoryBasicInformation;
-
-    if (!GetModuleFileName(NULL, szModuleFileName, MAX_PATH))
-        return pszHash;
-
-    hModuleHandle = CreateFile(szModuleFileName, GENERIC_READ, FILE_SHARE_READ, NULL, OPEN_EXISTING, 0, NULL);
-
-    if (hModuleHandle == INVALID_HANDLE_VALUE)
-        return pszHash;
-
-    hFileMapping = CreateFileMapping(hModuleHandle, NULL, PAGE_READONLY, 0, 0, NULL);
-
-    if (hFileMapping == NULL)
-    {
-        CloseHandle(hModuleHandle);
-        return pszHash;
-    }
-
-    lpvMapping = MapViewOfFile(hFileMapping, FILE_MAP_READ, 0, 0, 0);
-
-    if (lpvMapping == NULL)
-    {
-        CloseHandle(hFileMapping);
-        CloseHandle(hModuleHandle);
-        return pszHash;
-    }
-
-    ZeroMemory(&MemoryBasicInformation, sizeof(MEMORY_BASIC_INFORMATION));
-
-    VirtualQuery(lpvMapping, &MemoryBasicInformation, sizeof(MEMORY_BASIC_INFORMATION));
-
-    if (MemoryBasicInformation.RegionSize)
-    {
-        char szHash[33];
-        MD5Digest((unsigned char*)lpvMapping, (unsigned int)MemoryBasicInformation.RegionSize, szHash);
-        MD5Digest((unsigned char*)szHash, 32, pszHash);
-        for (int i = 0; i < 32; ++i)
-            pszHash[i] = (char)toupper(pszHash[i]);
-    }
-
-    UnmapViewOfFile(lpvMapping);
-    CloseHandle(hFileMapping);
-    CloseHandle(hModuleHandle);
-
-    //SECUROM_MARKER_HIGH_SECURITY_OFF(3)
-
-    return pszHash;
-}
 #endif // DEDICATED_SERVER
@@ -212,8 +186,6 @@
 
+extern float g_fTimeFactor;
+
 PROTECT_API void InitSettings()
 {
-#ifndef DEDICATED_SERVER
-    Msg("EH: %s\n", ComputeModuleHash(szEngineHash));
-#endif // DEDICATED_SERVER
-
     string_path fname;
@@ -244,3 +217,6 @@
     pGameIni = xr_new<CInifile>(fname, TRUE);
-    CHECK_OR_EXIT(0 != pGameIni->section_count(), make_string("Cannot find file %s.\nReinstalling application may fix this problem.", fname));
+	CHECK_OR_EXIT(0 != pGameIni->section_count(),
+	              make_string("Cannot find file %s.\nReinstalling application may fix this problem.", fname));
+
+	g_fTimeFactor = pSettings->r_float("alife", "time_factor");
 }
@@ -275,3 +252,3 @@
 {
-    BOOL bCaptureInput = !strstr(Core.Params, "-i");
+	BOOL bCaptureInput = FALSE; // !strstr(Core.Params, "-i");
 
@@ -353,2 +332,230 @@
 
+LPCSTR xr_ToUTF8(LPCSTR input, int max_length)
+{
+	UErrorCode errorCode = U_ZERO_ERROR;
+	UConverter *conv_from = ucnv_open("cp1251", &errorCode);
+	R_ASSERT3(conv_from, "[Discord RPC] Error creating UConverter!\n", std::to_string(errorCode).c_str());
+
+	std::vector<UChar> converted(strlen(input) * 2);
+	int32_t conv_len = ucnv_toUChars(conv_from, &converted[0], converted.size(), input, strlen(input), &errorCode);
+	if (errorCode != U_ZERO_ERROR)
+	{
+		Msg("[Discord RPC] Failed to convert string! (%s)", std::to_string(errorCode).c_str());
+		return input;
+	}
+
+	converted.resize(conv_len);
+	ucnv_close(conv_from);
+
+	// needs to be static so the data buffer is still valid after this function returns
+	static std::string g;
+	g.clear();
+
+	g.resize(converted.size() * 4);
+
+	UConverter *conv_u8 = ucnv_open("UTF-8", &errorCode);
+	int32_t u8_len = ucnv_fromUChars(conv_u8, &g[0], g.size(), &converted[0], converted.size(), &errorCode);
+	if (errorCode != U_ZERO_ERROR)
+	{
+		Msg("[Discord RPC] Failed to convert string! (%s)", std::to_string(errorCode).c_str());
+		return input;
+	}
+
+	g.resize(_min(u8_len, max_length));
+	ucnv_close(conv_u8);
+
+	return g.data();
+}
+
+//Discord Rich Presence - Rezy ------------------------------------------------
+
+void DiscordLog(discord::LogLevel level, std::string message)
+{
+	Msg("[Discord RPC]: %s", message.c_str());
+}
+
+void updateDiscordPresence()
+{
+	if (!use_discord)
+		return;
+
+	static char details_buffer[128];
+	static char state_buffer[128];
+
+	// Main Menu
+	if (discord_gameinfo.mainmenu)
+	{
+		snprintf(state_buffer, 128, discord_strings.mainmenu);
+		discordPresence.GetAssets().SetLargeImage("gamelogo");
+		discordPresence.GetAssets().SetLargeText("");
+		discordPresence.GetAssets().SetSmallImage("");
+		discordPresence.GetAssets().SetSmallText("");
+			
+		// Pause Menu
+		if (discord_gameinfo.ingame)
+			snprintf(state_buffer, 128, discord_strings.paused);
+		else
+			discordPresence.SetDetails("");
+	}	
+
+	// Loading
+	else if (discord_gameinfo.loadscreen)
+	{
+		snprintf(state_buffer, 128, discord_strings.loading);
+		discordPresence.SetDetails("");
+		discordPresence.GetAssets().SetLargeImage("gamelogo");
+		discordPresence.GetAssets().SetLargeText("");
+		discordPresence.GetAssets().SetSmallImage("");
+		discordPresence.GetAssets().SetSmallText("");
+		discord_gameinfo.ex_update = true;
+	}
+
+	// In Game
+	else if (discord_gameinfo.ingame)
+	{
+		// Time + Level Name
+		char levelname_time[128];
+		if (discord_gameinfo.level_name && discord_gameinfo.currenttime)
+		{
+			snprintf(levelname_time, 128, "%s | %s", discord_gameinfo.level_name, discord_gameinfo.currenttime);
+			discordPresence.GetAssets().SetLargeText(levelname_time);
+		}
+		else if (discord_gameinfo.level_name)
+		{
+			snprintf(levelname_time, 128, discord_gameinfo.level_name);
+			discordPresence.GetAssets().SetLargeText(levelname_time);
+		}
+		else
+			discord_gameinfo.ex_update = true;
+
+		//Faction, Rank, Rep
+		if (discord_gameinfo.faction && discord_gameinfo.faction_name)
+		{
+			discordPresence.GetAssets().SetSmallImage(discord_gameinfo.faction);
+			char rank_faction_rep[128];
+			if (discord_gameinfo.rank_name && discord_gameinfo.reputation)
+				snprintf(rank_faction_rep, 128, "%s | %s", discord_gameinfo.rank_name, discord_gameinfo.reputation);
+			else
+				snprintf(rank_faction_rep, 128, discord_gameinfo.faction_name);
+			discordPresence.GetAssets().SetSmallText(rank_faction_rep);
+		}
+
+		// GameMode + Active Task
+		if (discord_gameinfo.gamemode)
+		{
+			if (discord_gameinfo.task_name && 0 != xr_strcmp(discord_gameinfo.task_name, ""))
+				snprintf(details_buffer, 128, "%s | %s", discord_gameinfo.gamemode, discord_gameinfo.task_name);
+			else
+				snprintf(details_buffer, 128, discord_gameinfo.gamemode);
+			discordPresence.SetDetails(details_buffer);
+		}
+
+		// God Mode
+		if (discord_gameinfo.godmode)
+			snprintf(state_buffer, 128, discord_strings.godmode);
+
+		// Health
+		else if (discord_gameinfo.health)
+		{
+			// Iron Man
+			if (discord_gameinfo.ironman && discord_gameinfo.lives_left)
+			{
+				if (discord_gameinfo.lives_left == 0 || discord_gameinfo.lives_left > 1)
+					snprintf(state_buffer, 128, "%s: %i | %i %s", discord_strings.health, discord_gameinfo.health,
+					        discord_gameinfo.lives_left, discord_strings.livesleft);
+				else
+					snprintf(state_buffer, 128, "%s: %i | %i %s", discord_strings.health, discord_gameinfo.health,
+					        discord_gameinfo.lives_left, discord_strings.livesleftsingle);
+			}
+
+			// Azazel
+			else if (discord_gameinfo.possessed_lives)
+			{
+				if (discord_gameinfo.possessed_lives == 0 || discord_gameinfo.possessed_lives > 1)
+					snprintf(state_buffer, 128, "%s: %i | %i %s", discord_strings.health, discord_gameinfo.health,
+					        discord_gameinfo.possessed_lives, discord_strings.livespossessed);
+				else
+					snprintf(state_buffer, 128, "%s: %i | %i %s", discord_strings.health, discord_gameinfo.health,
+					        discord_gameinfo.possessed_lives, discord_strings.livespossessedsingle);
+			}
+
+			// No Iron Man or Azazel
+			else
+				snprintf(state_buffer, 128, "%s: %i", discord_strings.health, discord_gameinfo.health);
+
+			discordPresence.SetState(state_buffer);
+		}
+		else
+		{
+			// Iron Man
+			if (discord_gameinfo.ironman && discord_gameinfo.lives_left)
+			{
+				int real_lives = discord_gameinfo.lives_left - 1;
+				if (real_lives == 0 || real_lives > 1)
+					snprintf(state_buffer, 128, "%s | %i %s", discord_strings.dead, real_lives, discord_strings.livesleft);
+				else
+					snprintf(state_buffer, 128, "%s | %i %s", discord_strings.dead, real_lives,
+						discord_strings.livesleftsingle);
+			}
+
+
+			// Azazel
+			else if (discord_gameinfo.possessed_lives)
+			{
+				if (discord_gameinfo.possessed_lives == 0 || discord_gameinfo.possessed_lives > 1)
+					snprintf(state_buffer, 128, "%s | %i %s", discord_strings.dead, discord_gameinfo.possessed_lives,
+						discord_strings.livespossessed);
+				else
+					snprintf(state_buffer, 128, "%s | %i %s", discord_strings.dead, discord_gameinfo.possessed_lives,
+						discord_strings.livespossessedsingle);
+			}
+
+			// No Iron Man or Azazel
+			else
+				snprintf(state_buffer, 128, "%s", discord_strings.dead);
+
+			discordPresence.SetState(state_buffer);
+		}
+
+		// Level Icon
+		if (discord_gameinfo.level && discord_gameinfo.level_icon_index)
+		{
+			char icon_buffer[32];
+			snprintf(icon_buffer, 32, "%s_%i", discord_gameinfo.level, discord_gameinfo.level_icon_index);
+			discordPresence.GetAssets().SetLargeImage(icon_buffer);
+		}
+	}
+
+	discordPresence.SetState(state_buffer);
+	discord_core->ActivityManager().UpdateActivity(discordPresence, [](discord::Result result) {});
+}
+
+void Init_Discord()
+{
+	auto result = discord::Core::Create(477910171964801060, DiscordCreateFlags_NoRequireDiscord, &discord_core);
+	
+	if (result != discord::Result::Ok)
+	{
+		Msg("[Discord RPC] Failed to create Discord RPC");
+		use_discord = false;
+		return;
+	}
+
+	discord_core->SetLogHook(discord::LogLevel::Error, DiscordLog);
+	Msg("[Discord RPC] Created successfully!");
+
+	//Set up basic RPC
+	StartTime = time(0);
+	discordPresence.SetType(discord::ActivityType::Playing);
+	discordPresence.GetTimestamps().SetStart(StartTime);
+	discordPresence.GetAssets().SetLargeImage("gamelogo");
+	discord_core->ActivityManager().UpdateActivity(discordPresence, [](discord::Result result) {});
+}
+
+void clearDiscordPresence()
+{
+	if (discord_core)
+		discord_core->ActivityManager().ClearActivity([](discord::Result result) {});
+}
+
 void Startup()
@@ -384,3 +592,14 @@
 
+	//Discord Rich Presence - Rezy
+	Init_Discord();
+
+	//Reshade
+	use_reshade = init_reshade();
+	if (use_reshade)
+		Msg("[ReShade]: Loaded compatibility addon");
+	else
+		Msg("[ReShade]: ReShade not installed or version too old - didn't load compatibility addon");
+
     // Main cycle
+	Msg("* [x-ray]: Starting Main Loop");
     Memory.mem_usage();
@@ -386,4 +605,12 @@
     Memory.mem_usage();
+
     Device.Run();
 
+	// Discord
+	clearDiscordPresence();
+
+	//Reshade
+	if (use_reshade)
+		unregister_reshade();
+
     // Destroy APP
@@ -432,2 +659,13 @@
 }
+
+// Always request high performance GPU
+extern "C"
+{
+	// https://docs.nvidia.com/gameworks/content/technologies/desktop/optimus.htm
+	_declspec(dllexport) DWORD NvOptimusEnablement = 0x00000001; // NVIDIA Optimus
+
+	// https://gpuopen.com/amdpowerxpressrequesthighperformance/
+	_declspec(dllexport) DWORD AmdPowerXpressRequestHighPerformance = 0x00000001; // PowerXpress or Hybrid Graphics
+}
+
 /*
@@ -607,45 +844,2 @@
 
-// Ôóíöèÿ äëÿ òóïûõ òðåáîâàíèé THQ è òóïûõ àìåðèêàíñêèõ ïîëüçîâàòåëåé
-BOOL IsOutOfVirtualMemory()
-{
-#define VIRT_ERROR_SIZE 256
-#define VIRT_MESSAGE_SIZE 512
-
-    //SECUROM_MARKER_HIGH_SECURITY_ON(1)
-
-    MEMORYSTATUSEX statex;
-    DWORD dwPageFileInMB = 0;
-    DWORD dwPhysMemInMB = 0;
-    HINSTANCE hApp = 0;
-    char pszError[VIRT_ERROR_SIZE];
-    char pszMessage[VIRT_MESSAGE_SIZE];
-
-    ZeroMemory(&statex, sizeof(MEMORYSTATUSEX));
-    statex.dwLength = sizeof(MEMORYSTATUSEX);
-
-    if (!GlobalMemoryStatusEx(&statex))
-        return 0;
-
-    dwPageFileInMB = (DWORD)(statex.ullTotalPageFile / (1024 * 1024));
-    dwPhysMemInMB = (DWORD)(statex.ullTotalPhys / (1024 * 1024));
-
-    // Äîâîëüíî îòôîíàðíîå óñëîâèå
-    if ((dwPhysMemInMB > 500) && ((dwPageFileInMB + dwPhysMemInMB) > 2500))
-        return 0;
-
-    hApp = GetModuleHandle(NULL);
-
-    if (!LoadString(hApp, RC_VIRT_MEM_ERROR, pszError, VIRT_ERROR_SIZE))
-        return 0;
-
-    if (!LoadString(hApp, RC_VIRT_MEM_TEXT, pszMessage, VIRT_MESSAGE_SIZE))
-        return 0;
-
-    MessageBox(NULL, pszMessage, pszError, MB_OK | MB_ICONHAND);
-
-    //SECUROM_MARKER_HIGH_SECURITY_OFF(1)
-
-    return 1;
-}
-
 #include "xr_ioc_cmd.h"
@@ -732,3 +925,5 @@
                 );
+#ifdef DEBUG
             VERIFY2(result, "can't set process heap low fragmentation");
+#endif
         }
@@ -739,6 +934,2 @@
 
-    // Check for virtual memory
-    if ((strstr(lpCmdLine, "--skipmemcheck") == NULL) && IsOutOfVirtualMemory())
-        return 0;
-
     // Check for another instance
@@ -768,4 +959,2 @@
 
-    SetThreadAffinityMask(GetCurrentThread(), 1);
-
     // Title window
@@ -814,2 +1004,28 @@
     InitSettings();
+	Msg(XRAY_MONOLITH_VERSION);
+
+	{
+		FS_FileSet fset;
+		FS.file_list(fset, "$game_data$", FS_ListFiles, "*");
+
+		// list all files in gamedata folder
+		u32 count = 0;
+		for (FS_FileSet::iterator it = fset.begin(); it != fset.end(); it++)
+		{
+			// skip virtual files from .db? archives, only interested in loose files
+			if ((*it).attrib != 0) continue;
+			Msg("gamedata: '%s'", (*it).name.c_str());
+
+			const u32 cutoff = 100;
+			if (++count >= cutoff)
+			{
+				u32 total = fset.size();
+				if (total > cutoff)
+				{
+					Msg("gamedata: ... %d more ...", total - cutoff);
+				}
+				break;
+			}
+		}
+	}
 
@@ -847,3 +1063,6 @@
 
-        Msg("command line %s", lpCmdLine);
+		extern bool ignore_verify;
+		ignore_verify = !strstr(Core.Params, "-dbgdev");
+
+		Msg("command line %s", Core.Params);
         LPCSTR sashName = "-openautomate ";
@@ -931,2 +1149,13 @@
 
+extern BOOL DllMainOpenAL32(HANDLE module, DWORD reason, LPVOID reserved);
+extern BOOL DllMainXrCore(HANDLE hinstDLL, DWORD ul_reason_for_call, LPVOID lpvReserved);
+extern BOOL DllMainXrPhysics(HANDLE hModule, DWORD ul_reason_for_call, LPVOID lpReserved);
+
+//extern BOOL DllMainXrGame(HANDLE hModule, u32 ul_reason_for_call, LPVOID lpReserved);
+//
+//extern BOOL DllMainXrRenderR1(HANDLE hModule, DWORD  ul_reason_for_call, LPVOID lpReserved);
+//extern BOOL DllMainXrRenderR2(HANDLE hModule, DWORD  ul_reason_for_call, LPVOID lpReserved);
+//extern BOOL DllMainXrRenderR3(HANDLE hModule, DWORD  ul_reason_for_call, LPVOID lpReserved);
+//extern BOOL DllMainXrRenderR4(HANDLE hModule, DWORD  ul_reason_for_call, LPVOID lpReserved);
+
 int APIENTRY WinMain(HINSTANCE hInstance,
@@ -936,17 +1165,7 @@
 {
-    //FILE* file = 0;
-    //fopen_s ( &file, "z:\\development\\call_of_prypiat\\resources\\gamedata\\shaders\\r3\\objects\\r4\\accum_sun_near_msaa_minmax.ps\\2048__1___________4_11141_", "rb" );
-    //u32 const file_size = 29544;
-    //char* buffer = (char*)malloc(file_size);
-    //fread ( buffer, file_size, 1, file );
-    //fclose ( file );
-
-    //u32 const& crc = *(u32*)buffer;
-
-    //boost::crc_32_type processor;
-    //processor.process_block ( buffer + 4, buffer + file_size );
-    //u32 const new_crc = processor.checksum( );
-    //VERIFY ( new_crc == crc );
+	DllMainOpenAL32(NULL, DLL_PROCESS_ATTACH, NULL);
+	DllMainXrCore(NULL, DLL_PROCESS_ATTACH, NULL);
+	DllMainXrPhysics(NULL, DLL_PROCESS_ATTACH, NULL);
 
-    //free (buffer);
+	DllMainXrCore(NULL, DLL_THREAD_ATTACH, NULL);
 
@@ -962,2 +1181,6 @@
 
+	DllMainXrPhysics(NULL, DLL_PROCESS_DETACH, NULL);
+	DllMainXrCore(NULL, DLL_PROCESS_DETACH, NULL);
+	DllMainOpenAL32(NULL, DLL_PROCESS_DETACH, NULL);
+
     return (0);
@@ -967,3 +1190,3 @@
 {
-    static char* tex_names[] = {"texture800", "texture", "texture1600"};
+	static char* tex_names[] = {"texture800", "texture", "texture1600", "texture2160"};
     int def_idx = 1;//default 1024x768
@@ -982,3 +1205,4 @@
     else if (h < 1024) idx = 1;
-    else idx = 2;
+	else if (h < 1440) idx = 2;
+	else idx = 3;
 #endif
@@ -1275,3 +1496,3 @@
 
-    if (g_pGamePersistent->GameType() == 1 && strstr(Core.Params, "alife"))
+	if (g_pGamePersistent->GameType() == 1 && !xr_strcmp(g_pGamePersistent->m_game_params.m_alife, "alife"))
         max_load_stage = 17;
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/x_ray.h xray-monolith/src/xrEngine/x_ray.h
--- coc-1.4-xray-64/src/xrEngine/x_ray.h	2023-10-20 20:54:50.545340300 +0100
+++ xray-monolith/src/xrEngine/x_ray.h	2023-10-20 20:54:32.532036600 +0100
@@ -76,2 +77,49 @@
 
+//Discord
+struct rpc_info
+{
+	bool mainmenu;
+	bool loadscreen;
+	bool ingame;
+	bool ex_update;
+	bool ironman;
+	bool godmode;
+	int possessed_lives;
+	int health;
+	int lives_left;
+	int level_icon_index;
+	char task_name[128];
+	char faction_name[128];
+	char rank_name[128];
+	char reputation[128];
+	char level_name[128];
+	char gamemode[128];
+	LPCSTR currenttime;
+	LPCSTR faction;
+	LPCSTR level;
+};
+
+struct rpc_strings
+{
+	char loading[128];
+	char mainmenu[128];
+	char paused[128];
+	char health[128];
+	char livesleft[128];
+	char dead[128];
+	char livesleftsingle[128];
+	char livespossessed[128];
+	char livespossessedsingle[128];
+	char godmode[128];
+};
+
+extern ENGINE_API void updateDiscordPresence();
+extern ENGINE_API rpc_info discord_gameinfo;
+extern ENGINE_API rpc_strings discord_strings;
+extern ENGINE_API float discord_update_rate;
+
+LPCSTR xr_ToUTF8(LPCSTR input, int max_length = 128);
+
+void clearDiscordPresence();
+
 #endif //__XR_BASE_H__
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/xr_collide_form.cpp xray-monolith/src/xrEngine/xr_collide_form.cpp
--- coc-1.4-xray-64/src/xrEngine/xr_collide_form.cpp	2023-10-20 20:54:50.554326900 +0100
+++ xray-monolith/src/xrEngine/xr_collide_form.cpp	2023-10-20 20:54:32.538036400 +0100
@@ -153,5 +157,6 @@
         const Fmatrix& Mbone = K->LL_GetTransform(I->elem_id);
-
-        VERIFY2(DET(Mbone)>EPS, (make_string("0 scale bone matrix, %d \n", I->elem_id) + dbg_object_full_dump_string(owner)).c_str());
-
+#ifdef DEBUG
+		VERIFY2(DET(Mbone)>EPS,
+		        (make_string("0 scale bone matrix, %d \n", I->elem_id) + dbg_object_full_dump_string(owner)).c_str());
+#endif
         switch (I->type)
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/xr_efflensflare.cpp xray-monolith/src/xrEngine/xr_efflensflare.cpp
--- coc-1.4-xray-64/src/xrEngine/xr_efflensflare.cpp	2023-10-20 20:54:50.555327600 +0100
+++ xray-monolith/src/xrEngine/xr_efflensflare.cpp	2023-10-20 20:54:32.539037800 +0100
@@ -294,3 +300,7 @@
         m_StateBlend = m_Current ? (m_StateBlend + m_Current->m_StateBlendUpSpeed * Device.fTimeDelta * tf) : 1.f + EPS;
-        if (m_StateBlend >= 1.f) m_State = lfsIdle;
+		if (m_StateBlend >= 1.f || g_pGamePersistent->Environment().m_paused)
+		{
+			m_StateBlend = 1.f;
+			m_State = lfsIdle;
+		}
         break;
@@ -298,3 +308,3 @@
         m_StateBlend = m_Current ? (m_StateBlend - m_Current->m_StateBlendDnSpeed * Device.fTimeDelta * tf) : 0.f - EPS;
-        if (m_StateBlend <= 0.f)
+		if (m_StateBlend <= 0.f || g_pGamePersistent->Environment().m_paused)
         {
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/Xr_input.cpp xray-monolith/src/xrEngine/Xr_input.cpp
--- coc-1.4-xray-64/src/xrEngine/Xr_input.cpp	2023-10-20 20:54:50.492326300 +0100
+++ xray-monolith/src/xrEngine/Xr_input.cpp	2023-10-20 20:54:32.501038600 +0100
@@ -5,3 +5,3 @@
 #include "IInputReceiver.h"
-#include "../include/editor/ide.hpp"
+//#include "../include/editor/ide.hpp"
 
@@ -23,3 +23,5 @@
 
-static bool g_exclusive = true;
+static bool g_exclusive = false;
+extern u32 g_screenmode;
+
 static void on_error_dialog(bool before)
@@ -255,3 +262,3 @@
 
-        for (i = 0; i < COUNT_KB_BUTTONS; i++)
+		for (u32 i = 0; i < COUNT_KB_BUTTONS; i++)
             if (KBState[i])
@@ -261,4 +268,7 @@
 #ifndef _EDITOR
-    if (b_alt_tab)
+	if (b_alt_tab) {
+		BOOL fullscreen = (g_screenmode == 2);
+		if (fullscreen)
         SendMessage(Device.m_hWnd, WM_SYSCOMMAND, SC_MINIMIZE, 0);
+	}
 #endif
@@ -343,2 +354,4 @@
 {
+	if ((btn == 0 || btn == 1) && !!GetSystemMetrics(SM_SWAPBUTTON))
+		btn = btn == 0 ? 1 : 0;
     return !!mouseState[btn];
@@ -378,2 +391,4 @@
 
+	bool bSwitched = !!GetSystemMetrics(SM_SWAPBUTTON);
+
     offs[0] = offs[1] = offs[2] = 0;
@@ -399,3 +414,3 @@
                 mouseState[0] = TRUE;
-                cbStack.back()->IR_OnMousePress(0);
+				cbStack.back()->IR_OnMousePress(bSwitched ? 1 : 0);
             }
@@ -404,3 +419,3 @@
                 mouseState[0] = FALSE;
-                cbStack.back()->IR_OnMouseRelease(0);
+				cbStack.back()->IR_OnMouseRelease(bSwitched ? 1 : 0);
             }
@@ -411,3 +426,3 @@
                 mouseState[1] = TRUE;
-                cbStack.back()->IR_OnMousePress(1);
+				cbStack.back()->IR_OnMousePress(bSwitched ? 0 : 1);
             }
@@ -416,3 +431,3 @@
                 mouseState[1] = FALSE;
-                cbStack.back()->IR_OnMouseRelease(1);
+				cbStack.back()->IR_OnMouseRelease(bSwitched ? 0 : 1);
             }
@@ -435,3 +450,3 @@
                 mouseState[3] = TRUE;
-                cbStack.back()->IR_OnKeyboardPress(0xED + 103);
+				cbStack.back()->IR_OnMousePress(3);
             }
@@ -440,3 +455,3 @@
                 mouseState[3] = FALSE;
-                cbStack.back()->IR_OnKeyboardRelease(0xED + 103);
+				cbStack.back()->IR_OnMouseRelease(3);
             }
@@ -447,3 +462,3 @@
                 mouseState[4] = TRUE;
-                cbStack.back()->IR_OnKeyboardPress(0xED + 104);
+				cbStack.back()->IR_OnMousePress(4);
             }
@@ -452,3 +467,3 @@
                 mouseState[4] = FALSE;
-                cbStack.back()->IR_OnKeyboardRelease(0xED + 104);
+				cbStack.back()->IR_OnMouseRelease(4);
             }
@@ -459,3 +474,3 @@
                 mouseState[5] = TRUE;
-                cbStack.back()->IR_OnKeyboardPress(0xED + 105);
+				cbStack.back()->IR_OnMousePress(5);
             }
@@ -464,3 +479,3 @@
                 mouseState[5] = FALSE;
-                cbStack.back()->IR_OnKeyboardRelease(0xED + 105);
+				cbStack.back()->IR_OnMouseRelease(5);
             }
@@ -471,3 +486,3 @@
                 mouseState[6] = TRUE;
-                cbStack.back()->IR_OnKeyboardPress(0xED + 106);
+				cbStack.back()->IR_OnMousePress(6);
             }
@@ -476,3 +491,3 @@
                 mouseState[6] = FALSE;
-                cbStack.back()->IR_OnKeyboardRelease(0xED + 106);
+				cbStack.back()->IR_OnMouseRelease(6);
             }
@@ -483,3 +498,3 @@
                 mouseState[7] = TRUE;
-                cbStack.back()->IR_OnKeyboardPress(0xED + 107);
+				cbStack.back()->IR_OnMousePress(7);
             }
@@ -488,3 +503,3 @@
                 mouseState[7] = FALSE;
-                cbStack.back()->IR_OnKeyboardRelease(0xED + 107);
+				cbStack.back()->IR_OnMouseRelease(7);
             }
@@ -496,3 +511,3 @@
     {
-        cbStack.back()->IR_OnMouseHold(0);
+		cbStack.back()->IR_OnMouseHold(bSwitched ? 1 : 0);
     }
@@ -501,3 +516,3 @@
     {
-        cbStack.back()->IR_OnMouseHold(1);
+		cbStack.back()->IR_OnMouseHold(bSwitched ? 0 : 1);
     }
@@ -508,2 +523,28 @@
     }
+
+	if (mouseState[3] && mouse_prev[3])
+	{
+		cbStack.back()->IR_OnMouseHold(3);
+	}
+
+	if (mouseState[4] && mouse_prev[4])
+	{
+		cbStack.back()->IR_OnMouseHold(4);
+	}
+
+	if (mouseState[5] && mouse_prev[5])
+	{
+		cbStack.back()->IR_OnMouseHold(5);
+	}
+
+	if (mouseState[6] && mouse_prev[6])
+	{
+		cbStack.back()->IR_OnMouseHold(6);
+	}
+
+	if (mouseState[7] && mouse_prev[7])
+	{
+		cbStack.back()->IR_OnMouseHold(7);
+	}
+
     if (dwElements)
@@ -589,2 +634,14 @@
 
+void CInput::DeactivateSoft()
+{
+	if (CurrentIR())
+		CurrentIR()->IR_OnDeactivate();
+
+	ZeroMemory(mouseState, sizeof(mouseState));
+	ZeroMemory(KBState, sizeof(KBState));
+	ZeroMemory(timeStamp, sizeof(timeStamp));
+	ZeroMemory(timeSave, sizeof(timeStamp));
+	ZeroMemory(offs, sizeof(offs));
+}
+
 void CInput::OnFrame(void)
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/xr_input.h xray-monolith/src/xrEngine/xr_input.h
--- coc-1.4-xray-64/src/xrEngine/xr_input.h	2023-10-20 20:54:50.555327600 +0100
+++ xray-monolith/src/xrEngine/xr_input.h	2023-10-20 20:54:32.540035500 +0100
@@ -88,2 +91,3 @@
     virtual void OnAppDeactivate(void);
+	void DeactivateSoft();
 
@@ -93,3 +97,3 @@
     void exclusive_mode(const bool& exclusive);
-    IC bool get_exclusive_mode();
+	bool get_exclusive_mode();
     void unacquire();
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/xr_ioc_cmd.cpp xray-monolith/src/xrEngine/xr_ioc_cmd.cpp
--- coc-1.4-xray-64/src/xrEngine/xr_ioc_cmd.cpp	2023-10-20 20:54:50.556340100 +0100
+++ xray-monolith/src/xrEngine/xr_ioc_cmd.cpp	2023-10-20 20:54:32.541038700 +0100
@@ -19,2 +19,11 @@
 
+u32 g_screenmode = 1;
+xr_token screen_mode_tokens[] = 
+{
+	{"fullscreen", 2},
+	{"borderless", 1},
+	{"windowed", 0},
+	{0, 0}
+};
+
 xr_token vid_bpp_token[] =
@@ -392,2 +422,28 @@
 };
+
+//-----------------------------------------------------------------------
+class CCC_PART_Export : public IConsole_Command
+{
+public:
+	CCC_PART_Export(LPCSTR N) : IConsole_Command(N) { bEmptyArgsHandled = TRUE; };
+
+	virtual void Execute(LPCSTR args)
+	{
+		Msg("Exporting particles...");
+		Render->ExportParticles();
+	}
+};
+
+class CCC_PART_Import : public IConsole_Command
+{
+public:
+	CCC_PART_Import(LPCSTR N) : IConsole_Command(N) { bEmptyArgsHandled = TRUE; };
+
+	virtual void Execute(LPCSTR args)
+	{
+		Msg("Importing particles...");
+		Render->ImportParticles();
+	}
+};
+
 //-----------------------------------------------------------------------
@@ -463,3 +525,38 @@
     }
+};
+
+extern void GetMonitorResolution(u32& horizontal, u32& vertical);
+
+class CCC_Screenmode : public CCC_Token
+{
+public:
+	CCC_Screenmode(LPCSTR N) : CCC_Token(N, &g_screenmode, screen_mode_tokens){};
+
+	virtual void Execute(LPCSTR args)
+	{
+		u32 prev_mode = g_screenmode;
+		CCC_Token::Execute(args);
+
+		if ((prev_mode != g_screenmode))
+		{
+			if (Device.b_is_Ready && (prev_mode == 2 || g_screenmode == 2))
+				Device.Reset();
+
+			if (g_screenmode == 0 || g_screenmode == 1)
+			{
+				u32 w, h;
+				GetMonitorResolution(w, h);
+				SetWindowLongPtr(Device.m_hWnd, GWL_STYLE, WS_VISIBLE | WS_POPUP);
+				SetWindowPos(Device.m_hWnd, HWND_TOP, 0, 0, w, h, SWP_FRAMECHANGED);
+
+				if (g_screenmode == 0)
+					SetWindowLongPtr(Device.m_hWnd, GWL_STYLE, WS_VISIBLE | WS_OVERLAPPEDWINDOW);
+			}
+		}
 
+		RECT winRect;
+		GetClientRect(Device.m_hWnd, &winRect);
+		MapWindowPoints(Device.m_hWnd, nullptr, reinterpret_cast<LPPOINT>(&winRect), 2);
+		ClipCursor(&winRect);
+	}
 };
@@ -497,2 +598,17 @@
 
+extern void updateCurrentScope();
+class CCC_ScopeFactor : public CCC_Float
+{
+public:
+	CCC_ScopeFactor(LPCSTR N, float* V) : CCC_Float(N, V, 0.01f, 1.0f)
+	{
+	}
+
+	virtual void Execute(LPCSTR args)
+	{
+		CCC_Float::Execute(args);
+		updateCurrentScope();
+	}
+};
+
 //-----------------------------------------------------------------------
@@ -557,3 +674,4 @@
 public:
-    CCC_r2(LPCSTR N) :inherited(N, &renderer_value, NULL) { renderer_value = 3; };
+	CCC_r2(LPCSTR N) : inherited(N, &renderer_value, NULL) { renderer_value = 0; };
+
     virtual ~CCC_r2()
@@ -572,9 +691,40 @@
         // 4 - r3
-        psDeviceFlags.set(rsR2, ((renderer_value > 0) && renderer_value < 4));
-        psDeviceFlags.set(rsR3, (renderer_value == 4));
-        psDeviceFlags.set(rsR4, (renderer_value >= 5));
+		LPCSTR renderer_name = "";
+		for (int i = 0; vid_quality_token[i].name; i++)
+			if (i == renderer_value)
+				renderer_name = vid_quality_token[i].name;
+
+		bool isR2 = strcmp("renderer_r2a", renderer_name) == 0;
+		isR2 |= strcmp("renderer_r2", renderer_name) == 0;
+		isR2 |= strcmp("renderer_r2.5", renderer_name) == 0;
+		psDeviceFlags.set(rsR2, isR2);
+		psDeviceFlags.set(rsR3, strcmp("renderer_r3", renderer_name) == 0);
+		psDeviceFlags.set(rsR4, strcmp("renderer_r4", renderer_name) == 0);
+
+		r2_sun_static = strcmp("renderer_r1", renderer_name) == 0;
+		r2_sun_static |= strcmp("renderer_r2a", renderer_name) == 0;
+
+		r2_advanced_pp = strcmp("renderer_r2.5", renderer_name) == 0;
+		r2_advanced_pp |= strcmp("renderer_r3", renderer_name) == 0;
+		r2_advanced_pp |= strcmp("renderer_r4", renderer_name) == 0;
+	}
 
-        r2_sun_static = (renderer_value < 2);
+	virtual void Status(TStatus& S)
+	{
+		tokens = vid_quality_token;
 
-        r2_advanced_pp = (renderer_value >= 3);
+		if (tokens == nullptr)
+			Engine.External.CreateRendererList();
+
+		while (tokens->name)
+		{
+			if (tokens->id == (int)(*value))
+			{
+				xr_strcpy(S, tokens->name);
+				return;
+			}
+			tokens++;
+		}
+		xr_strcpy(S, "?");
+		return;
     }
@@ -668,2 +822,3 @@
     {
+		F->w_printf("input_exclusive_mode %s\r\n", pInput->get_exclusive_mode() ? "on" : "off");
     }
@@ -693,4 +850,16 @@
 
+class CCC_SoundParamsSmoothing : public CCC_Integer
+{
+public:
+	CCC_SoundParamsSmoothing(LPCSTR N, int* V, int _min = 0, int _max = 999) : CCC_Integer(N, V, _min, _max) {};
 
-ENGINE_API float psHUD_FOV = 0.45f;
+	virtual void Execute(LPCSTR args)
+	{
+		CCC_Integer::Execute(args);
+		soundSmoothingParams::alpha = soundSmoothingParams::getAlpha();
+	}
+};
+
+ENGINE_API float psHUD_FOV_def = 0.45f;
+ENGINE_API float psHUD_FOV = psHUD_FOV_def;
 
@@ -713,2 +882,29 @@
 ENGINE_API float ps_r2_sun_shafts_value = 1.f;
+ENGINE_API float hit_modifier = 1.0f;
+
+extern float g_dispersion_base;
+extern float g_dispersion_factor;
+float g_AimLookFactor = 1.f;
+
+int ps_framelimiter = 0;
+Ivector4 g_crosshair_color_temp;
+float g_freelook_z_offset;
+float g_ironsights_factor = 1.25f;
+
+// crookr fake scope params (sorry)
+float scope_fog_interp = 0.15f;
+float scope_fog_travel = 0.25f;
+float scope_fog_attack = 0.66f;
+float scope_fog_mattack = 0.25f;
+//float scope_drift_amount = 1.f;
+float scope_ca = 0.003f;
+float scope_outerblur = 1.0f;
+float scope_innerblur = 0.1f;
+float scope_scrollpower = 0.66f;
+float scope_brightness = 1.0f;
+float scope_radius = 0.f;
+float scope_fog_radius = 1.25f;
+float scope_fog_sharp = 4.0f;
+int scope_2dtexactive = 0.0;
+Fvector3 ssfx_wetness_multiplier = Fvector3().set(1.0f, 0.3f, 0.0f);
 
@@ -760,2 +956,8 @@
 
+	// bone damage modifier
+	CMD4(CCC_Float, "g_hit_pwr_modif", &hit_modifier, .5f, 3.f);
+	
+	CMD4(CCC_Float, "g_dispersion_base", &g_dispersion_base, 0.0f, 5.0f);
+	CMD4(CCC_Float, "g_dispersion_factor", &g_dispersion_factor, 0.1f, 10.0f);
+
     // Render device states
@@ -763,4 +965,4 @@
 
-    CMD4(CCC_Float, "r2_sun_shafts_min", &ps_r2_sun_shafts_min, 0.0, 0.5);
-    CMD4(CCC_Float, "r2_sun_shafts_value", &ps_r2_sun_shafts_value, 0.5, 2.0);
+	CMD4(CCC_Float, "r2_sunshafts_min", &ps_r2_sun_shafts_min, 0.0, 0.5);
+	CMD4(CCC_Float, "r2_sunshafts_value", &ps_r2_sun_shafts_value, 0.5, 2.0);
 
@@ -768,4 +970,3 @@
     // CMD3(CCC_Mask, "rs_disable_objects_as_crows",&psDeviceFlags, rsDisableObjectsAsCrows );
-    CMD3(CCC_Mask, "rs_fullscreen", &psDeviceFlags, rsFullscreen);
-    CMD3(CCC_Mask, "rs_refresh_60hz", &psDeviceFlags, rsRefresh60hz);
+	CMD1(CCC_Screenmode, "rs_screenmode");
     CMD3(CCC_Mask, "rs_stats", &psDeviceFlags, rsStatistic);
@@ -788,3 +989,3 @@
     CMD4(CCC_Integer, "texture_lod", &psTextureLOD, 0, 4);
-    CMD4(CCC_Integer, "net_dedicated_sleep", &psNET_DedicatedSleep, 0, 64);
+	//CMD4(CCC_Integer, "net_dedicated_sleep", &psNET_DedicatedSleep, 0, 64);
 
@@ -797,2 +998,5 @@
 
+	CMD1(CCC_PART_Export, "part_export");
+	CMD1(CCC_PART_Import, "part_import");
+
     CMD1(CCC_VID_Reset, "vid_restart");
@@ -805,4 +1009,7 @@
     CMD3(CCC_Mask, "snd_efx", &psSoundFlags, ss_EAX);
-    CMD4(CCC_Integer, "snd_targets", &psSoundTargets, 16, 256);
+	CMD4(CCC_Integer, "snd_targets", &psSoundTargets, 32, 1024);
     CMD4(CCC_Integer, "snd_cache_size", &psSoundCacheSizeMB, 8, 256);
+	// Doppler effect power
+	CMD4(CCC_Float, "snd_doppler_power", &soundSmoothingParams::power, 0.f, 5.f);
+	CMD4(CCC_SoundParamsSmoothing, "snd_doppler_smoothing", &soundSmoothingParams::steps, 1, 100);
 
@@ -839,4 +1046,4 @@
     extern int g_Dump_Import_Obj;
-    CMD4(CCC_Integer, "net_dbg_dump_export_obj", &g_Dump_Export_Obj, 0, 1);
-    CMD4(CCC_Integer, "net_dbg_dump_import_obj", &g_Dump_Import_Obj, 0, 1);
+	//CMD4(CCC_Integer, "net_dbg_dump_export_obj", &g_Dump_Export_Obj, 0, 1);
+	//CMD4(CCC_Integer, "net_dbg_dump_import_obj", &g_Dump_Import_Obj, 0, 1);
 
@@ -846,9 +1053,9 @@
 
-    CMD1(CCC_ExclusiveMode, "input_exclusive_mode");
+	//CMD1(CCC_ExclusiveMode, "input_exclusive_mode");
 
     extern int g_svTextConsoleUpdateRate;
-    CMD4(CCC_Integer, "sv_console_update_rate", &g_svTextConsoleUpdateRate, 1, 100);
+	//CMD4(CCC_Integer, "sv_console_update_rate", &g_svTextConsoleUpdateRate, 1, 100);
 
     extern int g_svDedicateServerUpdateReate;
-    CMD4(CCC_Integer, "sv_dedicated_server_update_rate", &g_svDedicateServerUpdateReate, 1, 1000);
+	//CMD4(CCC_Integer, "sv_dedicated_server_update_rate", &g_svDedicateServerUpdateReate, 1, 1000);
 
@@ -856,2 +1063,31 @@
 
+	CMD4(CCC_Integer, "r__framelimit", &ps_framelimiter, 0, 500);
+	CMD3(CCC_Mask, "rs_refresh_60hz", &psDeviceFlags, rsRefresh60hz);
+	CMD4(CCC_CrosshairColor, "g_crosshair_color", &g_crosshair_color_temp, Ivector4().set(0, 0, 0, 0), Ivector4().set(255, 255, 255, 255));
+	CMD4(CCC_Float, "mouse_sens_aim", &g_AimLookFactor, .5f, 2.f);
+
+	if (strstr(Core.Params, "-dbgdev"))
+		CMD4(CCC_Float, "g_freelook_z_offset_factor", &g_freelook_z_offset, -3.f, 3.f);
+
+	CMD4(CCC_Float, "g_ironsights_zoom_factor", &g_ironsights_factor, 1.f, 2.f);
+	CMD4(CCC_Vector3, "ssfx_wetness_multiplier", &ssfx_wetness_multiplier, Fvector3().set(0.1f, 0.1f, 0.0f), Fvector3().set(20.0f, 20.0f, 0.0f));
+	
+	// - CrookR
+	CMD2(CCC_Float, "scope_blur_outer", &scope_outerblur);
+	CMD2(CCC_Float, "scope_blur_inner", &scope_innerblur);
+	CMD2(CCC_ScopeFactor, "scope_factor", &scope_scrollpower);
+	CMD2(CCC_Float, "scope_brightness", &scope_brightness);
+
+	CMD2(CCC_Float, "scope_fog_interp", &scope_fog_interp);
+	CMD4(CCC_Float, "scope_fog_travel", &scope_fog_travel, 0.f, 5.f);
+	CMD4(CCC_Float, "scope_fog_swayAim", &scope_fog_attack, -999.f, 999.f);
+	CMD4(CCC_Float, "scope_fog_swayMove", &scope_fog_mattack, -999.f, 999.f);
+	//CMD4(CCC_Float, "scope_drift_amount", &scope_drift_amount, -999.f, 999.f);
+
+	CMD2(CCC_Float, "scope_ca", &scope_ca);
+	CMD4(CCC_Float, "scope_radius", &scope_radius, 0, 2);
+	CMD4(CCC_Float, "scope_fog_radius", &scope_fog_radius, 0, 1000);
+	CMD4(CCC_Float, "scope_fog_sharp", &scope_fog_sharp, 0, 1000);
+	CMD2(CCC_Integer, "scope_2dtexactive", &scope_2dtexactive);
+
 #ifdef DEBUG
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/xr_ioc_cmd.h xray-monolith/src/xrEngine/xr_ioc_cmd.h
--- coc-1.4-xray-64/src/xrEngine/xr_ioc_cmd.h	2023-10-20 20:54:50.557328000 +0100
+++ xray-monolith/src/xrEngine/xr_ioc_cmd.h	2023-10-20 20:54:32.541038700 +0100
@@ -187,2 +198,9 @@
         xr_token* tok = tokens;
+
+		if (tok == nullptr)
+		{
+			Msg("!Error: %s is missing a default value", cName);
+			return;
+		}
+
         while (tok->name)
@@ -301,5 +328,21 @@
         Fvector v;
-        if (3 != sscanf(args, "%f,%f,%f", &v.x, &v.y, &v.z)) { InvalidSyntax(); return; }
-        if (v.x < min.x || v.y < min.y || v.z<min.z) { InvalidSyntax(); return; }
-        if (v.x>max.x || v.y > max.y || v.z > max.z) { InvalidSyntax(); return; }
+		if (3 != sscanf(args, "%f,%f,%f", &v.x, &v.y, &v.z))
+		{
+			if (3 != sscanf(args, "(%f,%f,%f)", &v.x, &v.y, &v.z))
+			{
+				InvalidSyntax();
+				return;
+			}
+		}
+
+		if (v.x < min.x || v.y < min.y || v.z < min.z)
+		{
+			InvalidSyntax();
+			return;
+		}
+		if (v.x > max.x || v.y > max.y || v.z > max.z)
+		{
+			InvalidSyntax();
+			return;
+		}
         value->set(v);
@@ -314,2 +359,189 @@
     }
+
+	virtual void fill_tips(vecTips& tips, u32 mode)
+	{
+		TStatus str;
+		xr_sprintf(str, sizeof(str), "(%e, %e, %e) (current) [(%e,%e,%e)-(%e,%e,%e)]", value->x, value->y, value->z,
+		           min.x, min.y, min.z, max.x, max.y, max.z);
+		tips.push_back(str);
+		IConsole_Command::fill_tips(tips, mode);
+	}
+};
+
+class CCC_Vector4 : public IConsole_Command
+{
+protected:
+	Fvector4* value;
+	Fvector4 min, max;
+	public
+:
+	CCC_Vector4(LPCSTR N, Fvector4* V, const Fvector4 _min, const Fvector4 _max) :
+		IConsole_Command(N),
+		value(V)
+	{
+		min.set(_min);
+		max.set(_max);
+	};
+	const Fvector4 GetValue() const { return *value; };
+	Fvector4* GetValuePtr() const { return value; };
+
+	virtual void Execute(LPCSTR args)
+	{
+		Fvector4 v;
+		if (4 != sscanf(args, "%f,%f,%f,%f", &v.x, &v.y, &v.z, &v.w))
+		{
+			if (4 != sscanf(args, "(%f,%f,%f,%f)", &v.x, &v.y, &v.z, &v.w))
+			{
+				InvalidSyntax();
+				return;
+			}
+		}
+
+		if (v.x < min.x || v.y < min.y || v.z < min.z || v.w < min.w)
+		{
+			InvalidSyntax();
+			return;
+		}
+		if (v.x > max.x || v.y > max.y || v.z > max.z || v.w > max.w)
+		{
+			InvalidSyntax();
+			return;
+		}
+		value->set(v);
+	}
+
+	virtual void Status(TStatus& S)
+	{
+		xr_sprintf(S, sizeof(S), "(%f, %f, %f, %f)", value->x, value->y, value->z, value->w);
+	}
+
+	virtual void Info(TInfo& I)
+	{
+		xr_sprintf(I, sizeof(I), "vector4 in range [%e,%e,%e,%e]-[%e,%e,%e,%e]", min.x, min.y, min.z, min.w, max.x, max.y, max.z, max.w);
+	}
+
+	virtual void fill_tips(vecTips& tips, u32 mode)
+	{
+		TStatus str;
+		xr_sprintf(str, sizeof(str), "(%e, %e, %e, %e) (current) [(%e,%e,%e,%e)-(%e,%e,%e,%e)]", value->x, value->y, value->z, value->w,
+			min.x, min.y, min.z, min.w, max.x, max.y, max.z, max.w);
+		tips.push_back(str);
+		IConsole_Command::fill_tips(tips, mode);
+	}
+};
+
+class CCC_IVector3 : public IConsole_Command
+{
+protected:
+	Ivector3* value;
+	Ivector3 min, max;
+	public
+		:
+			CCC_IVector3(LPCSTR N, Ivector3* V, const Ivector3 _min, const Ivector3 _max) :
+				IConsole_Command(N),
+				value(V)
+			{
+				min.set(_min.x, _min.y, _min.z);
+				max.set(_max.x, _max.y, _max.z);
+			};
+			const Ivector3 GetValue() const { return *value; };
+			Ivector3* GetValuePtr() const { return value; };
+
+			virtual void Execute(LPCSTR args)
+			{
+				Ivector3 v;
+				if (3 != sscanf(args, "%i,%i,%i", &v.x, &v.y, &v.z))
+				{
+					if (3 != sscanf(args, "(%i,%i,%i)", &v.x, &v.y, &v.z))
+					{
+						InvalidSyntax();
+						return;
+					}
+				}
+
+				if (v.x < min.x || v.y < min.y || v.z < min.z)
+				{
+					InvalidSyntax();
+					return;
+				}
+				if (v.x > max.x || v.y > max.y || v.z > max.z)
+				{
+					InvalidSyntax();
+					return;
+				}
+				value->set(v.x, v.y, v.z);
+			}
+
+			virtual void Status(TStatus& S)
+			{
+				xr_sprintf(S, sizeof(S), "(%i, %i, %i)", value->x, value->y, value->z);
+			}
+
+			virtual void Info(TInfo& I)
+			{
+				xr_sprintf(I, sizeof(I), "ivector3 in range [%i,%i,%i]-[%i,%i,%i]", min.x, min.y, min.z, max.x, max.y, max.z);
+			}
+
+			virtual void fill_tips(vecTips& tips, u32 mode)
+			{
+				TStatus str;
+				xr_sprintf(str, sizeof(str), "(%i, %i, %i) (current) [(%i,%i,%i)-(%i,%i,%i)]", value->x, value->y, value->z,
+					min.x, min.y, min.z, max.x, max.y, max.z);
+				tips.push_back(str);
+				IConsole_Command::fill_tips(tips, mode);
+			}
+};
+
+class CCC_IVector4 : public IConsole_Command
+{
+protected:
+	Ivector4* value;
+	Ivector4 min, max;
+	public
+		:
+			CCC_IVector4(LPCSTR N, Ivector4* V, const Ivector4 _min, const Ivector4 _max) :
+				IConsole_Command(N),
+				value(V)
+			{
+				min.set(_min);
+				max.set(_max);
+			};
+			const Ivector4 GetValue() const { return *value; };
+			Ivector4* GetValuePtr() const { return value; };
+
+			virtual void Execute(LPCSTR args)
+			{
+				Ivector4 v;
+				if (4 != sscanf(args, "%i,%i,%i,%i", &v.x, &v.y, &v.z, &v.w))
+				{
+					if (4 != sscanf(args, "(%i,%i,%i,%i)", &v.x, &v.y, &v.z, &v.w))
+					{
+						InvalidSyntax();
+						return;
+					}
+				}
+
+				if (v.x < min.x || v.y < min.y || v.z < min.z || v.w < min.w)
+				{
+					InvalidSyntax();
+					return;
+				}
+				if (v.x > max.x || v.y > max.y || v.z > max.z || v.w > max.w)
+				{
+					InvalidSyntax();
+					return;
+				}
+				value->set(v);
+			}
+
+			virtual void Status(TStatus& S)
+			{
+				xr_sprintf(S, sizeof(S), "(%i, %i, %i, %i)", value->x, value->y, value->z, value->w);
+			}
+
+			virtual void Info(TInfo& I)
+			{
+				xr_sprintf(I, sizeof(I), "ivector4 in range [%i,%i,%i,%i]-[%i,%i,%i,%i]", min.x, min.y, min.z, min.w, max.x, max.y, max.z, max.w);
+			}
+
     virtual void fill_tips(vecTips& tips, u32 mode)
@@ -317,3 +549,4 @@
         TStatus str;
-        xr_sprintf(str, sizeof(str), "(%e, %e, %e) (current) [(%e,%e,%e)-(%e,%e,%e)]", value->x, value->y, value->z, min.x, min.y, min.z, max.x, max.y, max.z);
+				xr_sprintf(str, sizeof(str), "(%i, %i, %i, %i) (current) [(%i,%i,%i,%i)-(%i,%i,%i,%i)]", value->x, value->y, value->z, value->w,
+					min.x, min.y, min.z, min.w, max.x, max.y, max.z, max.w);
         tips.push_back(str);
@@ -321,3 +554,17 @@
     }
+};
+
+extern u32 g_crosshair_color;
 
+class CCC_CrosshairColor : public CCC_IVector4
+{
+public:
+	CCC_CrosshairColor(LPCSTR N, Ivector4* V, const Ivector4 _min, const Ivector4 _max) :
+		CCC_IVector4(N, V, _min, _max){};
+
+	virtual void Execute(LPCSTR args)
+	{
+		CCC_IVector4::Execute(args);
+		g_crosshair_color = D3DCOLOR_RGBA(value->x, value->y, value->z, value->w);
+	}
 };
@@ -381,3 +637,3 @@
     {
-        strncpy_s(value, size, args, size - 1);
+		strncpy_s(value, size, !xr_strcmp(args, "(NULL)") ? "" : args, size - 1);
     }
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/XR_IOConsole.cpp xray-monolith/src/xrEngine/XR_IOConsole.cpp
--- coc-1.4-xray-64/src/xrEngine/XR_IOConsole.cpp	2023-10-20 20:54:50.490326500 +0100
+++ xray-monolith/src/xrEngine/XR_IOConsole.cpp	2023-10-20 20:54:32.500036400 +0100
@@ -259,2 +259,5 @@
 
+	if (psDeviceFlags.test(rsCameraPos) || psDeviceFlags.test(rsStatistic) || Device.Statistic->errors.size())
+		Device.Statistic->Show();
+
     if (!m_hShader_back)
@@ -577,6 +580,2 @@
 
-    scroll_delta = 0;
-    reset_cmd_history_idx();
-    reset_selected_tip();
-
     text_editor::remove_spaces(edt);
@@ -588,2 +587,6 @@
     {
+		scroll_delta = 0;
+		reset_cmd_history_idx();
+		reset_selected_tip();
+
         char c[2];
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/XR_IOConsole.h xray-monolith/src/xrEngine/XR_IOConsole.h
--- coc-1.4-xray-64/src/xrEngine/XR_IOConsole.h	2023-10-20 20:54:50.490326500 +0100
+++ xray-monolith/src/xrEngine/XR_IOConsole.h	2023-10-20 20:54:32.500036400 +0100
@@ -171,2 +180,4 @@
 protected:
+	void xr_stdcall Screenshot();
+
     void xr_stdcall Prev_log();
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/XR_IOConsole_callback.cpp xray-monolith/src/xrEngine/XR_IOConsole_callback.cpp
--- coc-1.4-xray-64/src/xrEngine/XR_IOConsole_callback.cpp	2023-10-20 20:54:50.491326800 +0100
+++ xray-monolith/src/xrEngine/XR_IOConsole_callback.cpp	2023-10-20 20:54:32.500036400 +0100
@@ -41,2 +41,10 @@
     ec().assign_callback(DIK_GRAVE, text_editor::ks_free, Callback(this, &CConsole::Hide_cmd));
+
+	//Screenshot
+	ec().assign_callback(DIK_F12, text_editor::ks_free, Callback(this, &CConsole::Screenshot));
+}
+
+void CConsole::Screenshot()
+{
+	Device.Screenshot();
 }
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/xr_object.cpp xray-monolith/src/xrEngine/xr_object.cpp
--- coc-1.4-xray-64/src/xrEngine/xr_object.cpp	2023-10-20 20:54:50.557328000 +0100
+++ xray-monolith/src/xrEngine/xr_object.cpp	2023-10-20 20:54:32.541038700 +0100
@@ -149,7 +153,23 @@
 //void CObject::Center (Fvector& C) const { VERIFY2(renderable.visual,*cName()); renderable.xform.transform_tiny(C,renderable.visual->vis.sphere.P); }
-void CObject::Center(Fvector& C) const { VERIFY2(renderable.visual, *cName()); renderable.xform.transform_tiny(C, renderable.visual->getVisData().sphere.P); }
+void CObject::Center(Fvector& C) const
+{
+	VERIFY2(renderable.visual, *cName());
+	if (renderable.visual)
+		renderable.xform.transform_tiny(C, renderable.visual->getVisData().sphere.P);
+}
+
 //float CObject::Radius () const { VERIFY2(renderable.visual,*cName()); return renderable.visual->vis.sphere.R; }
-float CObject::Radius() const { VERIFY2(renderable.visual, *cName()); return renderable.visual->getVisData().sphere.R; }
+float CObject::Radius() const
+{
+	VERIFY2(renderable.visual, *cName());
+	return renderable.visual ? renderable.visual->getVisData().sphere.R : 0.0f;
+}
+
 //const Fbox& CObject::BoundingBox () const { VERIFY2(renderable.visual,*cName()); return renderable.visual->vis.box; }
-const Fbox& CObject::BoundingBox() const { VERIFY2(renderable.visual, *cName()); return renderable.visual->getVisData().box; }
+const Fbox& CObject::BoundingBox() const
+{
+	static const Fbox NULL_BOX = Fbox{}.null();
+	VERIFY2(renderable.visual, *cName());
+	return renderable.visual ? renderable.visual->getVisData().box : NULL_BOX;
+}
 
@@ -165,2 +185,3 @@
     Props.storage = 0;
+	setID((u16)-1);
 
@@ -219,3 +240,3 @@
         {
-            VERIFY3(*NameVisual, "Model isn't assigned for object, but cform requisted", *cName());
+			R_ASSERT3(*NameVisual, "Model isn't assigned for object, but cform requisted", *cName());
             collidable.model = xr_new<CCF_Skeleton>(this);
@@ -448,3 +473,7 @@
     else
+	{
+#ifdef DEBUG
         VERIFY(!g_pGameLevel->Objects.registered_object_to_destroy(this));
+#endif
+	}
 }
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/xr_object_list.cpp xray-monolith/src/xrEngine/xr_object_list.cpp
--- coc-1.4-xray-64/src/xrEngine/xr_object_list.cpp	2023-10-20 20:54:50.558327800 +0100
+++ xray-monolith/src/xrEngine/xr_object_list.cpp	2023-10-20 20:54:32.542036700 +0100
@@ -124,4 +128,5 @@
     O->UpdateCL();
-
+#ifdef DEBUG
     VERIFY3(O->dbg_update_cl == Device.dwFrame, "Broken sequence of calls to 'UpdateCL'", *O->cName());
+#endif
 #if 0//ndef DEBUG
@@ -577,4 +582,5 @@
 {
+#ifdef DEBUG
     VERIFY(!registered_object_to_destroy(object_to_destroy));
-    // Msg("CObjectList::register_object_to_destroy [%x]", object_to_destroy);
+#endif
     destroy_queue.push_back(object_to_destroy);
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/xrEngine.vcxproj xray-monolith/src/xrEngine/xrEngine.vcxproj
--- coc-1.4-xray-64/src/xrEngine/xrEngine.vcxproj	2023-10-20 20:54:50.545340300 +0100
+++ xray-monolith/src/xrEngine/xrEngine.vcxproj	2023-10-20 20:54:32.532036600 +0100
@@ -1,66 +1,38 @@
-ï»¿<?xml version="1.0" encoding="utf-8"?>
-<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
   <ItemGroup Label="ProjectConfigurations">
-    <ProjectConfiguration Include="Debug_Dedicated|Win32">
-      <Configuration>Debug_Dedicated</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Debug_Dedicated|x64">
-      <Configuration>Debug_Dedicated</Configuration>
+    <ProjectConfiguration Include="ReleaseR1-AVX|x64">
+      <Configuration>ReleaseR1-AVX</Configuration>
       <Platform>x64</Platform>
     </ProjectConfiguration>
-    <ProjectConfiguration Include="Debug_NEW|Win32">
-      <Configuration>Debug_NEW</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Debug_NEW|x64">
-      <Configuration>Debug_NEW</Configuration>
+    <ProjectConfiguration Include="ReleaseR1|x64">
+      <Configuration>ReleaseR1</Configuration>
       <Platform>x64</Platform>
     </ProjectConfiguration>
-    <ProjectConfiguration Include="Debug|Win32">
-      <Configuration>Debug</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Debug|x64">
-      <Configuration>Debug</Configuration>
+    <ProjectConfiguration Include="ReleaseR2-AVX|x64">
+      <Configuration>ReleaseR2-AVX</Configuration>
       <Platform>x64</Platform>
     </ProjectConfiguration>
-    <ProjectConfiguration Include="Mixed_Dedicated|Win32">
-      <Configuration>Mixed_Dedicated</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Mixed_Dedicated|x64">
-      <Configuration>Mixed_Dedicated</Configuration>
+    <ProjectConfiguration Include="ReleaseR2|x64">
+      <Configuration>ReleaseR2</Configuration>
       <Platform>x64</Platform>
     </ProjectConfiguration>
-    <ProjectConfiguration Include="Mixed|Win32">
-      <Configuration>Mixed</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Mixed|x64">
-      <Configuration>Mixed</Configuration>
+    <ProjectConfiguration Include="ReleaseR3-AVX|x64">
+      <Configuration>ReleaseR3-AVX</Configuration>
       <Platform>x64</Platform>
     </ProjectConfiguration>
-    <ProjectConfiguration Include="Release_Dedicated|Win32">
-      <Configuration>Release_Dedicated</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Release_Dedicated|x64">
-      <Configuration>Release_Dedicated</Configuration>
+    <ProjectConfiguration Include="ReleaseR3|x64">
+      <Configuration>ReleaseR3</Configuration>
       <Platform>x64</Platform>
     </ProjectConfiguration>
-    <ProjectConfiguration Include="Release_LuaJit_one|Win32">
-      <Configuration>Release_LuaJit_one</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Release_LuaJit_one|x64">
-      <Configuration>Release_LuaJit_one</Configuration>
+    <ProjectConfiguration Include="ReleaseR4-AVX|x64">
+      <Configuration>ReleaseR4-AVX</Configuration>
       <Platform>x64</Platform>
     </ProjectConfiguration>
-    <ProjectConfiguration Include="Release|Win32">
-      <Configuration>Release</Configuration>
-      <Platform>Win32</Platform>
+    <ProjectConfiguration Include="ReleaseR4|x64">
+      <Configuration>ReleaseR4</Configuration>
+      <Platform>x64</Platform>
     </ProjectConfiguration>
-    <ProjectConfiguration Include="Release|x64">
-      <Configuration>Release</Configuration>
+    <ProjectConfiguration Include="VerifiedDX11|x64">
+      <Configuration>VerifiedDX11</Configuration>
       <Platform>x64</Platform>
@@ -71,107 +43,67 @@
     <RootNamespace>xrEngine</RootNamespace>
+    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_Dedicated|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <PlatformToolset>v120</PlatformToolset>
-    <UseOfMfc>false</UseOfMfc>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_Dedicated|x64'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <PlatformToolset>v120</PlatformToolset>
-    <UseOfMfc>false</UseOfMfc>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Mixed_Dedicated|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <PlatformToolset>v120</PlatformToolset>
-    <UseOfMfc>false</UseOfMfc>
-    <CharacterSet>MultiByte</CharacterSet>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Mixed_Dedicated|x64'" Label="Configuration">
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR2|x64'" Label="Configuration">
     <ConfigurationType>Application</ConfigurationType>
-    <PlatformToolset>v120</PlatformToolset>
+    <PlatformToolset>v140</PlatformToolset>
     <UseOfMfc>false</UseOfMfc>
     <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization>false</WholeProgramOptimization>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Dedicated|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <PlatformToolset>v120</PlatformToolset>
-    <UseOfMfc>false</UseOfMfc>
-    <CharacterSet>MultiByte</CharacterSet>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Dedicated|x64'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <PlatformToolset>v120</PlatformToolset>
-    <UseOfMfc>false</UseOfMfc>
-    <CharacterSet>MultiByte</CharacterSet>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <PlatformToolset>v120</PlatformToolset>
-    <UseOfMfc>false</UseOfMfc>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <PlatformToolset>v120</PlatformToolset>
-    <UseOfMfc>false</UseOfMfc>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_NEW|Win32'" Label="Configuration">
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR2-AVX|x64'" Label="Configuration">
     <ConfigurationType>Application</ConfigurationType>
-    <PlatformToolset>v120</PlatformToolset>
+    <PlatformToolset>v140</PlatformToolset>
     <UseOfMfc>false</UseOfMfc>
     <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <WholeProgramOptimization>false</WholeProgramOptimization>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_NEW|x64'" Label="Configuration">
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR4|x64'" Label="Configuration">
     <ConfigurationType>Application</ConfigurationType>
-    <PlatformToolset>v120</PlatformToolset>
+    <PlatformToolset>v140</PlatformToolset>
     <UseOfMfc>false</UseOfMfc>
     <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <WholeProgramOptimization>false</WholeProgramOptimization>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_LuaJit_one|Win32'" Label="Configuration">
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='VerifiedDX11|x64'" Label="Configuration">
     <ConfigurationType>Application</ConfigurationType>
-    <PlatformToolset>v120</PlatformToolset>
+    <PlatformToolset>v140</PlatformToolset>
     <UseOfMfc>false</UseOfMfc>
     <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <WholeProgramOptimization>false</WholeProgramOptimization>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_LuaJit_one|x64'" Label="Configuration">
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR4-AVX|x64'" Label="Configuration">
     <ConfigurationType>Application</ConfigurationType>
-    <PlatformToolset>v120</PlatformToolset>
+    <PlatformToolset>v140</PlatformToolset>
     <UseOfMfc>false</UseOfMfc>
     <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <WholeProgramOptimization>false</WholeProgramOptimization>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Mixed|Win32'" Label="Configuration">
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR3|x64'" Label="Configuration">
     <ConfigurationType>Application</ConfigurationType>
-    <PlatformToolset>v120</PlatformToolset>
+    <PlatformToolset>v140</PlatformToolset>
     <UseOfMfc>false</UseOfMfc>
     <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization>false</WholeProgramOptimization>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Mixed|x64'" Label="Configuration">
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR3-AVX|x64'" Label="Configuration">
     <ConfigurationType>Application</ConfigurationType>
-    <PlatformToolset>v120</PlatformToolset>
+    <PlatformToolset>v140</PlatformToolset>
     <UseOfMfc>false</UseOfMfc>
     <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization>false</WholeProgramOptimization>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR1|x64'" Label="Configuration">
     <ConfigurationType>Application</ConfigurationType>
-    <PlatformToolset>v120</PlatformToolset>
+    <PlatformToolset>v140</PlatformToolset>
     <UseOfMfc>false</UseOfMfc>
     <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization>false</WholeProgramOptimization>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR1-AVX|x64'" Label="Configuration">
     <ConfigurationType>Application</ConfigurationType>
-    <PlatformToolset>v120</PlatformToolset>
+    <PlatformToolset>v140</PlatformToolset>
     <UseOfMfc>false</UseOfMfc>
     <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization>false</WholeProgramOptimization>
   </PropertyGroup>
@@ -180,28 +112,3 @@
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release_Dedicated|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
-    <Import Project="$(SolutionDir)Common.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release_Dedicated|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
-    <Import Project="$(SolutionDir)Common.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Mixed_Dedicated|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
-    <Import Project="$(SolutionDir)Common.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Mixed_Dedicated|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
-    <Import Project="$(SolutionDir)Common.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Dedicated|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
-    <Import Project="$(SolutionDir)Common.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Dedicated|x64'" Label="PropertySheets">
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR2|x64'" Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
@@ -210,3 +117,3 @@
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR2-AVX|x64'" Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
@@ -215,3 +122,3 @@
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR4|x64'" Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
@@ -220,3 +127,3 @@
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug_NEW|Win32'" Label="PropertySheets">
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='VerifiedDX11|x64'" Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
@@ -225,3 +132,3 @@
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug_NEW|x64'" Label="PropertySheets">
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR4-AVX|x64'" Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
@@ -230,3 +137,3 @@
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release_LuaJit_one|Win32'" Label="PropertySheets">
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR3|x64'" Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
@@ -235,3 +142,3 @@
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release_LuaJit_one|x64'" Label="PropertySheets">
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR3-AVX|x64'" Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
@@ -240,3 +147,3 @@
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Mixed|Win32'" Label="PropertySheets">
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR1|x64'" Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
@@ -245,13 +152,3 @@
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Mixed|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
-    <Import Project="$(SolutionDir)Common.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
-    <Import Project="$(SolutionDir)Common.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR1-AVX|x64'" Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
@@ -264,268 +161,57 @@
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR2|x64'">
+    <LinkIncremental>false</LinkIncremental>
     <OutDir>$(xrGameDir)bin_dbg\</OutDir>
+    <TargetName>AnomalyDX9</TargetName>
     <IntDir>$(xrIntDir)$(ProjectName)\</IntDir>
-    <ExtensionsToDeleteOnClean>*.idb%3b*.obj%3b*.ilk%3b*.pdb%3b*.tlb%3b*.tli%3b*.tlh%3b*.tmp%3b*.rsp%3b*.bat%3b$(TargetPath)</ExtensionsToDeleteOnClean>
-    <IgnoreImportLibrary>true</IgnoreImportLibrary>
-    <LinkIncremental>true</LinkIncremental>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <ExtensionsToDeleteOnClean>*.idb%3b*.obj%3b*.ilk%3b*.pdb%3b*.tlb%3b*.tli%3b*.tlh%3b*.tmp%3b*.rsp%3b*.bat%3b$(TargetPath)</ExtensionsToDeleteOnClean>
-    <IgnoreImportLibrary>true</IgnoreImportLibrary>
-    <LinkIncremental>true</LinkIncremental>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Mixed|Win32'">
-    <OutDir>$(xrBinDir)</OutDir>
-    <IntDir>$(xrIntDir)$(ProjectName)\</IntDir>
-    <LinkIncremental>false</LinkIncremental>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Mixed|x64'">
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR2-AVX|x64'">
     <LinkIncremental>false</LinkIncremental>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <OutDir>$(xrGameDir)bin_rel\</OutDir>
+    <OutDir>$(xrGameDir)bin_dbg\</OutDir>
+    <TargetName>AnomalyDX9AVX</TargetName>
     <IntDir>$(xrIntDir)$(ProjectName)\</IntDir>
-    <LinkIncremental>false</LinkIncremental>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR4|x64'">
     <LinkIncremental>false</LinkIncremental>
+    <OutDir>$(xrGameDir)bin_dbg\</OutDir>
+    <TargetName>AnomalyDX11</TargetName>
+    <IntDir>$(xrIntDir)$(ProjectName)\</IntDir>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_NEW|Win32'">
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='VerifiedDX11|x64'">
+    <LinkIncremental>true</LinkIncremental>
     <OutDir>$(xrGameDir)bin_dbg\</OutDir>
+    <TargetName>VerifiedDX11</TargetName>
     <IntDir>$(xrIntDir)$(ProjectName)\</IntDir>
-    <LinkIncremental>false</LinkIncremental>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_NEW|x64'">
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR4-AVX|x64'">
     <LinkIncremental>false</LinkIncremental>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_LuaJit_one|Win32'">
-    <OutDir>$(xrGameDir)bin_rel\</OutDir>
+    <OutDir>$(xrGameDir)bin_dbg\</OutDir>
+    <TargetName>AnomalyDX11AVX</TargetName>
     <IntDir>$(xrIntDir)$(ProjectName)\</IntDir>
-    <LinkIncremental>false</LinkIncremental>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_LuaJit_one|x64'">
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR3|x64'">
     <LinkIncremental>false</LinkIncremental>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Dedicated|Win32'">
-    <OutDir>$(xrBinDir)dedicated\</OutDir>
+    <OutDir>$(xrGameDir)bin_dbg\</OutDir>
+    <TargetName>AnomalyDX10</TargetName>
     <IntDir>$(xrIntDir)$(ProjectName)\</IntDir>
-    <ExtensionsToDeleteOnClean>*.idb%3b*.obj%3b*.ilk%3b*.pdb%3b*.tlb%3b*.tli%3b*.tlh%3b*.tmp%3b*.rsp%3b*.bat%3b$(TargetPath)</ExtensionsToDeleteOnClean>
-    <IgnoreImportLibrary>true</IgnoreImportLibrary>
-    <LinkIncremental>true</LinkIncremental>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Dedicated|x64'">
-    <ExtensionsToDeleteOnClean>*.idb%3b*.obj%3b*.ilk%3b*.pdb%3b*.tlb%3b*.tli%3b*.tlh%3b*.tmp%3b*.rsp%3b*.bat%3b$(TargetPath)</ExtensionsToDeleteOnClean>
-    <IgnoreImportLibrary>true</IgnoreImportLibrary>
-    <LinkIncremental>true</LinkIncremental>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Mixed_Dedicated|Win32'">
-    <OutDir>$(xrBinDir)dedicated\</OutDir>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR3-AVX|x64'">
+    <LinkIncremental>false</LinkIncremental>
+    <OutDir>$(xrGameDir)bin_dbg\</OutDir>
+    <TargetName>AnomalyDX10AVX</TargetName>
     <IntDir>$(xrIntDir)$(ProjectName)\</IntDir>
-    <LinkIncremental>true</LinkIncremental>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Mixed_Dedicated|x64'">
-    <LinkIncremental>true</LinkIncremental>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_Dedicated|Win32'">
-    <OutDir>$(xrBinDir)dedicated\</OutDir>
-    <IntDir>$(xrIntDir)$(ProjectName)\</IntDir>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR1|x64'">
     <LinkIncremental>false</LinkIncremental>
+    <OutDir>$(xrGameDir)bin_dbg\</OutDir>
+    <TargetName>AnomalyDX8</TargetName>
+    <IntDir>$(xrIntDir)$(ProjectName)\</IntDir>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_Dedicated|x64'">
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR1-AVX|x64'">
     <LinkIncremental>false</LinkIncremental>
+    <OutDir>$(xrGameDir)bin_dbg\</OutDir>
+    <TargetName>AnomalyDX8AVX</TargetName>
+    <IntDir>$(xrIntDir)$(ProjectName)\</IntDir>
   </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <ClCompile>
-      <AdditionalOptions>/Zm200 %(AdditionalOptions)</AdditionalOptions>
-      <Optimization>Disabled</Optimization>
-      <IntrinsicFunctions>false</IntrinsicFunctions>
-      <FavorSizeOrSpeed>Neither</FavorSizeOrSpeed>
-      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
-      <AdditionalIncludeDirectories>.;$(SolutionDir)3rd party\luajit-2\src\;$(SolutionDir)3rd party\luabind\;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>USE_LUAJIT_ONE;INGAME_EDITOR;DEBUG;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <StringPooling>false</StringPooling>
-      <MinimalRebuild>true</MinimalRebuild>
-      <ExceptionHandling>Sync</ExceptionHandling>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <SmallerTypeCheck>true</SmallerTypeCheck>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <BufferSecurityCheck>true</BufferSecurityCheck>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <FloatingPointModel>Fast</FloatingPointModel>
-      <ForceConformanceInForLoopScope>false</ForceConformanceInForLoopScope>
-      <RuntimeTypeInfo>true</RuntimeTypeInfo>
-      <PrecompiledHeader>Use</PrecompiledHeader>
-      <PrecompiledHeaderFile>stdafx.h</PrecompiledHeaderFile>
-      <BrowseInformation />
-      <WarningLevel>Level4</WarningLevel>
-      <SuppressStartupBanner>true</SuppressStartupBanner>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <CompileAs>Default</CompileAs>
-    </ClCompile>
-    <ResourceCompile>
-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <Culture>0x0422</Culture>
-    </ResourceCompile>
-    <Link>
-      <AdditionalOptions>/ignore:4099 /MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>
-      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;oalib.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <ShowProgress>NotSet</ShowProgress>
-      <SuppressStartupBanner>true</SuppressStartupBanner>
-      <AdditionalLibraryDirectories>$(DXSDK_DIR)Lib\x86;$(SolutionDir)3rd party\luajit-2\src\;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(XRAY_16X_LIBS)libogg-1.1.4\win32\lib\$(Platform)\Release;$(XRAY_16X_LIBS)libtheora-1.1.1\win32\lib\$(Platform)\Release;$(xrSdkDir)libraries;$(xrLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
-      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <MapExports>false</MapExports>
-      <SubSystem>Windows</SubSystem>
-      <LargeAddressAware>true</LargeAddressAware>
-      <RandomizedBaseAddress>false</RandomizedBaseAddress>
-      <ImportLibrary>$(xrLibDir)$(TargetName).lib</ImportLibrary>
-      <IgnoreAllDefaultLibraries>
-      </IgnoreAllDefaultLibraries>
-    </Link>
-    <Manifest>
-      <AdditionalManifestFiles>as-invoker-manifest-part.xml;%(AdditionalManifestFiles)</AdditionalManifestFiles>
-    </Manifest>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <ClCompile>
-      <AdditionalOptions>/Zm200 %(AdditionalOptions)</AdditionalOptions>
-      <Optimization>Disabled</Optimization>
-      <IntrinsicFunctions>false</IntrinsicFunctions>
-      <FavorSizeOrSpeed>Neither</FavorSizeOrSpeed>
-      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
-      <AdditionalIncludeDirectories>.;$(SolutionDir)3rd party\luajit-2\src\;$(SolutionDir)3rd party\luabind\;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>USE_LUAJIT_ONE;INGAME_EDITOR;DEBUG;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <StringPooling>false</StringPooling>
-      <ExceptionHandling>Sync</ExceptionHandling>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <SmallerTypeCheck>true</SmallerTypeCheck>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <BufferSecurityCheck>true</BufferSecurityCheck>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <FloatingPointModel>Fast</FloatingPointModel>
-      <ForceConformanceInForLoopScope>false</ForceConformanceInForLoopScope>
-      <RuntimeTypeInfo>true</RuntimeTypeInfo>
-      <PrecompiledHeader>Use</PrecompiledHeader>
-      <PrecompiledHeaderFile>stdafx.h</PrecompiledHeaderFile>
-      <BrowseInformation>
-      </BrowseInformation>
-      <WarningLevel>Level4</WarningLevel>
-      <SuppressStartupBanner>true</SuppressStartupBanner>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <CompileAs>Default</CompileAs>
-    </ClCompile>
-    <ResourceCompile>
-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <Culture>0x0422</Culture>
-    </ResourceCompile>
-    <Link>
-      <AdditionalOptions>/ignore:4099 /MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>
-      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;oalib.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <ShowProgress>NotSet</ShowProgress>
-      <SuppressStartupBanner>true</SuppressStartupBanner>
-      <AdditionalLibraryDirectories>$(DXSDK_DIR)Lib\x86;$(SolutionDir)3rd party\luajit-2\src\;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(XRAY_16X_LIBS)libogg-1.1.4\win32\lib\$(Platform)\Release;$(XRAY_16X_LIBS)libtheora-1.1.1\win32\lib\$(Platform)\Release;$(xrSdkDir)libraries;$(xrLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
-      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <MapExports>false</MapExports>
-      <SubSystem>Windows</SubSystem>
-      <LargeAddressAware>true</LargeAddressAware>
-      <RandomizedBaseAddress>false</RandomizedBaseAddress>
-      <ImportLibrary>$(xrLibDir)$(TargetName).lib</ImportLibrary>
-      <IgnoreAllDefaultLibraries>
-      </IgnoreAllDefaultLibraries>
-    </Link>
-    <Manifest>
-      <AdditionalManifestFiles>as-invoker-manifest-part.xml;%(AdditionalManifestFiles)</AdditionalManifestFiles>
-    </Manifest>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Mixed|Win32'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
-      <OmitFramePointers>false</OmitFramePointers>
-      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
-      <AdditionalIncludeDirectories>.;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>INGAME_EDITOR;DEBUG;MIXED;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <StringPooling>true</StringPooling>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <BufferSecurityCheck>true</BufferSecurityCheck>
-      <FunctionLevelLinking>false</FunctionLevelLinking>
-      <FloatingPointModel>Fast</FloatingPointModel>
-      <ForceConformanceInForLoopScope>false</ForceConformanceInForLoopScope>
-      <RuntimeTypeInfo>true</RuntimeTypeInfo>
-      <PrecompiledHeader>Use</PrecompiledHeader>
-      <PrecompiledHeaderFile>stdafx.h</PrecompiledHeaderFile>
-      <WarningLevel>Level4</WarningLevel>
-      <SuppressStartupBanner>true</SuppressStartupBanner>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <ResourceCompile>
-      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <Culture>0x0422</Culture>
-    </ResourceCompile>
-    <Link>
-      <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>
-      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;oalib.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <SuppressStartupBanner>true</SuppressStartupBanner>
-      <AdditionalLibraryDirectories>$(DXSDK_DIR)Lib\x86;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(XRAY_16X_LIBS)libogg-1.1.4\win32\lib\$(Platform)\Release;$(XRAY_16X_LIBS)libtheora-1.1.1\win32\lib\$(Platform)\Release;$(xrSdkDir)libraries;$(xrLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
-      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Windows</SubSystem>
-      <LargeAddressAware>true</LargeAddressAware>
-      <RandomizedBaseAddress>false</RandomizedBaseAddress>
-      <FixedBaseAddress>false</FixedBaseAddress>
-      <ImportLibrary>$(xrLibDir)$(TargetName).lib</ImportLibrary>
-      <TargetMachine>NotSet</TargetMachine>
-    </Link>
-    <Manifest>
-      <AdditionalManifestFiles>as-invoker-manifest-part.xml;%(AdditionalManifestFiles)</AdditionalManifestFiles>
-    </Manifest>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Mixed|x64'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
-      <OmitFramePointers>false</OmitFramePointers>
-      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
-      <AdditionalIncludeDirectories>.;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>INGAME_EDITOR;DEBUG;MIXED;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <StringPooling>true</StringPooling>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <BufferSecurityCheck>true</BufferSecurityCheck>
-      <FunctionLevelLinking>false</FunctionLevelLinking>
-      <FloatingPointModel>Fast</FloatingPointModel>
-      <ForceConformanceInForLoopScope>false</ForceConformanceInForLoopScope>
-      <RuntimeTypeInfo>true</RuntimeTypeInfo>
-      <PrecompiledHeader>Use</PrecompiledHeader>
-      <PrecompiledHeaderFile>stdafx.h</PrecompiledHeaderFile>
-      <WarningLevel>Level4</WarningLevel>
-      <SuppressStartupBanner>true</SuppressStartupBanner>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <ResourceCompile>
-      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <Culture>0x0422</Culture>
-    </ResourceCompile>
-    <Link>
-      <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>
-      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;oalib.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <SuppressStartupBanner>true</SuppressStartupBanner>
-      <AdditionalLibraryDirectories>$(DXSDK_DIR)Lib\x86;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(XRAY_16X_LIBS)libogg-1.1.4\win32\lib\$(Platform)\Release;$(XRAY_16X_LIBS)libtheora-1.1.1\win32\lib\$(Platform)\Release;$(xrSdkDir)libraries;$(xrLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
-      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Windows</SubSystem>
-      <LargeAddressAware>true</LargeAddressAware>
-      <RandomizedBaseAddress>false</RandomizedBaseAddress>
-      <FixedBaseAddress>false</FixedBaseAddress>
-      <ImportLibrary>$(xrLibDir)$(TargetName).lib</ImportLibrary>
-    </Link>
-    <Manifest>
-      <AdditionalManifestFiles>as-invoker-manifest-part.xml;%(AdditionalManifestFiles)</AdditionalManifestFiles>
-    </Manifest>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR2|x64'">
     <ClCompile>
@@ -537,7 +223,8 @@
       <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
-      <WholeProgramOptimization>true</WholeProgramOptimization>
+      <WholeProgramOptimization>false</WholeProgramOptimization>
       <AdditionalIncludeDirectories>.;$(SolutionDir)3rd party\luajit-2\src\;$(SolutionDir)3rd party\luabind\;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;$(xrSdkDir)include\OpenAutomate;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>NDEBUG;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <PreprocessorDefinitions>STATIC_RENDERER_R2;NDEBUG;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <StringPooling>true</StringPooling>
-      <ExceptionHandling />
+      <ExceptionHandling>
+      </ExceptionHandling>
       <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
@@ -545,3 +232,3 @@
       <FunctionLevelLinking>true</FunctionLevelLinking>
-      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
       <FloatingPointModel>Precise</FloatingPointModel>
@@ -551,6 +238,7 @@
       <PrecompiledHeaderFile>stdafx.h</PrecompiledHeaderFile>
-      <BrowseInformation />
+      <BrowseInformation>
+      </BrowseInformation>
       <WarningLevel>Level4</WarningLevel>
       <SuppressStartupBanner>true</SuppressStartupBanner>
-      <DebugInformationFormat>None</DebugInformationFormat>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
       <CompileAs>Default</CompileAs>
@@ -563,5 +251,5 @@
     <Link>
-      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;oalib.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <SuppressStartupBanner>true</SuppressStartupBanner>
-      <AdditionalLibraryDirectories>$(DXSDK_DIR)Lib\x86;$(SolutionDir)3rd party\luajit-2\src\;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(XRAY_16X_LIBS)libogg-1.1.4\win32\lib\$(Platform)\Release;$(XRAY_16X_LIBS)libtheora-1.1.1\win32\lib\$(Platform)\Release;$(xrSdkDir)libraries;$(xrLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <AdditionalLibraryDirectories>$(OutDir)$(Platform)\Release\;$(DXSDK_DIR)Lib\x64;$(SolutionDir)3rd party\luajit-2\src\;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(SolutionDir)..\lib\$(Platform)\Release;$(SolutionDir)$(Platform)\Release;$(xrSdkDir)libraries\x64;$(xrLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
@@ -571,3 +259,3 @@
       <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
+      <LinkTimeCodeGeneration>Default</LinkTimeCodeGeneration>
       <RandomizedBaseAddress>false</RandomizedBaseAddress>
@@ -576,2 +264,3 @@
       <AdditionalOptions>/ignore:4099</AdditionalOptions>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
     </Link>
@@ -581,3 +270,3 @@
   </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR2-AVX|x64'">
     <ClCompile>
@@ -589,5 +278,5 @@
       <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
-      <WholeProgramOptimization>true</WholeProgramOptimization>
+      <WholeProgramOptimization>false</WholeProgramOptimization>
       <AdditionalIncludeDirectories>.;$(SolutionDir)3rd party\luajit-2\src\;$(SolutionDir)3rd party\luabind\;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;$(xrSdkDir)include\OpenAutomate;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>NDEBUG;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <PreprocessorDefinitions>STATIC_RENDERER_R2;NDEBUG;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <StringPooling>true</StringPooling>
@@ -608,3 +297,3 @@
       <SuppressStartupBanner>true</SuppressStartupBanner>
-      <DebugInformationFormat>None</DebugInformationFormat>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
       <CompileAs>Default</CompileAs>
@@ -617,5 +306,5 @@
     <Link>
-      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;oalib.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <SuppressStartupBanner>true</SuppressStartupBanner>
-      <AdditionalLibraryDirectories>$(DXSDK_DIR)Lib\x64;$(SolutionDir)3rd party\luajit-2\src\;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(SolutionDir)..\lib\$(Platform)\Release;$(SolutionDir)$(Platform)\Release;$(xrSdkDir)libraries\x64;$(xrLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <AdditionalLibraryDirectories>$(OutDir)$(Platform)\Release-AVX\;$(DXSDK_DIR)Lib\x64;$(SolutionDir)3rd party\luajit-2\src\;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(SolutionDir)..\lib\$(Platform)\Release;$(SolutionDir)$(Platform)\Release;$(xrSdkDir)libraries\x64;$(xrLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
@@ -625,3 +314,3 @@
       <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
+      <LinkTimeCodeGeneration>Default</LinkTimeCodeGeneration>
       <RandomizedBaseAddress>false</RandomizedBaseAddress>
@@ -630,2 +319,3 @@
       <AdditionalOptions>/ignore:4099</AdditionalOptions>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
     </Link>
@@ -635,6 +325,6 @@
   </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug_NEW|Win32'">
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR4|x64'">
     <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
+      <Optimization>MaxSpeed</Optimization>
+      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
       <IntrinsicFunctions>true</IntrinsicFunctions>
@@ -644,11 +334,12 @@
       <WholeProgramOptimization>false</WholeProgramOptimization>
-      <AdditionalIncludeDirectories>.;$(SolutionDir)3rd party\luajit-2\src\;$(SolutionDir)3rd party\luabind\;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>DEBUG;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <AdditionalIncludeDirectories>.;$(SolutionDir)3rd party\luajit-2\src\;$(SolutionDir)3rd party\luabind\;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;$(xrSdkDir)include\OpenAutomate;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>STATIC_RENDERER_R4;NDEBUG;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <StringPooling>true</StringPooling>
-      <ExceptionHandling>Sync</ExceptionHandling>
+      <ExceptionHandling>
+      </ExceptionHandling>
       <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
       <BufferSecurityCheck>false</BufferSecurityCheck>
-      <FunctionLevelLinking>false</FunctionLevelLinking>
-      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
-      <FloatingPointModel>Fast</FloatingPointModel>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
+      <FloatingPointModel>Precise</FloatingPointModel>
       <ForceConformanceInForLoopScope>false</ForceConformanceInForLoopScope>
@@ -670,7 +361,6 @@
     <Link>
-      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;oalib.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <SuppressStartupBanner>true</SuppressStartupBanner>
-      <AdditionalLibraryDirectories>$(DXSDK_DIR)Lib\x86;$(SolutionDir)3rd party\luajit-2\src\;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(XRAY_16X_LIBS)libogg-1.1.4\win32\lib\$(Platform)\Release;$(XRAY_16X_LIBS)libtheora-1.1.1\win32\lib\$(Platform)\Release;$(xrSdkDir)libraries;$(xrLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <AdditionalLibraryDirectories>$(OutDir)$(Platform)\Release\;$(DXSDK_DIR)Lib\x64;$(SolutionDir)3rd party\luajit-2\src\;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(SolutionDir)..\lib\$(Platform)\Release;$(SolutionDir)$(Platform)\Release;$(xrSdkDir)libraries\x64;$(xrLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
       <SubSystem>NotSet</SubSystem>
@@ -684,2 +374,3 @@
       <AdditionalOptions>/ignore:4099</AdditionalOptions>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
     </Link>
@@ -689,3 +380,3 @@
   </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug_NEW|x64'">
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='VerifiedDX11|x64'">
     <ClCompile>
@@ -693,16 +384,16 @@
       <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
-      <OmitFramePointers>true</OmitFramePointers>
-      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
+      <IntrinsicFunctions>false</IntrinsicFunctions>
+      <FavorSizeOrSpeed>Neither</FavorSizeOrSpeed>
+      <OmitFramePointers>false</OmitFramePointers>
+      <EnableFiberSafeOptimizations>false</EnableFiberSafeOptimizations>
       <WholeProgramOptimization>false</WholeProgramOptimization>
-      <AdditionalIncludeDirectories>.;$(SolutionDir)3rd party\luajit-2\src\;$(SolutionDir)3rd party\luabind\;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>DEBUG;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <StringPooling>true</StringPooling>
-      <ExceptionHandling>Sync</ExceptionHandling>
+      <AdditionalIncludeDirectories>.;$(SolutionDir)3rd party\luajit-2\src\;$(SolutionDir)3rd party\luabind\;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;$(xrSdkDir)include\OpenAutomate;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>USE_VERIFY_IN_RELEASE;STATIC_RENDERER_R4;NDEBUG;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <ExceptionHandling>
+      </ExceptionHandling>
       <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <BufferSecurityCheck>false</BufferSecurityCheck>
-      <FunctionLevelLinking>false</FunctionLevelLinking>
-      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
-      <FloatingPointModel>Fast</FloatingPointModel>
+      <BufferSecurityCheck>true</BufferSecurityCheck>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
+      <FloatingPointModel>Precise</FloatingPointModel>
       <ForceConformanceInForLoopScope>false</ForceConformanceInForLoopScope>
@@ -718,2 +409,4 @@
       <UndefinePreprocessorDefinitions>USE_LUAJIT_ONE</UndefinePreprocessorDefinitions>
+      <MinimalRebuild>true</MinimalRebuild>
+      <RemoveUnreferencedCodeData>false</RemoveUnreferencedCodeData>
     </ClCompile>
@@ -724,11 +417,10 @@
     <Link>
-      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;oalib.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <SuppressStartupBanner>true</SuppressStartupBanner>
-      <AdditionalLibraryDirectories>$(DXSDK_DIR)Lib\x86;$(SolutionDir)3rd party\luajit-2\src\;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(XRAY_16X_LIBS)libogg-1.1.4\win32\lib\$(Platform)\Release;$(XRAY_16X_LIBS)libtheora-1.1.1\win32\lib\$(Platform)\Release;$(xrSdkDir)libraries;$(xrLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <AdditionalLibraryDirectories>$(OutDir)$(Platform)\Release\;$(DXSDK_DIR)Lib\x64;$(SolutionDir)3rd party\luajit-2\src\;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(SolutionDir)..\lib\$(Platform)\Release;$(SolutionDir)$(Platform)\Release;$(xrSdkDir)libraries\x64;$(xrLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
       <SubSystem>NotSet</SubSystem>
       <LargeAddressAware>true</LargeAddressAware>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>false</OptimizeReferences>
+      <EnableCOMDATFolding>false</EnableCOMDATFolding>
       <LinkTimeCodeGeneration>Default</LinkTimeCodeGeneration>
@@ -738,2 +430,3 @@
       <AdditionalOptions>/ignore:4099</AdditionalOptions>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
     </Link>
@@ -743,3 +436,3 @@
   </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release_LuaJit_one|Win32'">
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR4-AVX|x64'">
     <ClCompile>
@@ -751,5 +444,5 @@
       <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
-      <WholeProgramOptimization>true</WholeProgramOptimization>
-      <AdditionalIncludeDirectories>.;$(SolutionDir)3rd party\LuaJIT-1.1.8\etc\;$(SolutionDir)3rd party\luabind\;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;$(xrSdkDir)include\OpenAutomate;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>USE_LUAJIT_ONE;NDEBUG;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <WholeProgramOptimization>false</WholeProgramOptimization>
+      <AdditionalIncludeDirectories>.;$(SolutionDir)3rd party\luajit-2\src\;$(SolutionDir)3rd party\luabind\;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;$(xrSdkDir)include\OpenAutomate;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>STATIC_RENDERER_R4;NDEBUG;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <StringPooling>true</StringPooling>
@@ -759,5 +452,5 @@
       <BufferSecurityCheck>false</BufferSecurityCheck>
-      <FunctionLevelLinking>false</FunctionLevelLinking>
-      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
-      <FloatingPointModel>Fast</FloatingPointModel>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <EnableEnhancedInstructionSet>AdvancedVectorExtensions</EnableEnhancedInstructionSet>
+      <FloatingPointModel>Precise</FloatingPointModel>
       <ForceConformanceInForLoopScope>false</ForceConformanceInForLoopScope>
@@ -772,2 +465,3 @@
       <CompileAs>Default</CompileAs>
+      <UndefinePreprocessorDefinitions>USE_LUAJIT_ONE</UndefinePreprocessorDefinitions>
     </ClCompile>
@@ -778,7 +472,6 @@
     <Link>
-      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;oalib.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <SuppressStartupBanner>true</SuppressStartupBanner>
-      <AdditionalLibraryDirectories>$(DXSDK_DIR)Lib\x86;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(XRAY_16X_LIBS)libogg-1.1.4\win32\lib\$(Platform)\Release;$(XRAY_16X_LIBS)libtheora-1.1.1\win32\lib\$(Platform)\Release;$(xrSdkDir)libraries;$(xrLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <AdditionalLibraryDirectories>$(OutDir)$(Platform)\Release-AVX\;$(DXSDK_DIR)Lib\x64;$(SolutionDir)3rd party\luajit-2\src\;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(SolutionDir)..\lib\$(Platform)\Release;$(SolutionDir)$(Platform)\Release;$(xrSdkDir)libraries\x64;$(xrLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
       <SubSystem>NotSet</SubSystem>
@@ -787,3 +480,3 @@
       <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
+      <LinkTimeCodeGeneration>Default</LinkTimeCodeGeneration>
       <RandomizedBaseAddress>false</RandomizedBaseAddress>
@@ -792,2 +485,3 @@
       <AdditionalOptions>/ignore:4099</AdditionalOptions>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
     </Link>
@@ -797,3 +491,3 @@
   </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release_LuaJit_one|x64'">
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR3|x64'">
     <ClCompile>
@@ -805,5 +499,5 @@
       <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
-      <WholeProgramOptimization>true</WholeProgramOptimization>
-      <AdditionalIncludeDirectories>.;$(SolutionDir)3rd party\LuaJIT-1.1.8\etc\;$(SolutionDir)3rd party\luabind\;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;$(xrSdkDir)include\OpenAutomate;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>USE_LUAJIT_ONE;NDEBUG;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <WholeProgramOptimization>false</WholeProgramOptimization>
+      <AdditionalIncludeDirectories>.;$(SolutionDir)3rd party\luajit-2\src\;$(SolutionDir)3rd party\luabind\;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;$(xrSdkDir)include\OpenAutomate;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>STATIC_RENDERER_R3;NDEBUG;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <StringPooling>true</StringPooling>
@@ -813,5 +507,5 @@
       <BufferSecurityCheck>false</BufferSecurityCheck>
-      <FunctionLevelLinking>false</FunctionLevelLinking>
-      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
-      <FloatingPointModel>Fast</FloatingPointModel>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
+      <FloatingPointModel>Precise</FloatingPointModel>
       <ForceConformanceInForLoopScope>false</ForceConformanceInForLoopScope>
@@ -826,2 +520,3 @@
       <CompileAs>Default</CompileAs>
+      <UndefinePreprocessorDefinitions>USE_LUAJIT_ONE</UndefinePreprocessorDefinitions>
     </ClCompile>
@@ -832,7 +527,6 @@
     <Link>
-      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;oalib.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <SuppressStartupBanner>true</SuppressStartupBanner>
-      <AdditionalLibraryDirectories>$(DXSDK_DIR)Lib\x86;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(XRAY_16X_LIBS)libogg-1.1.4\win32\lib\$(Platform)\Release;$(XRAY_16X_LIBS)libtheora-1.1.1\win32\lib\$(Platform)\Release;$(xrSdkDir)libraries;$(xrLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <AdditionalLibraryDirectories>$(OutDir)$(Platform)\Release\;$(DXSDK_DIR)Lib\x64;$(SolutionDir)3rd party\luajit-2\src\;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(SolutionDir)..\lib\$(Platform)\Release;$(SolutionDir)$(Platform)\Release;$(xrSdkDir)libraries\x64;$(xrLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
       <SubSystem>NotSet</SubSystem>
@@ -841,3 +535,3 @@
       <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
+      <LinkTimeCodeGeneration>Default</LinkTimeCodeGeneration>
       <RandomizedBaseAddress>false</RandomizedBaseAddress>
@@ -846,107 +540,3 @@
       <AdditionalOptions>/ignore:4099</AdditionalOptions>
-    </Link>
-    <Manifest>
-      <AdditionalManifestFiles>as-invoker-manifest-part.xml;%(AdditionalManifestFiles)</AdditionalManifestFiles>
-    </Manifest>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Dedicated|Win32'">
-    <ClCompile>
-      <AdditionalOptions>/Zm200  %(AdditionalOptions)</AdditionalOptions>
-      <Optimization>Disabled</Optimization>
-      <IntrinsicFunctions>false</IntrinsicFunctions>
-      <FavorSizeOrSpeed>Neither</FavorSizeOrSpeed>
-      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
-      <AdditionalIncludeDirectories>.;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>DEDICATED_SERVER;DEBUG;WIN32;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <StringPooling>false</StringPooling>
-      <MinimalRebuild>true</MinimalRebuild>
-      <ExceptionHandling>Sync</ExceptionHandling>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <SmallerTypeCheck>true</SmallerTypeCheck>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <BufferSecurityCheck>true</BufferSecurityCheck>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <FloatingPointModel>Fast</FloatingPointModel>
-      <ForceConformanceInForLoopScope>false</ForceConformanceInForLoopScope>
-      <RuntimeTypeInfo>true</RuntimeTypeInfo>
-      <PrecompiledHeader>Use</PrecompiledHeader>
-      <PrecompiledHeaderFile>stdafx.h</PrecompiledHeaderFile>
-      <BrowseInformation />
-      <WarningLevel>Level4</WarningLevel>
-      <SuppressStartupBanner>true</SuppressStartupBanner>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <CompileAs>Default</CompileAs>
-    </ClCompile>
-    <ResourceCompile>
-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <Culture>0x0422</Culture>
-    </ResourceCompile>
-    <Link>
-      <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>
-      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;oalib.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <ShowProgress>NotSet</ShowProgress>
-      <OutputFile>$(OutDir)$(TargetName).exe</OutputFile>
-      <SuppressStartupBanner>true</SuppressStartupBanner>
-      <AdditionalLibraryDirectories>$(DXSDK_DIR)Lib\x86;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(XRAY_16X_LIBS)libogg-1.1.4\win32\lib\$(Platform)\Debug;$(XRAY_16X_LIBS)libtheora-1.1.1\win32\lib\$(Platform)\Debug;$(xrSdkDir)libraries;$(xrLibRootDir)Debug;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
-      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <MapExports>false</MapExports>
-      <SubSystem>Windows</SubSystem>
-      <LargeAddressAware>true</LargeAddressAware>
-      <RandomizedBaseAddress>false</RandomizedBaseAddress>
-      <FixedBaseAddress>false</FixedBaseAddress>
-      <ImportLibrary />
-    </Link>
-    <Manifest>
-      <AdditionalManifestFiles>as-invoker-manifest-part.xml;%(AdditionalManifestFiles)</AdditionalManifestFiles>
-    </Manifest>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Dedicated|x64'">
-    <ClCompile>
-      <AdditionalOptions>/Zm200  %(AdditionalOptions)</AdditionalOptions>
-      <Optimization>Disabled</Optimization>
-      <IntrinsicFunctions>false</IntrinsicFunctions>
-      <FavorSizeOrSpeed>Neither</FavorSizeOrSpeed>
-      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
-      <AdditionalIncludeDirectories>.;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>DEDICATED_SERVER;DEBUG;WIN32;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <StringPooling>false</StringPooling>
-      <ExceptionHandling>Sync</ExceptionHandling>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <SmallerTypeCheck>true</SmallerTypeCheck>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <BufferSecurityCheck>true</BufferSecurityCheck>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <FloatingPointModel>Fast</FloatingPointModel>
-      <ForceConformanceInForLoopScope>false</ForceConformanceInForLoopScope>
-      <RuntimeTypeInfo>true</RuntimeTypeInfo>
-      <PrecompiledHeader>Use</PrecompiledHeader>
-      <PrecompiledHeaderFile>stdafx.h</PrecompiledHeaderFile>
-      <BrowseInformation>
-      </BrowseInformation>
-      <WarningLevel>Level4</WarningLevel>
-      <SuppressStartupBanner>true</SuppressStartupBanner>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <CompileAs>Default</CompileAs>
-    </ClCompile>
-    <ResourceCompile>
-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <Culture>0x0422</Culture>
-    </ResourceCompile>
-    <Link>
-      <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>
-      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;oalib.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <ShowProgress>NotSet</ShowProgress>
-      <OutputFile>$(OutDir)$(TargetName).exe</OutputFile>
-      <SuppressStartupBanner>true</SuppressStartupBanner>
-      <AdditionalLibraryDirectories>$(DXSDK_DIR)Lib\x86;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(XRAY_16X_LIBS)libogg-1.1.4\win32\lib\$(Platform)\Debug;$(XRAY_16X_LIBS)libtheora-1.1.1\win32\lib\$(Platform)\Debug;$(xrSdkDir)libraries;$(xrLibRootDir)Debug;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
-      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
       <GenerateDebugInformation>true</GenerateDebugInformation>
-      <MapExports>false</MapExports>
-      <SubSystem>Windows</SubSystem>
-      <LargeAddressAware>true</LargeAddressAware>
-      <RandomizedBaseAddress>false</RandomizedBaseAddress>
-      <FixedBaseAddress>false</FixedBaseAddress>
-      <ImportLibrary>
-      </ImportLibrary>
     </Link>
@@ -956,51 +546,5 @@
   </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Mixed_Dedicated|Win32'">
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR3-AVX|x64'">
     <ClCompile>
-      <Optimization>Full</Optimization>
-      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
-      <OmitFramePointers>false</OmitFramePointers>
-      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
-      <AdditionalIncludeDirectories>.;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>DEDICATED_SERVER;DEBUG;MIXED;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <StringPooling>true</StringPooling>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <BufferSecurityCheck>false</BufferSecurityCheck>
-      <FunctionLevelLinking>false</FunctionLevelLinking>
-      <FloatingPointModel>Fast</FloatingPointModel>
-      <ForceConformanceInForLoopScope>false</ForceConformanceInForLoopScope>
-      <RuntimeTypeInfo>true</RuntimeTypeInfo>
-      <PrecompiledHeader>Use</PrecompiledHeader>
-      <PrecompiledHeaderFile>stdafx.h</PrecompiledHeaderFile>
-      <BrowseInformation />
-      <WarningLevel>Level4</WarningLevel>
-      <SuppressStartupBanner>true</SuppressStartupBanner>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <ResourceCompile>
-      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <Culture>0x0422</Culture>
-    </ResourceCompile>
-    <Link>
-      <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>
-      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;oalib.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <OutputFile>$(OutDir)$(TargetName).exe</OutputFile>
-      <SuppressStartupBanner>true</SuppressStartupBanner>
-      <AdditionalLibraryDirectories>$(DXSDK_DIR)Lib\x86;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(XRAY_16X_LIBS)libogg-1.1.4\win32\lib\$(Platform)\Release;$(XRAY_16X_LIBS)libtheora-1.1.1\win32\lib\$(Platform)\Release;$(xrSdkDir)libraries;$(xrLibRootDir)Mixed;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
-      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Windows</SubSystem>
-      <LargeAddressAware>true</LargeAddressAware>
-      <RandomizedBaseAddress>false</RandomizedBaseAddress>
-      <FixedBaseAddress>false</FixedBaseAddress>
-      <ImportLibrary />
-    </Link>
-    <Manifest>
-      <AdditionalManifestFiles>as-invoker-manifest-part.xml;%(AdditionalManifestFiles)</AdditionalManifestFiles>
-    </Manifest>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Mixed_Dedicated|x64'">
-    <ClCompile>
-      <Optimization>Full</Optimization>
+      <Optimization>MaxSpeed</Optimization>
       <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
@@ -1008,11 +552,15 @@
       <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
-      <OmitFramePointers>false</OmitFramePointers>
+      <OmitFramePointers>true</OmitFramePointers>
       <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
-      <AdditionalIncludeDirectories>.;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>DEDICATED_SERVER;DEBUG;MIXED;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <WholeProgramOptimization>false</WholeProgramOptimization>
+      <AdditionalIncludeDirectories>.;$(SolutionDir)3rd party\luajit-2\src\;$(SolutionDir)3rd party\luabind\;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;$(xrSdkDir)include\OpenAutomate;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>STATIC_RENDERER_R3;NDEBUG;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <StringPooling>true</StringPooling>
+      <ExceptionHandling>
+      </ExceptionHandling>
       <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
       <BufferSecurityCheck>false</BufferSecurityCheck>
-      <FunctionLevelLinking>false</FunctionLevelLinking>
-      <FloatingPointModel>Fast</FloatingPointModel>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <EnableEnhancedInstructionSet>AdvancedVectorExtensions</EnableEnhancedInstructionSet>
+      <FloatingPointModel>Precise</FloatingPointModel>
       <ForceConformanceInForLoopScope>false</ForceConformanceInForLoopScope>
@@ -1026,2 +574,4 @@
       <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <CompileAs>Default</CompileAs>
+      <UndefinePreprocessorDefinitions>USE_LUAJIT_ONE</UndefinePreprocessorDefinitions>
     </ClCompile>
@@ -1032,15 +582,16 @@
     <Link>
-      <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>
-      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;oalib.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <OutputFile>$(OutDir)$(TargetName).exe</OutputFile>
+      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <SuppressStartupBanner>true</SuppressStartupBanner>
-      <AdditionalLibraryDirectories>$(DXSDK_DIR)Lib\x86;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(XRAY_16X_LIBS)libogg-1.1.4\win32\lib\$(Platform)\Release;$(XRAY_16X_LIBS)libtheora-1.1.1\win32\lib\$(Platform)\Release;$(xrSdkDir)libraries;$(xrLibRootDir)Mixed;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <AdditionalLibraryDirectories>$(OutDir)$(Platform)\Release-AVX\;$(DXSDK_DIR)Lib\x64;$(SolutionDir)3rd party\luajit-2\src\;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(SolutionDir)..\lib\$(Platform)\Release;$(SolutionDir)$(Platform)\Release;$(xrSdkDir)libraries\x64;$(xrLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Windows</SubSystem>
+      <SubSystem>NotSet</SubSystem>
       <LargeAddressAware>true</LargeAddressAware>
+      <OptimizeReferences>true</OptimizeReferences>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <LinkTimeCodeGeneration>Default</LinkTimeCodeGeneration>
       <RandomizedBaseAddress>false</RandomizedBaseAddress>
       <FixedBaseAddress>false</FixedBaseAddress>
-      <ImportLibrary>
-      </ImportLibrary>
+      <ImportLibrary>$(xrLibDir)$(TargetName).lib</ImportLibrary>
+      <AdditionalOptions>/ignore:4099</AdditionalOptions>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
     </Link>
@@ -1050,5 +601,5 @@
   </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release_Dedicated|Win32'">
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR1|x64'">
     <ClCompile>
-      <Optimization>Full</Optimization>
+      <Optimization>MaxSpeed</Optimization>
       <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
@@ -1058,9 +609,13 @@
       <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
-      <AdditionalIncludeDirectories>.;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>DEDICATED_SERVER;NDEBUG;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <WholeProgramOptimization>false</WholeProgramOptimization>
+      <AdditionalIncludeDirectories>.;$(SolutionDir)3rd party\luajit-2\src\;$(SolutionDir)3rd party\luabind\;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;$(xrSdkDir)include\OpenAutomate;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>STATIC_RENDERER_R1;NDEBUG;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <StringPooling>true</StringPooling>
-      <ExceptionHandling />
+      <ExceptionHandling>
+      </ExceptionHandling>
       <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
       <BufferSecurityCheck>false</BufferSecurityCheck>
-      <FloatingPointModel>Fast</FloatingPointModel>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
+      <FloatingPointModel>Precise</FloatingPointModel>
       <ForceConformanceInForLoopScope>false</ForceConformanceInForLoopScope>
@@ -1069,3 +624,4 @@
       <PrecompiledHeaderFile>stdafx.h</PrecompiledHeaderFile>
-      <BrowseInformation />
+      <BrowseInformation>
+      </BrowseInformation>
       <WarningLevel>Level4</WarningLevel>
@@ -1074,3 +630,3 @@
       <CompileAs>Default</CompileAs>
-      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
+      <UndefinePreprocessorDefinitions>USE_LUAJIT_ONE</UndefinePreprocessorDefinitions>
     </ClCompile>
@@ -1081,9 +637,6 @@
     <Link>
-      <AdditionalOptions>/MACHINE:I386  %(AdditionalOptions)</AdditionalOptions>
-      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;oalib.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <OutputFile>$(OutDir)$(TargetName).exe</OutputFile>
+      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <SuppressStartupBanner>true</SuppressStartupBanner>
-      <AdditionalLibraryDirectories>$(DXSDK_DIR)Lib\x86;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(XRAY_16X_LIBS)libogg-1.1.4\win32\lib\$(Platform)\Release;$(XRAY_16X_LIBS)libtheora-1.1.1\win32\lib\$(Platform)\Release;$(xrSdkDir)libraries;$(xrLibRootDir)Release;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <AdditionalLibraryDirectories>$(OutDir)$(Platform)\Release\;$(DXSDK_DIR)Lib\x64;$(SolutionDir)3rd party\luajit-2\src\;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(SolutionDir)..\lib\$(Platform)\Release;$(SolutionDir)$(Platform)\Release;$(xrSdkDir)libraries\x64;$(xrLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
       <SubSystem>NotSet</SubSystem>
@@ -1092,5 +645,8 @@
       <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <LinkTimeCodeGeneration>Default</LinkTimeCodeGeneration>
       <RandomizedBaseAddress>false</RandomizedBaseAddress>
       <FixedBaseAddress>false</FixedBaseAddress>
-      <ImportLibrary />
+      <ImportLibrary>$(xrLibDir)$(TargetName).lib</ImportLibrary>
+      <AdditionalOptions>/ignore:4099</AdditionalOptions>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
     </Link>
@@ -1100,5 +656,5 @@
   </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release_Dedicated|x64'">
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseR1-AVX|x64'">
     <ClCompile>
-      <Optimization>Full</Optimization>
+      <Optimization>MaxSpeed</Optimization>
       <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
@@ -1108,4 +664,5 @@
       <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
-      <AdditionalIncludeDirectories>.;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>DEDICATED_SERVER;NDEBUG;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <WholeProgramOptimization>false</WholeProgramOptimization>
+      <AdditionalIncludeDirectories>.;$(SolutionDir)3rd party\luajit-2\src\;$(SolutionDir)3rd party\luabind\;$(DXSDK_DIR)Include;$(XRAY_16X_LIBS)OpenAutomate\inc;$(XRAY_16X_LIBS)libogg-1.1.4\include;$(XRAY_16X_LIBS)libtheora-1.1.1\include;$(xrSdkDir)include;$(xrSdkDir)include\OpenAutomate;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>STATIC_RENDERER_R1;NDEBUG;WIN32;_WINDOWS;ENGINE_BUILD;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <StringPooling>true</StringPooling>
@@ -1115,3 +672,5 @@
       <BufferSecurityCheck>false</BufferSecurityCheck>
-      <FloatingPointModel>Fast</FloatingPointModel>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <EnableEnhancedInstructionSet>AdvancedVectorExtensions</EnableEnhancedInstructionSet>
+      <FloatingPointModel>Precise</FloatingPointModel>
       <ForceConformanceInForLoopScope>false</ForceConformanceInForLoopScope>
@@ -1126,3 +685,3 @@
       <CompileAs>Default</CompileAs>
-      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
+      <UndefinePreprocessorDefinitions>USE_LUAJIT_ONE</UndefinePreprocessorDefinitions>
     </ClCompile>
@@ -1133,9 +692,6 @@
     <Link>
-      <AdditionalOptions>/MACHINE:I386  %(AdditionalOptions)</AdditionalOptions>
-      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;oalib.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <OutputFile>$(OutDir)$(TargetName).exe</OutputFile>
+      <AdditionalDependencies>vfw32.lib;libogg_static.lib;libtheora_static.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <SuppressStartupBanner>true</SuppressStartupBanner>
-      <AdditionalLibraryDirectories>$(DXSDK_DIR)Lib\x86;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(XRAY_16X_LIBS)libogg-1.1.4\win32\lib\$(Platform)\Release;$(XRAY_16X_LIBS)libtheora-1.1.1\win32\lib\$(Platform)\Release;$(xrSdkDir)libraries;$(xrLibRootDir)Release;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <AdditionalLibraryDirectories>$(OutDir)$(Platform)\Release-AVX\;$(DXSDK_DIR)Lib\x64;$(SolutionDir)3rd party\luajit-2\src\;$(XRAY_16X_LIBS)OpenAutomate\libraries;$(SolutionDir)..\lib\$(Platform)\Release;$(SolutionDir)$(Platform)\Release;$(xrSdkDir)libraries\x64;$(xrLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
       <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
       <SubSystem>NotSet</SubSystem>
@@ -1144,6 +700,8 @@
       <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <LinkTimeCodeGeneration>Default</LinkTimeCodeGeneration>
       <RandomizedBaseAddress>false</RandomizedBaseAddress>
       <FixedBaseAddress>false</FixedBaseAddress>
-      <ImportLibrary>
-      </ImportLibrary>
+      <ImportLibrary>$(xrLibDir)$(TargetName).lib</ImportLibrary>
+      <AdditionalOptions>/ignore:4099</AdditionalOptions>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
     </Link>
@@ -1154,2 +712,19 @@
   <ItemGroup>
+    <ClInclude Include="..\3rd party\discord\achievement_manager.h" />
+    <ClInclude Include="..\3rd party\discord\activity_manager.h" />
+    <ClInclude Include="..\3rd party\discord\application_manager.h" />
+    <ClInclude Include="..\3rd party\discord\core.h" />
+    <ClInclude Include="..\3rd party\discord\discord.h" />
+    <ClInclude Include="..\3rd party\discord\event.h" />
+    <ClInclude Include="..\3rd party\discord\ffi.h" />
+    <ClInclude Include="..\3rd party\discord\image_manager.h" />
+    <ClInclude Include="..\3rd party\discord\lobby_manager.h" />
+    <ClInclude Include="..\3rd party\discord\network_manager.h" />
+    <ClInclude Include="..\3rd party\discord\overlay_manager.h" />
+    <ClInclude Include="..\3rd party\discord\relationship_manager.h" />
+    <ClInclude Include="..\3rd party\discord\storage_manager.h" />
+    <ClInclude Include="..\3rd party\discord\store_manager.h" />
+    <ClInclude Include="..\3rd party\discord\types.h" />
+    <ClInclude Include="..\3rd party\discord\user_manager.h" />
+    <ClInclude Include="..\3rd party\discord\voice_manager.h" />
     <ClInclude Include="ai_script_lua_extension.h" />
@@ -1167,29 +742,2 @@
     <ClInclude Include="device.h" />
-    <ClInclude Include="doug_lea_memory_allocator.h" />
-    <ClInclude Include="editor_environment_ambients_ambient.hpp" />
-    <ClInclude Include="editor_environment_ambients_effect_id.hpp" />
-    <ClInclude Include="editor_environment_ambients_manager.hpp" />
-    <ClInclude Include="editor_environment_ambients_sound_id.hpp" />
-    <ClInclude Include="editor_environment_detail.hpp" />
-    <ClInclude Include="editor_environment_effects_effect.hpp" />
-    <ClInclude Include="editor_environment_effects_manager.hpp" />
-    <ClInclude Include="editor_environment_levels_manager.hpp" />
-    <ClInclude Include="editor_environment_manager.hpp" />
-    <ClInclude Include="editor_environment_sound_channels_channel.hpp" />
-    <ClInclude Include="editor_environment_sound_channels_manager.hpp" />
-    <ClInclude Include="editor_environment_sound_channels_source.hpp" />
-    <ClInclude Include="editor_environment_suns_blend.hpp" />
-    <ClInclude Include="editor_environment_suns_flare.hpp" />
-    <ClInclude Include="editor_environment_suns_flares.hpp" />
-    <ClInclude Include="editor_environment_suns_gradient.hpp" />
-    <ClInclude Include="editor_environment_suns_manager.hpp" />
-    <ClInclude Include="editor_environment_suns_sun.hpp" />
-    <ClInclude Include="editor_environment_thunderbolts_collection.hpp" />
-    <ClInclude Include="editor_environment_thunderbolts_gradient.hpp" />
-    <ClInclude Include="editor_environment_thunderbolts_manager.hpp" />
-    <ClInclude Include="editor_environment_thunderbolts_thunderbolt.hpp" />
-    <ClInclude Include="editor_environment_thunderbolts_thunderbolt_id.hpp" />
-    <ClInclude Include="editor_environment_weathers_manager.hpp" />
-    <ClInclude Include="editor_environment_weathers_time.hpp" />
-    <ClInclude Include="editor_environment_weathers_weather.hpp" />
     <ClInclude Include="edit_actions.h" />
@@ -1199,3 +747,2 @@
     <ClInclude Include="EngineAPI.h" />
-    <ClInclude Include="engine_impl.hpp" />
     <ClInclude Include="EnnumerateVertices.h" />
@@ -1213,3 +760,2 @@
     <ClInclude Include="ICollidable.h" />
-    <ClInclude Include="ide.hpp" />
     <ClInclude Include="IGame_Level.h" />
@@ -1235,5 +781,2 @@
     <ClInclude Include="Properties.h" />
-    <ClInclude Include="property_collection.hpp" />
-    <ClInclude Include="property_collection_forward.hpp" />
-    <ClInclude Include="property_collection_inline.hpp" />
     <ClInclude Include="psystem.h" />
@@ -1245,2 +788,3 @@
     <ClInclude Include="resource.h" />
+    <ClInclude Include="ShadersExternalData.h" />
     <ClInclude Include="Shader_xrLC.h" />
@@ -1278,2 +822,16 @@
   <ItemGroup>
+    <ClCompile Include="..\3rd party\discord\achievement_manager.cpp" />
+    <ClCompile Include="..\3rd party\discord\activity_manager.cpp" />
+    <ClCompile Include="..\3rd party\discord\application_manager.cpp" />
+    <ClCompile Include="..\3rd party\discord\core.cpp" />
+    <ClCompile Include="..\3rd party\discord\image_manager.cpp" />
+    <ClCompile Include="..\3rd party\discord\lobby_manager.cpp" />
+    <ClCompile Include="..\3rd party\discord\network_manager.cpp" />
+    <ClCompile Include="..\3rd party\discord\overlay_manager.cpp" />
+    <ClCompile Include="..\3rd party\discord\relationship_manager.cpp" />
+    <ClCompile Include="..\3rd party\discord\storage_manager.cpp" />
+    <ClCompile Include="..\3rd party\discord\store_manager.cpp" />
+    <ClCompile Include="..\3rd party\discord\types.cpp" />
+    <ClCompile Include="..\3rd party\discord\user_manager.cpp" />
+    <ClCompile Include="..\3rd party\discord\voice_manager.cpp" />
     <ClCompile Include="ai_script_lua_debug.cpp" />
@@ -1293,96 +851,2 @@
     <ClCompile Include="Device_wndproc.cpp" />
-    <ClCompile Include="doug_lea_memory_allocator.c">
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug_Dedicated|Win32'">
-      </PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug_Dedicated|x64'">
-      </PrecompiledHeader>
-      <DisableSpecificWarnings Condition="'$(Configuration)|$(Platform)'=='Debug_Dedicated|Win32'">4127; 4267;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <DisableSpecificWarnings Condition="'$(Configuration)|$(Platform)'=='Debug_Dedicated|x64'">4127; 4267;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-      </PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-      </PrecompiledHeader>
-      <DisableSpecificWarnings Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">4127; 4267;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <DisableSpecificWarnings Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">4127; 4267;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Mixed_Dedicated|Win32'">
-      </PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Mixed_Dedicated|x64'">
-      </PrecompiledHeader>
-      <DisableSpecificWarnings Condition="'$(Configuration)|$(Platform)'=='Mixed_Dedicated|Win32'">4127; 4267;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <DisableSpecificWarnings Condition="'$(Configuration)|$(Platform)'=='Mixed_Dedicated|x64'">4127; 4267;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Mixed|Win32'">
-      </PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Mixed|x64'">
-      </PrecompiledHeader>
-      <DisableSpecificWarnings Condition="'$(Configuration)|$(Platform)'=='Mixed|Win32'">4127; 4267;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <DisableSpecificWarnings Condition="'$(Configuration)|$(Platform)'=='Mixed|x64'">4127; 4267;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release_Dedicated|Win32'">
-      </PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release_Dedicated|x64'">
-      </PrecompiledHeader>
-      <DisableSpecificWarnings Condition="'$(Configuration)|$(Platform)'=='Release_Dedicated|Win32'">4127; 4267;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <DisableSpecificWarnings Condition="'$(Configuration)|$(Platform)'=='Release_Dedicated|x64'">4127; 4267;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-      </PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-      </PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug_NEW|Win32'">
-      </PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug_NEW|x64'">
-      </PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release_LuaJit_one|Win32'">
-      </PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release_LuaJit_one|x64'">
-      </PrecompiledHeader>
-      <DisableSpecificWarnings Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">4127; 4267;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <DisableSpecificWarnings Condition="'$(Configuration)|$(Platform)'=='Release|x64'">4127; 4267;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <DisableSpecificWarnings Condition="'$(Configuration)|$(Platform)'=='Debug_NEW|Win32'">4127; 4267;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <DisableSpecificWarnings Condition="'$(Configuration)|$(Platform)'=='Debug_NEW|x64'">4127; 4267;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <DisableSpecificWarnings Condition="'$(Configuration)|$(Platform)'=='Release_LuaJit_one|Win32'">4127; 4267;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <DisableSpecificWarnings Condition="'$(Configuration)|$(Platform)'=='Release_LuaJit_one|x64'">4127; 4267;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-    </ClCompile>
-    <ClCompile Include="editor_environment_ambients_ambient.cpp" />
-    <ClCompile Include="editor_environment_ambients_effect_id.cpp" />
-    <ClCompile Include="editor_environment_ambients_manager.cpp" />
-    <ClCompile Include="editor_environment_ambients_sound_id.cpp" />
-    <ClCompile Include="editor_environment_detail.cpp" />
-    <ClCompile Include="editor_environment_effects_effect.cpp" />
-    <ClCompile Include="editor_environment_effects_manager.cpp" />
-    <ClCompile Include="editor_environment_levels_manager.cpp" />
-    <ClCompile Include="editor_environment_manager.cpp" />
-    <ClCompile Include="editor_environment_manager_properties.cpp">
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug_Dedicated|Win32'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug_Dedicated|x64'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Mixed_Dedicated|Win32'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Mixed_Dedicated|x64'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Mixed|Win32'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Mixed|x64'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release_Dedicated|Win32'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release_Dedicated|x64'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug_NEW|Win32'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug_NEW|x64'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release_LuaJit_one|Win32'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release_LuaJit_one|x64'">true</ExcludedFromBuild>
-    </ClCompile>
-    <ClCompile Include="editor_environment_sound_channels_channel.cpp" />
-    <ClCompile Include="editor_environment_sound_channels_manager.cpp" />
-    <ClCompile Include="editor_environment_sound_channels_source.cpp" />
-    <ClCompile Include="editor_environment_suns_blend.cpp" />
-    <ClCompile Include="editor_environment_suns_flare.cpp" />
-    <ClCompile Include="editor_environment_suns_flares.cpp" />
-    <ClCompile Include="editor_environment_suns_gradient.cpp" />
-    <ClCompile Include="editor_environment_suns_manager.cpp" />
-    <ClCompile Include="editor_environment_suns_sun.cpp" />
-    <ClCompile Include="editor_environment_thunderbolts_collection.cpp" />
-    <ClCompile Include="editor_environment_thunderbolts_gradient.cpp" />
-    <ClCompile Include="editor_environment_thunderbolts_manager.cpp" />
-    <ClCompile Include="editor_environment_thunderbolts_thunderbolt.cpp" />
-    <ClCompile Include="editor_environment_thunderbolts_thunderbolt_id.cpp" />
-    <ClCompile Include="editor_environment_weathers_manager.cpp" />
-    <ClCompile Include="editor_environment_weathers_time.cpp" />
-    <ClCompile Include="editor_environment_weathers_weather.cpp" />
     <ClCompile Include="edit_actions.cpp" />
@@ -1392,3 +856,2 @@
     <ClCompile Include="EngineAPI.cpp" />
-    <ClCompile Include="engine_impl.cpp" />
     <ClCompile Include="Envelope.cpp" />
@@ -1410,6 +873,3 @@
     <ClCompile Include="IGame_ObjectPool.cpp" />
-    <ClCompile Include="IGame_Persistent.cpp">
-      <ShowIncludes Condition="'$(Configuration)|$(Platform)'=='Mixed|Win32'">false</ShowIncludes>
-      <ShowIncludes Condition="'$(Configuration)|$(Platform)'=='Mixed|x64'">false</ShowIncludes>
-    </ClCompile>
+    <ClCompile Include="IGame_Persistent.cpp" />
     <ClCompile Include="IInputReceiver.cpp" />
@@ -1437,18 +897,11 @@
     <ClCompile Include="stdafx.cpp">
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug_Dedicated|Win32'">Create</PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug_Dedicated|x64'">Create</PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Create</PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Mixed_Dedicated|Win32'">Create</PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Mixed_Dedicated|x64'">Create</PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Mixed|Win32'">Create</PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Mixed|x64'">Create</PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release_Dedicated|Win32'">Create</PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release_Dedicated|x64'">Create</PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Create</PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug_NEW|Win32'">Create</PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug_NEW|x64'">Create</PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release_LuaJit_one|Win32'">Create</PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release_LuaJit_one|x64'">Create</PrecompiledHeader>
+      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='ReleaseR2|x64'">Create</PrecompiledHeader>
+      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='ReleaseR2-AVX|x64'">Create</PrecompiledHeader>
+      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='ReleaseR4|x64'">Create</PrecompiledHeader>
+      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='VerifiedDX11|x64'">Create</PrecompiledHeader>
+      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='ReleaseR4-AVX|x64'">Create</PrecompiledHeader>
+      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='ReleaseR3|x64'">Create</PrecompiledHeader>
+      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='ReleaseR3-AVX|x64'">Create</PrecompiledHeader>
+      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='ReleaseR1|x64'">Create</PrecompiledHeader>
+      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='ReleaseR1-AVX|x64'">Create</PrecompiledHeader>
     </ClCompile>
@@ -1487,13 +940,2 @@
   <ItemGroup>
-    <None Include="My Amplifier Results\r000hs\r000hs.ampl" />
-    <None Include="My Amplifier Results\r001hs\r001hs.ampl" />
-    <None Include="My Amplifier Results\r002cc\r002cc.ampl" />
-  </ItemGroup>
-  <ItemGroup>
-    <Text Include="ClientServer.txt" />
-    <Text Include="Effects description.txt" />
-    <Text Include="features.txt" />
-    <Text Include="TODO.txt" />
-  </ItemGroup>
-  <ItemGroup>
     <ProjectReference Include="$(SolutionDir)3rd party\luabind\luabind.beta7-devel.rc4.vcxproj">
@@ -1518,2 +960,56 @@
     </ProjectReference>
+    <ProjectReference Include="..\..\sdk\include\jpeg\vs2013\libjpeg.vcxproj">
+      <Project>{938c5808-85a1-4b5a-8cb4-d2d9d7851cb8}</Project>
+    </ProjectReference>
+    <ProjectReference Include="..\..\sdk\include\ogg\vs2013\libogg_static.vcxproj">
+      <Project>{893887a1-3abf-40a0-b931-cd0867010785}</Project>
+    </ProjectReference>
+    <ProjectReference Include="..\..\sdk\include\theora\vs2013\libtheora_static.vcxproj">
+      <Project>{0bdf3377-f84e-4b42-a605-b45aaa244cb6}</Project>
+    </ProjectReference>
+    <ProjectReference Include="..\..\sdk\include\vorbis\vs2013\libvorbisfile_static.vcxproj">
+      <Project>{cebde98b-a6aa-46e6-bc79-faaf823db9ec}</Project>
+    </ProjectReference>
+    <ProjectReference Include="..\..\sdk\include\vorbis\vs2013\libvorbis_static.vcxproj">
+      <Project>{3a214e06-b95e-4d61-a291-1f8df2ec10fd}</Project>
+    </ProjectReference>
+    <ProjectReference Include="..\3rd party\crypto\crypto.vcxproj">
+      <Project>{fa169092-ea3e-40c1-8e5a-a2b575700fe8}</Project>
+    </ProjectReference>
+    <ProjectReference Include="..\3rd party\cximage\cximage.vcxproj">
+      <Project>{880cd250-ba77-4daf-a8d4-552f12dd3ae4}</Project>
+    </ProjectReference>
+    <ProjectReference Include="..\3rd party\DXERR\DXERR.vcxproj">
+      <Project>{772fe450-f4f3-4687-a2a7-5624825089d7}</Project>
+    </ProjectReference>
+    <ProjectReference Include="..\3rd party\lua-extensions\lua_extensions.vcxproj">
+      <Project>{44f716e7-05bd-4390-ab02-5f7daf7fefde}</Project>
+    </ProjectReference>
+    <ProjectReference Include="..\3rd party\NVTT\NVTT.vcxproj">
+      <Project>{0eb257dc-5cfc-44b0-82c9-ce6b158be473}</Project>
+    </ProjectReference>
+    <ProjectReference Include="..\3rd party\ode\contrib\msvc7\ode_default\default.vcxproj">
+      <Project>{1bf75feb-87dd-486c-880b-227987d191c2}</Project>
+    </ProjectReference>
+    <ProjectReference Include="..\xrCDB\xrCDB.vcxproj">
+      <Project>{a19b1df2-82ec-4364-8bdf-85d13a1c89b5}</Project>
+    </ProjectReference>
+    <ProjectReference Include="..\xrCore\xrCore.vcxproj">
+      <Project>{a0f7d1fb-59a7-4717-a7e4-96f37e91998e}</Project>
+    </ProjectReference>
+    <ProjectReference Include="..\xrCPU_Pipe\xrCPU_Pipe.vcxproj">
+      <Project>{ca0649dd-d089-423a-981c-46b57a884eb9}</Project>
+    </ProjectReference>
+    <ProjectReference Include="..\xrGame\xrGame.vcxproj">
+      <Project>{200652a6-043e-4634-8837-87983b3bd5e0}</Project>
+    </ProjectReference>
+    <ProjectReference Include="..\xrParticles\xrParticles.vcxproj">
+      <Project>{94a1c366-3d19-48e6-8170-4adc2e70df97}</Project>
+    </ProjectReference>
+    <ProjectReference Include="..\xrPhysics\xrPhysics.vcxproj">
+      <Project>{98d24a3d-7666-4c11-9d6e-b10393ce8cba}</Project>
+    </ProjectReference>
+    <ProjectReference Include="..\xrXMLParser\xrXMLParser.vcxproj">
+      <Project>{94a1c366-3d19-48e6-8170-4adc2e70df98}</Project>
+    </ProjectReference>
   </ItemGroup>
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/xrEngine.vcxproj.filters xray-monolith/src/xrEngine/xrEngine.vcxproj.filters
--- coc-1.4-xray-64/src/xrEngine/xrEngine.vcxproj.filters	2023-10-20 20:54:50.546338100 +0100
+++ xray-monolith/src/xrEngine/xrEngine.vcxproj.filters	2023-10-20 20:54:32.533039400 +0100
@@ -150,98 +150,2 @@
     </Filter>
-    <Filter Include="RenderRef\doug_lea_memory_allocator">
-      <UniqueIdentifier>{6c14caad-1705-4fbf-87b0-9ad1d734d338}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor">
-      <UniqueIdentifier>{94169f02-9d9d-46d0-9fdf-58f636a57c46}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\engine_impl">
-      <UniqueIdentifier>{6ccceeeb-a3ae-4cca-8e70-edb9d0344f23}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment">
-      <UniqueIdentifier>{483d2c64-d49e-4a12-a605-94b1ed2c5068}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\suns_manager">
-      <UniqueIdentifier>{efb71f14-438f-4dee-b0e7-da5854f66b3c}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\suns_manager\sun">
-      <UniqueIdentifier>{e3444769-2a2a-40e9-b923-2b80bd5e9eb3}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\suns_manager\sun\gradient">
-      <UniqueIdentifier>{57c8c663-7667-41b9-aa51-8cec2167cf35}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\suns_manager\sun\blend">
-      <UniqueIdentifier>{b4580d02-0577-411e-9c99-b81b2bcc65f0}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\suns_manager\sun\flares">
-      <UniqueIdentifier>{250e665d-73e1-433e-a6a4-395621cb59cd}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\suns_manager\sun\flares\flare">
-      <UniqueIdentifier>{9b9f8fb4-8056-4891-831c-59d1472798f7}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\levels_manager">
-      <UniqueIdentifier>{c84ac3bd-3dcd-41c9-86dc-7e852d03f4be}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\effects_manager">
-      <UniqueIdentifier>{10b9498a-56e2-4761-8b2f-6feb4b87d820}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\effects_manager\effect">
-      <UniqueIdentifier>{2caee635-10a9-4f2a-91c9-1a7707209b8b}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\sound_channels_manager">
-      <UniqueIdentifier>{9f518f10-9ceb-435c-ab9a-cdeb886313e4}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\sound_channels_manager\channel">
-      <UniqueIdentifier>{9cdbeb45-1380-4059-afe8-0ce613234730}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\sound_channels_manager\channel\source">
-      <UniqueIdentifier>{f95b1a2c-3fb5-4821-8615-60e975b1e8b3}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\manager">
-      <UniqueIdentifier>{027fe32f-d682-43af-93e1-0610379c2e91}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\ambients">
-      <UniqueIdentifier>{f8f39efd-8e28-4915-86c2-139503e18531}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\ambients\ambient">
-      <UniqueIdentifier>{8364b8ce-ae9b-400f-9a3f-9a406844c35d}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\ambients\ambient\effect_id">
-      <UniqueIdentifier>{8804b181-be75-487b-9e66-3b8a8b304a97}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\ambients\ambient\sound_id">
-      <UniqueIdentifier>{dea05526-b810-4f29-be53-4103d257e651}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\thunderbolts">
-      <UniqueIdentifier>{6596f123-d725-4421-83ca-dff0e03c09ba}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\thunderbolts\thunderbolt">
-      <UniqueIdentifier>{a2ba17c5-b1e8-4185-bc46-3612443b03be}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\thunderbolts\thunderbolt\gradient">
-      <UniqueIdentifier>{2466e9c4-0af4-4e93-befa-36224e782fec}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\thunderbolts\thunderbolt_id">
-      <UniqueIdentifier>{343c228b-bd2c-46d0-9f28-1b42042e0a65}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\thunderbolts\collection">
-      <UniqueIdentifier>{007b2127-de8a-4cf6-ae84-8cbab6b9df1e}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\weathers">
-      <UniqueIdentifier>{4b00cca9-1661-443e-aca8-071b643a787a}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\weathers\weather">
-      <UniqueIdentifier>{1ddc6dcd-ccc1-4512-8d36-0536af80925f}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\weathers\weather\time">
-      <UniqueIdentifier>{78eae6c2-ca85-44b0-b7d9-d91a39a99960}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\environment\detail">
-      <UniqueIdentifier>{0da2f65c-437c-41c5-88b5-99777adbcd1b}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\property_collection">
-      <UniqueIdentifier>{7c628ea6-c0e1-46e2-be57-2ab294738083}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="editor\ide">
-      <UniqueIdentifier>{9a5bc97a-fa45-4997-96d2-2ec72f114570}</UniqueIdentifier>
-    </Filter>
     <Filter Include="OpenAutomate">
@@ -249,4 +153,4 @@
     </Filter>
-    <Filter Include="My Amplifier Results">
-      <UniqueIdentifier>{6aec60dd-7590-4a0f-accf-2550c71f6aa4}</UniqueIdentifier>
+    <Filter Include="Interfaces\Discord">
+      <UniqueIdentifier>{35834be4-924f-4f20-acfc-b2f66194b35d}</UniqueIdentifier>
     </Filter>
@@ -521,100 +425,58 @@
     </ClInclude>
-    <ClInclude Include="doug_lea_memory_allocator.h">
-      <Filter>RenderRef\doug_lea_memory_allocator</Filter>
-    </ClInclude>
-    <ClInclude Include="engine_impl.hpp">
-      <Filter>editor\engine_impl</Filter>
-    </ClInclude>
-    <ClInclude Include="editor_environment_suns_manager.hpp">
-      <Filter>editor\environment\suns_manager</Filter>
-    </ClInclude>
-    <ClInclude Include="editor_environment_suns_sun.hpp">
-      <Filter>editor\environment\suns_manager\sun</Filter>
-    </ClInclude>
-    <ClInclude Include="editor_environment_suns_gradient.hpp">
-      <Filter>editor\environment\suns_manager\sun\gradient</Filter>
-    </ClInclude>
-    <ClInclude Include="editor_environment_suns_blend.hpp">
-      <Filter>editor\environment\suns_manager\sun\blend</Filter>
-    </ClInclude>
-    <ClInclude Include="editor_environment_suns_flares.hpp">
-      <Filter>editor\environment\suns_manager\sun\flares</Filter>
-    </ClInclude>
-    <ClInclude Include="editor_environment_suns_flare.hpp">
-      <Filter>editor\environment\suns_manager\sun\flares\flare</Filter>
-    </ClInclude>
-    <ClInclude Include="editor_environment_levels_manager.hpp">
-      <Filter>editor\environment\levels_manager</Filter>
-    </ClInclude>
-    <ClInclude Include="editor_environment_effects_manager.hpp">
-      <Filter>editor\environment\effects_manager</Filter>
-    </ClInclude>
-    <ClInclude Include="editor_environment_effects_effect.hpp">
-      <Filter>editor\environment\effects_manager\effect</Filter>
-    </ClInclude>
-    <ClInclude Include="editor_environment_sound_channels_manager.hpp">
-      <Filter>editor\environment\sound_channels_manager</Filter>
-    </ClInclude>
-    <ClInclude Include="editor_environment_sound_channels_channel.hpp">
-      <Filter>editor\environment\sound_channels_manager\channel</Filter>
-    </ClInclude>
-    <ClInclude Include="editor_environment_sound_channels_source.hpp">
-      <Filter>editor\environment\sound_channels_manager\channel\source</Filter>
-    </ClInclude>
-    <ClInclude Include="editor_environment_manager.hpp">
-      <Filter>editor\environment\manager</Filter>
+    <ClInclude Include="xrSASH.h">
+      <Filter>OpenAutomate</Filter>
     </ClInclude>
-    <ClInclude Include="editor_environment_ambients_manager.hpp">
-      <Filter>editor\environment\ambients</Filter>
+    <ClInclude Include="ShadersExternalData.h">
+      <Filter>Game API\Objects</Filter>
     </ClInclude>
-    <ClInclude Include="editor_environment_ambients_ambient.hpp">
-      <Filter>editor\environment\ambients\ambient</Filter>
+    <ClInclude Include="..\3rd party\discord\achievement_manager.h">
+      <Filter>Interfaces\Discord</Filter>
     </ClInclude>
-    <ClInclude Include="editor_environment_ambients_effect_id.hpp">
-      <Filter>editor\environment\ambients\ambient\effect_id</Filter>
+    <ClInclude Include="..\3rd party\discord\activity_manager.h">
+      <Filter>Interfaces\Discord</Filter>
     </ClInclude>
-    <ClInclude Include="editor_environment_ambients_sound_id.hpp">
-      <Filter>editor\environment\ambients\ambient\sound_id</Filter>
+    <ClInclude Include="..\3rd party\discord\application_manager.h">
+      <Filter>Interfaces\Discord</Filter>
     </ClInclude>
-    <ClInclude Include="editor_environment_thunderbolts_manager.hpp">
-      <Filter>editor\environment\thunderbolts</Filter>
+    <ClInclude Include="..\3rd party\discord\core.h">
+      <Filter>Interfaces\Discord</Filter>
     </ClInclude>
-    <ClInclude Include="editor_environment_thunderbolts_thunderbolt.hpp">
-      <Filter>editor\environment\thunderbolts\thunderbolt</Filter>
+    <ClInclude Include="..\3rd party\discord\discord.h">
+      <Filter>Interfaces\Discord</Filter>
     </ClInclude>
-    <ClInclude Include="editor_environment_thunderbolts_gradient.hpp">
-      <Filter>editor\environment\thunderbolts\thunderbolt\gradient</Filter>
+    <ClInclude Include="..\3rd party\discord\event.h">
+      <Filter>Interfaces\Discord</Filter>
     </ClInclude>
-    <ClInclude Include="editor_environment_thunderbolts_thunderbolt_id.hpp">
-      <Filter>editor\environment\thunderbolts\thunderbolt_id</Filter>
+    <ClInclude Include="..\3rd party\discord\ffi.h">
+      <Filter>Interfaces\Discord</Filter>
     </ClInclude>
-    <ClInclude Include="editor_environment_thunderbolts_collection.hpp">
-      <Filter>editor\environment\thunderbolts\collection</Filter>
+    <ClInclude Include="..\3rd party\discord\image_manager.h">
+      <Filter>Interfaces\Discord</Filter>
     </ClInclude>
-    <ClInclude Include="editor_environment_weathers_manager.hpp">
-      <Filter>editor\environment\weathers</Filter>
+    <ClInclude Include="..\3rd party\discord\lobby_manager.h">
+      <Filter>Interfaces\Discord</Filter>
     </ClInclude>
-    <ClInclude Include="editor_environment_weathers_weather.hpp">
-      <Filter>editor\environment\weathers\weather</Filter>
+    <ClInclude Include="..\3rd party\discord\network_manager.h">
+      <Filter>Interfaces\Discord</Filter>
     </ClInclude>
-    <ClInclude Include="editor_environment_weathers_time.hpp">
-      <Filter>editor\environment\weathers\weather\time</Filter>
+    <ClInclude Include="..\3rd party\discord\overlay_manager.h">
+      <Filter>Interfaces\Discord</Filter>
     </ClInclude>
-    <ClInclude Include="editor_environment_detail.hpp">
-      <Filter>editor\environment\detail</Filter>
+    <ClInclude Include="..\3rd party\discord\relationship_manager.h">
+      <Filter>Interfaces\Discord</Filter>
     </ClInclude>
-    <ClInclude Include="property_collection.hpp">
-      <Filter>editor\property_collection</Filter>
+    <ClInclude Include="..\3rd party\discord\storage_manager.h">
+      <Filter>Interfaces\Discord</Filter>
     </ClInclude>
-    <ClInclude Include="property_collection_forward.hpp">
-      <Filter>editor\property_collection</Filter>
+    <ClInclude Include="..\3rd party\discord\store_manager.h">
+      <Filter>Interfaces\Discord</Filter>
     </ClInclude>
-    <ClInclude Include="property_collection_inline.hpp">
-      <Filter>editor\property_collection</Filter>
+    <ClInclude Include="..\3rd party\discord\types.h">
+      <Filter>Interfaces\Discord</Filter>
     </ClInclude>
-    <ClInclude Include="ide.hpp">
-      <Filter>editor\ide</Filter>
+    <ClInclude Include="..\3rd party\discord\user_manager.h">
+      <Filter>Interfaces\Discord</Filter>
     </ClInclude>
-    <ClInclude Include="xrSASH.h">
-      <Filter>OpenAutomate</Filter>
+    <ClInclude Include="..\3rd party\discord\voice_manager.h">
+      <Filter>Interfaces\Discord</Filter>
     </ClInclude>
@@ -874,91 +736,46 @@
     </ClCompile>
-    <ClCompile Include="doug_lea_memory_allocator.c">
-      <Filter>RenderRef\doug_lea_memory_allocator</Filter>
-    </ClCompile>
-    <ClCompile Include="engine_impl.cpp">
-      <Filter>editor\engine_impl</Filter>
-    </ClCompile>
-    <ClCompile Include="editor_environment_suns_manager.cpp">
-      <Filter>editor\environment\suns_manager</Filter>
-    </ClCompile>
-    <ClCompile Include="editor_environment_suns_sun.cpp">
-      <Filter>editor\environment\suns_manager\sun</Filter>
-    </ClCompile>
-    <ClCompile Include="editor_environment_suns_gradient.cpp">
-      <Filter>editor\environment\suns_manager\sun\gradient</Filter>
-    </ClCompile>
-    <ClCompile Include="editor_environment_suns_blend.cpp">
-      <Filter>editor\environment\suns_manager\sun\blend</Filter>
-    </ClCompile>
-    <ClCompile Include="editor_environment_suns_flares.cpp">
-      <Filter>editor\environment\suns_manager\sun\flares</Filter>
-    </ClCompile>
-    <ClCompile Include="editor_environment_suns_flare.cpp">
-      <Filter>editor\environment\suns_manager\sun\flares\flare</Filter>
-    </ClCompile>
-    <ClCompile Include="editor_environment_levels_manager.cpp">
-      <Filter>editor\environment\levels_manager</Filter>
-    </ClCompile>
-    <ClCompile Include="editor_environment_effects_manager.cpp">
-      <Filter>editor\environment\effects_manager</Filter>
-    </ClCompile>
-    <ClCompile Include="editor_environment_effects_effect.cpp">
-      <Filter>editor\environment\effects_manager\effect</Filter>
-    </ClCompile>
-    <ClCompile Include="editor_environment_sound_channels_manager.cpp">
-      <Filter>editor\environment\sound_channels_manager</Filter>
-    </ClCompile>
-    <ClCompile Include="editor_environment_sound_channels_channel.cpp">
-      <Filter>editor\environment\sound_channels_manager\channel</Filter>
-    </ClCompile>
-    <ClCompile Include="editor_environment_sound_channels_source.cpp">
-      <Filter>editor\environment\sound_channels_manager\channel\source</Filter>
-    </ClCompile>
-    <ClCompile Include="editor_environment_manager.cpp">
-      <Filter>editor\environment\manager</Filter>
-    </ClCompile>
-    <ClCompile Include="editor_environment_manager_properties.cpp">
-      <Filter>editor\environment\manager</Filter>
+    <ClCompile Include="xrSASH.cpp">
+      <Filter>OpenAutomate</Filter>
     </ClCompile>
-    <ClCompile Include="editor_environment_ambients_manager.cpp">
-      <Filter>editor\environment\ambients</Filter>
+    <ClCompile Include="..\3rd party\discord\achievement_manager.cpp">
+      <Filter>Interfaces\Discord</Filter>
     </ClCompile>
-    <ClCompile Include="editor_environment_ambients_ambient.cpp">
-      <Filter>editor\environment\ambients\ambient</Filter>
+    <ClCompile Include="..\3rd party\discord\activity_manager.cpp">
+      <Filter>Interfaces\Discord</Filter>
     </ClCompile>
-    <ClCompile Include="editor_environment_ambients_effect_id.cpp">
-      <Filter>editor\environment\ambients\ambient\effect_id</Filter>
+    <ClCompile Include="..\3rd party\discord\application_manager.cpp">
+      <Filter>Interfaces\Discord</Filter>
     </ClCompile>
-    <ClCompile Include="editor_environment_ambients_sound_id.cpp">
-      <Filter>editor\environment\ambients\ambient\sound_id</Filter>
+    <ClCompile Include="..\3rd party\discord\core.cpp">
+      <Filter>Interfaces\Discord</Filter>
     </ClCompile>
-    <ClCompile Include="editor_environment_thunderbolts_manager.cpp">
-      <Filter>editor\environment\thunderbolts</Filter>
+    <ClCompile Include="..\3rd party\discord\image_manager.cpp">
+      <Filter>Interfaces\Discord</Filter>
     </ClCompile>
-    <ClCompile Include="editor_environment_thunderbolts_thunderbolt.cpp">
-      <Filter>editor\environment\thunderbolts\thunderbolt</Filter>
+    <ClCompile Include="..\3rd party\discord\lobby_manager.cpp">
+      <Filter>Interfaces\Discord</Filter>
     </ClCompile>
-    <ClCompile Include="editor_environment_thunderbolts_gradient.cpp">
-      <Filter>editor\environment\thunderbolts\thunderbolt\gradient</Filter>
+    <ClCompile Include="..\3rd party\discord\network_manager.cpp">
+      <Filter>Interfaces\Discord</Filter>
     </ClCompile>
-    <ClCompile Include="editor_environment_thunderbolts_thunderbolt_id.cpp">
-      <Filter>editor\environment\thunderbolts\thunderbolt_id</Filter>
+    <ClCompile Include="..\3rd party\discord\overlay_manager.cpp">
+      <Filter>Interfaces\Discord</Filter>
     </ClCompile>
-    <ClCompile Include="editor_environment_thunderbolts_collection.cpp">
-      <Filter>editor\environment\thunderbolts\collection</Filter>
+    <ClCompile Include="..\3rd party\discord\relationship_manager.cpp">
+      <Filter>Interfaces\Discord</Filter>
     </ClCompile>
-    <ClCompile Include="editor_environment_weathers_manager.cpp">
-      <Filter>editor\environment\weathers</Filter>
+    <ClCompile Include="..\3rd party\discord\storage_manager.cpp">
+      <Filter>Interfaces\Discord</Filter>
     </ClCompile>
-    <ClCompile Include="editor_environment_weathers_weather.cpp">
-      <Filter>editor\environment\weathers\weather</Filter>
+    <ClCompile Include="..\3rd party\discord\store_manager.cpp">
+      <Filter>Interfaces\Discord</Filter>
     </ClCompile>
-    <ClCompile Include="editor_environment_weathers_time.cpp">
-      <Filter>editor\environment\weathers\weather\time</Filter>
+    <ClCompile Include="..\3rd party\discord\types.cpp">
+      <Filter>Interfaces\Discord</Filter>
     </ClCompile>
-    <ClCompile Include="editor_environment_detail.cpp">
-      <Filter>editor\environment\detail</Filter>
+    <ClCompile Include="..\3rd party\discord\user_manager.cpp">
+      <Filter>Interfaces\Discord</Filter>
     </ClCompile>
-    <ClCompile Include="xrSASH.cpp">
-      <Filter>OpenAutomate</Filter>
+    <ClCompile Include="..\3rd party\discord\voice_manager.cpp">
+      <Filter>Interfaces\Discord</Filter>
     </ClCompile>
@@ -978,19 +795,2 @@
   </ItemGroup>
-  <ItemGroup>
-    <None Include="My Amplifier Results\r000hs\r000hs.ampl">
-      <Filter>My Amplifier Results</Filter>
-    </None>
-    <None Include="My Amplifier Results\r001hs\r001hs.ampl">
-      <Filter>My Amplifier Results</Filter>
-    </None>
-    <None Include="My Amplifier Results\r002cc\r002cc.ampl">
-      <Filter>My Amplifier Results</Filter>
-    </None>
-  </ItemGroup>
-  <ItemGroup>
-    <Text Include="ClientServer.txt" />
-    <Text Include="Effects description.txt" />
-    <Text Include="features.txt" />
-    <Text Include="TODO.txt" />
-  </ItemGroup>
 </Project>
\ No newline at end of file
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/xrSASH.cpp xray-monolith/src/xrEngine/xrSASH.cpp
--- coc-1.4-xray-64/src/xrEngine/xrSASH.cpp	2023-10-20 20:54:50.548338400 +0100
+++ xray-monolith/src/xrEngine/xrSASH.cpp	2023-10-20 20:54:32.535037500 +0100
@@ -24,14 +24,14 @@
 {
-    oaVersion ver;
-    oaBool res = oaInit(pszParam, &ver);
-    if (res)
-    {
-        m_bInited = true;
-        m_bOpenAutomate = true;
-
-        Msg("oa:: Version: %d.%d.%d.%d", ver.Major, ver.Minor, ver.Minor, ver.Custom);
-
-        return true;
-    }
-    else
+	//oaVersion ver;
+	//oaBool res = oaInit(pszParam, &ver);
+	//if (res)
+	//{
+	//    m_bInited = true;
+	//    m_bOpenAutomate = true;
+
+	//    Msg("oa:: Version: %d.%d.%d.%d", ver.Major, ver.Minor, ver.Minor, ver.Custom);
+
+	//    return true;
+	//}
+	//else
     {
@@ -65,51 +65,51 @@
 {
-    oaCommand Command;
-    bool bExit = false;
+	//oaCommand Command;
+	//bool bExit = false;
 
-    while (!bExit)
-    {
-        // It must be called on the oaCommand object sent to
-        // oaGetNextCommand() before each call to oaGetNextCommand().
-        oaInitCommand(&Command);
-        switch (oaGetNextCommand(&Command))
-        {
-        /* No more commands, exit program */
-        case OA_CMD_EXIT:
-            Msg("SASH:: Exit.");
-            bExit = true;
-            break;
-
-        /* Run as normal */
-        case OA_CMD_RUN:
-            //RunApp();
-            //Msg("SASH:: GetCurrentOptions.");
-            bExit = true;
-            break;
-
-        /* Enumerate all in-game options */
-        case OA_CMD_GET_ALL_OPTIONS:
-            GetAllOptions();
-            break;
-
-        /* Return the option values currently set */
-        case OA_CMD_GET_CURRENT_OPTIONS:
-            GetCurrentOptions();
-            break;
-
-        /* Set all in-game options */
-        case OA_CMD_SET_OPTIONS:
-            SetOptions();
-            break;
-
-        /* Enumerate all known benchmarks */
-        case OA_CMD_GET_BENCHMARKS:
-            GetBenchmarks();
-            break;
-
-        /* Run benchmark */
-        case OA_CMD_RUN_BENCHMARK:
-            RunBenchmark(Command.BenchmarkName);
-            break;
-        }
-    }
+	//while (!bExit)
+	//{
+	//    // It must be called on the oaCommand object sent to
+	//    // oaGetNextCommand() before each call to oaGetNextCommand().
+	//    oaInitCommand(&Command);
+	//    switch (oaGetNextCommand(&Command))
+	//    {
+	//    /* No more commands, exit program */
+	//    case OA_CMD_EXIT:
+	//        Msg("SASH:: Exit.");
+	//        bExit = true;
+	//        break;
+
+	//    /* Run as normal */
+	//    case OA_CMD_RUN:
+	//        //RunApp();
+	//        //Msg("SASH:: GetCurrentOptions.");
+	//        bExit = true;
+	//        break;
+
+	//    /* Enumerate all in-game options */
+	//    case OA_CMD_GET_ALL_OPTIONS:
+	//        GetAllOptions();
+	//        break;
+
+	//    /* Return the option values currently set */
+	//    case OA_CMD_GET_CURRENT_OPTIONS:
+	//        GetCurrentOptions();
+	//        break;
+
+	//    /* Set all in-game options */
+	//    case OA_CMD_SET_OPTIONS:
+	//        SetOptions();
+	//        break;
+
+	//    /* Enumerate all known benchmarks */
+	//    case OA_CMD_GET_BENCHMARKS:
+	//        GetBenchmarks();
+	//        break;
+
+	//    /* Run benchmark */
+	//    case OA_CMD_RUN_BENCHMARK:
+	//        RunBenchmark(Command.BenchmarkName);
+	//        break;
+	//    }
+	//}
 }
@@ -220,3 +220,3 @@
     m_bBenchmarkRunning = true;
-    oaStartBenchmark();
+	//oaStartBenchmark();
 
@@ -235,3 +235,3 @@
     VERIFY(m_bBenchmarkRunning);
-    oaDisplayFrame(t);
+	//oaDisplayFrame(t);
 
@@ -251,3 +251,3 @@
     m_bBenchmarkRunning = false;
-    oaEndBenchmark();
+	//oaEndBenchmark();
 }
@@ -267,81 +267,81 @@
 
-    oaNamedOptionStruct Option;
-    oaInitOption(&Option);
-
-    DescribeOption("renderer", Option.Dependency);
-    DescribeOption("vid_mode", Option.Dependency);
-    DescribeOption("rs_fullscreen", Option.Dependency);
-
-    DescribeOption("rs_vis_distance", Option.Dependency);
-    DescribeOption("r__geometry_lod", Option.Dependency);
-    DescribeOption("r__detail_density", Option.Dependency);
-    DescribeOption("texture_lod", Option.Dependency);
-    DescribeOption("r__tf_aniso", Option.Dependency);
-    DescribeOption("ai_use_torch_dynamic_lights", Option.Dependency);
-
-    // r1 only
-    Option.Dependency.ParentName = TEXT("renderer");
-    Option.Dependency.ComparisonOp = OA_COMP_OP_EQUAL;
-    Option.Dependency.ComparisonVal.Enum = TEXT("renderer_r1");
-    Option.Dependency.ComparisonValType = GetOptionType("renderer");
-    {
-        DescribeOption("r__supersample", Option.Dependency);
-        DescribeOption("r1_no_detail_textures", Option.Dependency);
-    }
-
-    // >=r2
-    oaInitOption(&Option); // Reset dependency info
-    // Currently only equal/not equal works
-    //Option.Dependency.ParentName = TEXT("renderer");
-    //Option.Dependency.ComparisonOp = OA_COMP_OP_GREATER_OR_EQUAL;
-    //Option.Dependency.ComparisonVal.Enum = TEXT("renderer_r2");
-    //Option.Dependency.ComparisonValType = GetOptionType("renderer");
-    {
-        DescribeOption("r2_sun", Option.Dependency);
-        DescribeOption("r2_sun_quality", Option.Dependency);
-        DescribeOption("r2_slight_fade", Option.Dependency);
-        DescribeOption("r2_ls_squality", Option.Dependency);
-        DescribeOption("r2_detail_bump", Option.Dependency);
-    }
+	//oaNamedOptionStruct Option;
+	//oaInitOption(&Option);
 
-    // >=r2.5
-    //Option.Dependency.ParentName = TEXT("renderer");
-    //Option.Dependency.ComparisonOp = OA_COMP_OP_GREATER_OR_EQUAL;
-    //Option.Dependency.ComparisonVal.Enum = TEXT("renderer_r2.5");
-    //Option.Dependency.ComparisonValType = GetOptionType("renderer");
-    {
-        DescribeOption("r2_sun_shafts", Option.Dependency);
-        DescribeOption("r2_ssao", Option.Dependency);
-        DescribeOption("r2_ssao_opt_data", Option.Dependency);
-        DescribeOption("r2_ssao_half_data", Option.Dependency);
-        DescribeOption("r2_ssao_hbao", Option.Dependency);
-        DescribeOption("r2_soft_water", Option.Dependency);
-        DescribeOption("r2_soft_particles", Option.Dependency);
-        DescribeOption("r2_dof_enable", Option.Dependency);
-        DescribeOption("r2_volumetric_lights", Option.Dependency);
-        DescribeOption("r2_steep_parallax", Option.Dependency);
-    }
+	//DescribeOption("renderer", Option.Dependency);
+	//DescribeOption("vid_mode", Option.Dependency);
+	//DescribeOption("rs_fullscreen", Option.Dependency);
+
+	//DescribeOption("rs_vis_distance", Option.Dependency);
+	//DescribeOption("r__geometry_lod", Option.Dependency);
+	//DescribeOption("r__detail_density", Option.Dependency);
+	//DescribeOption("texture_lod", Option.Dependency);
+	//DescribeOption("r__tf_aniso", Option.Dependency);
+	//DescribeOption("ai_use_torch_dynamic_lights", Option.Dependency);
 
-    // >=r3
+	//// r1 only
     //Option.Dependency.ParentName = TEXT("renderer");
-    //Option.Dependency.ComparisonOp = OA_COMP_OP_GREATER_OR_EQUAL;
-    //Option.Dependency.ComparisonVal.Enum = TEXT("renderer_r3");
+	//Option.Dependency.ComparisonOp = OA_COMP_OP_EQUAL;
+	//Option.Dependency.ComparisonVal.Enum = TEXT("renderer_r1");
     //Option.Dependency.ComparisonValType = GetOptionType("renderer");
-    {
-        DescribeOption("r3_dynamic_wet_surfaces", Option.Dependency);
-        DescribeOption("r3_volumetric_smoke", Option.Dependency);
-        DescribeOption("r3_gbuff_opt", Option.Dependency);
-        DescribeOption("r3_use_dx10_1", Option.Dependency);
-        DescribeOption("r3_minmax_sm", Option.Dependency);
-        DescribeOption("r3_msaa", Option.Dependency);
-        // >= 2x
-        //Option.Dependency.ParentName = TEXT("r3_msaa");
-        //Option.Dependency.ComparisonOp = OA_COMP_OP_GREATER_OR_EQUAL;
-        //Option.Dependency.ComparisonVal.Enum = TEXT("2x");
-        //Option.Dependency.ComparisonValType = GetOptionType("r3_msaa");
-        {
-            DescribeOption("r3_msaa_opt", Option.Dependency);
-            DescribeOption("r3_msaa_alphatest", Option.Dependency);
-        }
-    }
+	//{
+	//    DescribeOption("r__supersample", Option.Dependency);
+	//    DescribeOption("r1_no_detail_textures", Option.Dependency);
+	//}
+
+	//// >=r2
+	//oaInitOption(&Option); // Reset dependency info
+	//// Currently only equal/not equal works
+	////Option.Dependency.ParentName = TEXT("renderer");
+	////Option.Dependency.ComparisonOp = OA_COMP_OP_GREATER_OR_EQUAL;
+	////Option.Dependency.ComparisonVal.Enum = TEXT("renderer_r2");
+	////Option.Dependency.ComparisonValType = GetOptionType("renderer");
+	//{
+	//    DescribeOption("r2_sun", Option.Dependency);
+	//    DescribeOption("r2_sun_quality", Option.Dependency);
+	//    DescribeOption("r2_slight_fade", Option.Dependency);
+	//    DescribeOption("r2_ls_squality", Option.Dependency);
+	//    DescribeOption("r2_detail_bump", Option.Dependency);
+	//}
+
+	//// >=r2.5
+	////Option.Dependency.ParentName = TEXT("renderer");
+	////Option.Dependency.ComparisonOp = OA_COMP_OP_GREATER_OR_EQUAL;
+	////Option.Dependency.ComparisonVal.Enum = TEXT("renderer_r2.5");
+	////Option.Dependency.ComparisonValType = GetOptionType("renderer");
+	//{
+	//    DescribeOption("r2_sun_shafts", Option.Dependency);
+	//    DescribeOption("r2_ssao", Option.Dependency);
+	//    DescribeOption("r2_ssao_opt_data", Option.Dependency);
+	//    DescribeOption("r2_ssao_half_data", Option.Dependency);
+	//    DescribeOption("r2_ssao_hbao", Option.Dependency);
+	//    DescribeOption("r2_soft_water", Option.Dependency);
+	//    DescribeOption("r2_soft_particles", Option.Dependency);
+	//    DescribeOption("r2_dof_enable", Option.Dependency);
+	//    DescribeOption("r2_volumetric_lights", Option.Dependency);
+	//    DescribeOption("r2_steep_parallax", Option.Dependency);
+	//}
+
+	//// >=r3
+	////Option.Dependency.ParentName = TEXT("renderer");
+	////Option.Dependency.ComparisonOp = OA_COMP_OP_GREATER_OR_EQUAL;
+	////Option.Dependency.ComparisonVal.Enum = TEXT("renderer_r3");
+	////Option.Dependency.ComparisonValType = GetOptionType("renderer");
+	//{
+	//    DescribeOption("r3_dynamic_wet_surfaces", Option.Dependency);
+	//    DescribeOption("r3_volumetric_smoke", Option.Dependency);
+	//    DescribeOption("r3_gbuff_opt", Option.Dependency);
+	//    DescribeOption("r3_use_dx10_1", Option.Dependency);
+	//    DescribeOption("r3_minmax_sm", Option.Dependency);
+	//    DescribeOption("r3_msaa", Option.Dependency);
+	//    // >= 2x
+	//    //Option.Dependency.ParentName = TEXT("r3_msaa");
+	//    //Option.Dependency.ComparisonOp = OA_COMP_OP_GREATER_OR_EQUAL;
+	//    //Option.Dependency.ComparisonVal.Enum = TEXT("2x");
+	//    //Option.Dependency.ComparisonValType = GetOptionType("r3_msaa");
+	//    {
+	//        DescribeOption("r3_msaa_opt", Option.Dependency);
+	//        DescribeOption("r3_msaa_alphatest", Option.Dependency);
+	//    }
+	//}
 
@@ -355,46 +355,45 @@
 
-    GetOption("renderer");
-    GetOption("vid_mode");
-    GetOption("rs_fullscreen");
-
-    GetOption("rs_vis_distance");
-    GetOption("r__geometry_lod");
-    GetOption("r__detail_density");
-    GetOption("texture_lod");
-    GetOption("r__tf_aniso");
-    GetOption("ai_use_torch_dynamic_lights");
-
-    // r1 only
-    GetOption("r__supersample");
-    GetOption("r1_no_detail_textures");
-
-    // >=r2
-    GetOption("r2_sun");
-    GetOption("r2_sun_quality");
-    GetOption("r2_slight_fade");
-    GetOption("r2_ls_squality");
-    GetOption("r2_detail_bump");
-
-    // >=r2.5
-    GetOption("r2_sun_shafts");
-    GetOption("r2_ssao");
-    GetOption("r2_ssao_opt_data");
-    GetOption("r2_ssao_half_data");
-    GetOption("r2_ssao_hbao");
-    GetOption("r2_soft_water");
-    GetOption("r2_soft_particles");
-    GetOption("r2_dof_enable");
-    GetOption("r2_volumetric_lights");
-    GetOption("r2_steep_parallax");
-
-    // >=r3
-    GetOption("r3_dynamic_wet_surfaces");
-    GetOption("r3_volumetric_smoke");
-    GetOption("r3_use_dx10_1");
-    GetOption("r3_minmax_sm");
-    GetOption("r3_msaa");
-    GetOption("r3_msaa_opt");
-    GetOption("r3_msaa_alphatest");
-    GetOption("r3_gbuff_opt");
-
+	//GetOption("renderer");
+	//GetOption("vid_mode");
+	//GetOption("rs_fullscreen");
+
+	//GetOption("rs_vis_distance");
+	//GetOption("r__geometry_lod");
+	//GetOption("r__detail_density");
+	//GetOption("texture_lod");
+	//GetOption("r__tf_aniso");
+	//GetOption("ai_use_torch_dynamic_lights");
+
+	//// r1 only
+	//GetOption("r__supersample");
+	//GetOption("r1_no_detail_textures");
+
+	//// >=r2
+	//GetOption("r2_sun");
+	//GetOption("r2_sun_quality");
+	//GetOption("r2_slight_fade");
+	//GetOption("r2_ls_squality");
+	//GetOption("r2_detail_bump");
+
+	//// >=r2.5
+	//GetOption("r2_sun_shafts");
+	//GetOption("r2_ssao");
+	//GetOption("r2_ssao_opt_data");
+	//GetOption("r2_ssao_half_data");
+	//GetOption("r2_ssao_hbao");
+	//GetOption("r2_soft_water");
+	//GetOption("r2_soft_particles");
+	//GetOption("r2_dof_enable");
+	//GetOption("r2_volumetric_lights");
+	//GetOption("r2_steep_parallax");
+
+	//// >=r3
+	//GetOption("r3_dynamic_wet_surfaces");
+	//GetOption("r3_volumetric_smoke");
+	//GetOption("r3_use_dx10_1");
+	//GetOption("r3_minmax_sm");
+	//GetOption("r3_msaa");
+	//GetOption("r3_msaa_opt");
+	//GetOption("r3_msaa_alphatest");
+	//GetOption("r3_gbuff_opt");
 
@@ -408,9 +407,9 @@
 
-    oaNamedOption* Option;
+	//oaNamedOption* Option;
 
-    while ((Option = oaGetNextOption()) != NULL)
-        SetOption(Option);
+	//while ((Option = oaGetNextOption()) != NULL)
+	//    SetOption(Option);
 
-    //Console->Save();
-    Console->Execute("cfg_save");
+	////Console->Save();
+	//Console->Execute("cfg_save");
 
@@ -422,10 +421,10 @@
     Msg("SASH:: GetBenchmarks.");
-    /* foreach known available benchmark */
-    {
-        /* Set BenchmarkName to a unique string identifying the benchmark */
-
-        oaAddBenchmark(TEXT("dummy"));
-        //sashAddBenchmark(TEXT("crates"));
-        //sashAddBenchmark(TEXT("map1"));
-    }
+	///* foreach known available benchmark */
+	//{
+	//    /* Set BenchmarkName to a unique string identifying the benchmark */
+
+	//    oaAddBenchmark(TEXT("dummy"));
+	//    //sashAddBenchmark(TEXT("crates"));
+	//    //sashAddBenchmark(TEXT("map1"));
+	//}
 }
@@ -513,223 +511,223 @@
 
-oaOptionDataType xrSASH::GetOptionType(char* pszOptionName)
-{
-    CConsole::vecCMD_IT I = Console->Commands.find(pszOptionName);
-    if (I == Console->Commands.end())
-    {
-        Msg("SASH:: Option \"%s\" not found.", pszOptionName);
-        VERIFY(I != Console->Commands.end());
-        return OA_TYPE_BOOL;
-    }
-
-    IConsole_Command* pCmd = I->second;
-    CCC_Mask* pMask = dynamic_cast<CCC_Mask*>(pCmd);
-    CCC_Token* pToken = dynamic_cast<CCC_Token*>(pCmd);
-    CCC_Float* pFloat = dynamic_cast<CCC_Float*>(pCmd);
-    CCC_Integer* pInt = dynamic_cast<CCC_Integer*>(pCmd);
-
-    if (pMask)
-        return OA_TYPE_BOOL;
-    else if (pToken)
-        return OA_TYPE_ENUM;
-    else if (pFloat)
-        return OA_TYPE_FLOAT;
-    else if (pInt)
-        return OA_TYPE_INT;
-    else
-    {
-        VERIFY(!"Unsupported console command type.");
-        return OA_TYPE_BOOL;
-    }
-
-}
-
-void xrSASH::DescribeOption(char* pszOptionName, const oaOptionDependency& Dependency)
-{
-    oaNamedOptionStruct Option;
-    oaInitOption(&Option);
-
-    Option.Dependency = Dependency;
-
-    CConsole::vecCMD_IT I = Console->Commands.find(pszOptionName);
-    if (I == Console->Commands.end())
-    {
-        Msg("SASH:: Option \"%s\" not found.", pszOptionName);
-        VERIFY(I != Console->Commands.end());
-        return;
-    }
-
-    IConsole_Command* pCmd = I->second;
-    CCC_Mask* pMask = dynamic_cast<CCC_Mask*>(pCmd);
-    CCC_Token* pToken = dynamic_cast<CCC_Token*>(pCmd);
-    CCC_Float* pFloat = dynamic_cast<CCC_Float*>(pCmd);
-    CCC_Integer* pInt = dynamic_cast<CCC_Integer*>(pCmd);
-
-    Option.Name = pszOptionName;
-
-    Msg("SASH:: Registering option \"%s\".", pszOptionName);
-
-    if (pMask)
-    {
-        Option.DataType = OA_TYPE_BOOL;
-        oaAddOption(&Option);
-    }
-    else if (pToken)
-    {
-        Option.DataType = OA_TYPE_ENUM;
-        xr_token* pXRToken = pToken->GetToken();
-
-        while (pXRToken->name)
-        {
-            Option.Value.Enum = (char*)pXRToken->name;
-            oaAddOption(&Option);
-            ++pXRToken;
-        }
-    }
-    else if (pFloat)
-    {
-        Option.DataType = OA_TYPE_FLOAT;
-        float mn, mx;
-
-        pFloat->GetBounds(mn, mx);
-        Option.MinValue.Float = mn;
-        Option.MaxValue.Float = mx;
-        Option.NumSteps = (int)((mx - mn) / 0.1f);
-        oaAddOption(&Option);
-    }
-    else if (pInt)
-    {
-        Option.DataType = OA_TYPE_INT;
-        int mn, mx;
-        pInt->GetBounds(mn, mx);
-        Option.MinValue.Int = mn;
-        Option.MaxValue.Int = mx;
-        oaAddOption(&Option);
-    }
-    else
-    {
-        VERIFY(!"Unsupported console command type.");
-    }
-}
-
-void xrSASH::GetOption(char* pszOptionName)
-{
-    oaValue Val;
-
-    CConsole::vecCMD_IT I = Console->Commands.find(pszOptionName);
-    if (I == Console->Commands.end())
-    {
-        Msg("SASH:: Option \"%s\" not found.", pszOptionName);
-        VERIFY(I != Console->Commands.end());
-        return;
-    }
-
-
-    IConsole_Command* pCmd = I->second;
-    CCC_Mask* pMask = dynamic_cast<CCC_Mask*>(pCmd);
-    CCC_Token* pToken = dynamic_cast<CCC_Token*>(pCmd);
-    CCC_Float* pFloat = dynamic_cast<CCC_Float*>(pCmd);
-    CCC_Integer* pInt = dynamic_cast<CCC_Integer*>(pCmd);
-
-    Msg("SASH:: Getting option \"%s\".", pszOptionName);
-
-    if (pMask)
-    {
-        Val.Bool = pMask->GetValue() ? OA_TRUE : OA_FALSE;
-        oaAddOptionValue(pszOptionName, OA_TYPE_BOOL, &Val);
-    }
-    else if (pToken)
-    {
-        IConsole_Command::TStatus stat;
-        pToken->Status(stat);
-        Val.Enum = stat;
-        oaAddOptionValue(pszOptionName, OA_TYPE_ENUM, &Val);
-    }
-    else if (pFloat)
-    {
-        Val.Float = pFloat->GetValue();
-        oaAddOptionValue(pszOptionName, OA_TYPE_FLOAT, &Val);
-    }
-    else if (pInt)
-    {
-        Val.Int = pInt->GetValue();
-        oaAddOptionValue(pszOptionName, OA_TYPE_INT, &Val);
-    }
-    else
-    {
-        VERIFY(!"Unsupported console command type.");
-    }
-}
-
-void xrSASH::SetOption(oaNamedOption* pOption)
-{
-    /*
-    * Set option value to persist for subsequent runs of the game
-    * to the given value. Option->Name will be the name of the value,
-    * and Option->Value will contain the appropriate value.
-    */
-    CConsole::vecCMD_IT I = Console->Commands.find(pOption->Name);
-    if (I == Console->Commands.end())
-    {
-        Msg("SASH:: Option \"%s\" not found.", pOption->Name);
-        VERIFY(I != Console->Commands.end());
-        return;
-    }
-
-    IConsole_Command* pCmd = I->second;
-    CCC_Mask* pMask = dynamic_cast<CCC_Mask*>(pCmd);
-    CCC_Token* pToken = dynamic_cast<CCC_Token*>(pCmd);
-    CCC_Float* pFloat = dynamic_cast<CCC_Float*>(pCmd);
-    CCC_Integer* pInt = dynamic_cast<CCC_Integer*>(pCmd);
-
-    Msg("SASH:: Setting option \"%s\".", pOption->Name);
-
-    string512 CmdBuf;
-
-    if (pMask)
-    {
-        xr_sprintf(CmdBuf, "%s %s", pOption->Name, (pOption->Value.Bool ? "1" : "0"));
-    }
-    else if (pToken)
-    {
-        xr_sprintf(CmdBuf, "%s %s", pOption->Name, pOption->Value.Enum);
-    }
-    else if (pFloat)
-    {
-        xr_sprintf(CmdBuf, "%s %f", pOption->Name, pOption->Value.Float);
-    }
-    else if (pInt)
-    {
-        xr_sprintf(CmdBuf, "%s %d", pOption->Name, pOption->Value.Int);
-    }
-    else
-    {
-        VERIFY(!"Unsupported console command type.");
-    }
-
-    m_bExecutingConsoleCommand = true;
-    Console->Execute(CmdBuf);
-    m_bExecutingConsoleCommand = false;
-}
-
-void xrSASH::Message(oaErrorType MessageType, const char* pszMsg)
-{
-    VERIFY(m_bInited);
-
-    oaMessage Message;
-    oaInitMessage(&Message);
-    Message.Error = MessageType;
-    Message.Message = pszMsg;
-    oaSendSignal(OA_SIGNAL_ERROR, &Message);
-}
-
-void xrSASH::Message(oaErrorType MessageType, const char* pszMsg, va_list& mark)
-{
-    VERIFY(m_bInited);
-
-    string2048 buf;
-    int sz = _vsnprintf(buf, sizeof(buf) - 1, pszMsg, mark);
-    buf[sizeof(buf) - 1] = 0;
-
-    if (sz) Message(MessageType, buf);
-}
+//oaOptionDataType xrSASH::GetOptionType(char* pszOptionName)
+//{
+//    CConsole::vecCMD_IT I = Console->Commands.find(pszOptionName);
+//    if (I == Console->Commands.end())
+//    {
+//        Msg("SASH:: Option \"%s\" not found.", pszOptionName);
+//        VERIFY(I != Console->Commands.end());
+//        return OA_TYPE_BOOL;
+//    }
+//
+//    IConsole_Command* pCmd = I->second;
+//    CCC_Mask* pMask = dynamic_cast<CCC_Mask*>(pCmd);
+//    CCC_Token* pToken = dynamic_cast<CCC_Token*>(pCmd);
+//    CCC_Float* pFloat = dynamic_cast<CCC_Float*>(pCmd);
+//    CCC_Integer* pInt = dynamic_cast<CCC_Integer*>(pCmd);
+//
+//    if (pMask)
+//        return OA_TYPE_BOOL;
+//    else if (pToken)
+//        return OA_TYPE_ENUM;
+//    else if (pFloat)
+//        return OA_TYPE_FLOAT;
+//    else if (pInt)
+//        return OA_TYPE_INT;
+//    else
+//    {
+//        VERIFY(!"Unsupported console command type.");
+//        return OA_TYPE_BOOL;
+//    }
+//
+//}
+//
+//void xrSASH::DescribeOption(char* pszOptionName, const oaOptionDependency& Dependency)
+//{
+//    oaNamedOptionStruct Option;
+//    oaInitOption(&Option);
+//
+//    Option.Dependency = Dependency;
+//
+//    CConsole::vecCMD_IT I = Console->Commands.find(pszOptionName);
+//    if (I == Console->Commands.end())
+//    {
+//        Msg("SASH:: Option \"%s\" not found.", pszOptionName);
+//        VERIFY(I != Console->Commands.end());
+//        return;
+//    }
+//
+//    IConsole_Command* pCmd = I->second;
+//    CCC_Mask* pMask = dynamic_cast<CCC_Mask*>(pCmd);
+//    CCC_Token* pToken = dynamic_cast<CCC_Token*>(pCmd);
+//    CCC_Float* pFloat = dynamic_cast<CCC_Float*>(pCmd);
+//    CCC_Integer* pInt = dynamic_cast<CCC_Integer*>(pCmd);
+//
+//    Option.Name = pszOptionName;
+//
+//    Msg("SASH:: Registering option \"%s\".", pszOptionName);
+//
+//    if (pMask)
+//    {
+//        Option.DataType = OA_TYPE_BOOL;
+//        oaAddOption(&Option);
+//    }
+//    else if (pToken)
+//    {
+//        Option.DataType = OA_TYPE_ENUM;
+//        xr_token* pXRToken = pToken->GetToken();
+//
+//        while (pXRToken->name)
+//        {
+//            Option.Value.Enum = (char*)pXRToken->name;
+//            oaAddOption(&Option);
+//            ++pXRToken;
+//        }
+//    }
+//    else if (pFloat)
+//    {
+//        Option.DataType = OA_TYPE_FLOAT;
+//        float mn, mx;
+//
+//        pFloat->GetBounds(mn, mx);
+//        Option.MinValue.Float = mn;
+//        Option.MaxValue.Float = mx;
+//        Option.NumSteps = (int)((mx - mn) / 0.1f);
+//        oaAddOption(&Option);
+//    }
+//    else if (pInt)
+//    {
+//        Option.DataType = OA_TYPE_INT;
+//        int mn, mx;
+//        pInt->GetBounds(mn, mx);
+//        Option.MinValue.Int = mn;
+//        Option.MaxValue.Int = mx;
+//        oaAddOption(&Option);
+//    }
+//    else
+//    {
+//        VERIFY(!"Unsupported console command type.");
+//    }
+//}
+//
+//void xrSASH::GetOption(char* pszOptionName)
+//{
+//    oaValue Val;
+//
+//    CConsole::vecCMD_IT I = Console->Commands.find(pszOptionName);
+//    if (I == Console->Commands.end())
+//    {
+//        Msg("SASH:: Option \"%s\" not found.", pszOptionName);
+//        VERIFY(I != Console->Commands.end());
+//        return;
+//    }
+//
+//
+//    IConsole_Command* pCmd = I->second;
+//    CCC_Mask* pMask = dynamic_cast<CCC_Mask*>(pCmd);
+//    CCC_Token* pToken = dynamic_cast<CCC_Token*>(pCmd);
+//    CCC_Float* pFloat = dynamic_cast<CCC_Float*>(pCmd);
+//    CCC_Integer* pInt = dynamic_cast<CCC_Integer*>(pCmd);
+//
+//    Msg("SASH:: Getting option \"%s\".", pszOptionName);
+//
+//    if (pMask)
+//    {
+//        Val.Bool = pMask->GetValue() ? OA_TRUE : OA_FALSE;
+//        oaAddOptionValue(pszOptionName, OA_TYPE_BOOL, &Val);
+//    }
+//    else if (pToken)
+//    {
+//        IConsole_Command::TStatus stat;
+//        pToken->Status(stat);
+//        Val.Enum = stat;
+//        oaAddOptionValue(pszOptionName, OA_TYPE_ENUM, &Val);
+//    }
+//    else if (pFloat)
+//    {
+//        Val.Float = pFloat->GetValue();
+//        oaAddOptionValue(pszOptionName, OA_TYPE_FLOAT, &Val);
+//    }
+//    else if (pInt)
+//    {
+//        Val.Int = pInt->GetValue();
+//        oaAddOptionValue(pszOptionName, OA_TYPE_INT, &Val);
+//    }
+//    else
+//    {
+//        VERIFY(!"Unsupported console command type.");
+//    }
+//}
+//
+//void xrSASH::SetOption(oaNamedOption* pOption)
+//{
+//    /*
+//    * Set option value to persist for subsequent runs of the game
+//    * to the given value. Option->Name will be the name of the value,
+//    * and Option->Value will contain the appropriate value.
+//    */
+//    CConsole::vecCMD_IT I = Console->Commands.find(pOption->Name);
+//    if (I == Console->Commands.end())
+//    {
+//        Msg("SASH:: Option \"%s\" not found.", pOption->Name);
+//        VERIFY(I != Console->Commands.end());
+//        return;
+//    }
+//
+//    IConsole_Command* pCmd = I->second;
+//    CCC_Mask* pMask = dynamic_cast<CCC_Mask*>(pCmd);
+//    CCC_Token* pToken = dynamic_cast<CCC_Token*>(pCmd);
+//    CCC_Float* pFloat = dynamic_cast<CCC_Float*>(pCmd);
+//    CCC_Integer* pInt = dynamic_cast<CCC_Integer*>(pCmd);
+//
+//    Msg("SASH:: Setting option \"%s\".", pOption->Name);
+//
+//    string512 CmdBuf;
+//
+//    if (pMask)
+//    {
+//        xr_sprintf(CmdBuf, "%s %s", pOption->Name, (pOption->Value.Bool ? "1" : "0"));
+//    }
+//    else if (pToken)
+//    {
+//        xr_sprintf(CmdBuf, "%s %s", pOption->Name, pOption->Value.Enum);
+//    }
+//    else if (pFloat)
+//    {
+//        xr_sprintf(CmdBuf, "%s %f", pOption->Name, pOption->Value.Float);
+//    }
+//    else if (pInt)
+//    {
+//        xr_sprintf(CmdBuf, "%s %d", pOption->Name, pOption->Value.Int);
+//    }
+//    else
+//    {
+//        VERIFY(!"Unsupported console command type.");
+//    }
+//
+//    m_bExecutingConsoleCommand = true;
+//    Console->Execute(CmdBuf);
+//    m_bExecutingConsoleCommand = false;
+//}
+//
+//void xrSASH::Message(oaErrorType MessageType, const char* pszMsg)
+//{
+//    VERIFY(m_bInited);
+//
+//    oaMessage Message;
+//    oaInitMessage(&Message);
+//    Message.Error = MessageType;
+//    Message.Message = pszMsg;
+//    oaSendSignal(OA_SIGNAL_ERROR, &Message);
+//}
+//
+//void xrSASH::Message(oaErrorType MessageType, const char* pszMsg, va_list& mark)
+//{
+//    VERIFY(m_bInited);
+//
+//    string2048 buf;
+//    int sz = _vsnprintf(buf, sizeof(buf) - 1, pszMsg, mark);
+//    buf[sizeof(buf) - 1] = 0;
+//
+//    if (sz) Message(MessageType, buf);
+//}
 
@@ -742,6 +740,6 @@
 
-        if (bLastLine)
-            Message(OA_ERROR_INVALID_OPTION_VALUE, pszMsg, mark);
-        else
-            Message(OA_ERROR_LOG, pszMsg, mark);
+		//if (bLastLine)
+		//    Message(OA_ERROR_INVALID_OPTION_VALUE, pszMsg, mark);
+		//else
+		//    Message(OA_ERROR_LOG, pszMsg, mark);
 
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/xrSASH.h xray-monolith/src/xrEngine/xrSASH.h
--- coc-1.4-xray-64/src/xrEngine/xrSASH.h	2023-10-20 20:54:50.548338400 +0100
+++ xray-monolith/src/xrEngine/xrSASH.h	2023-10-20 20:54:32.535037500 +0100
@@ -4,10 +4,2 @@
 
-#include <OpenAutomate.h>
-
-//struct oaOptionDependencyStruct;
-//typedef struct oaOptionDependencyStruct oaOptionDependency;
-
-//struct oaNamedOptionStruct;
-//typedef struct oaNamedOptionStruct oaNamedOption;
-
 class ENGINE_API xrSASH
@@ -53,11 +45,10 @@
     // OA option handling
-    void DescribeOption(char* pszOptionName, const oaOptionDependency& Dependency);
-    oaOptionDataType
-    GetOptionType(char* pszOptionName);
-    void GetOption(char* pszOptionName);
-    void SetOption(oaNamedOption* pOption);
+	//void DescribeOption(char* pszOptionName, const oaOptionDependency& Dependency);
+	//oaOptionDataType GetOptionType(char* pszOptionName);
+	//void GetOption(char* pszOptionName);
+	//void SetOption(oaNamedOption* pOption);
 
     // OA Error report
-    void Message(oaErrorType MessageType, const char* pszMsg);
-    void Message(oaErrorType MessageType, const char* pszMsg, va_list& mark);
+	//void Message(oaErrorType MessageType, const char* pszMsg);
+	//void Message(oaErrorType MessageType, const char* pszMsg, va_list& mark);
 
diff -U1 -w -B -r coc-1.4-xray-64/src/xrEngine/xrSheduler.cpp xray-monolith/src/xrEngine/xrSheduler.cpp
--- coc-1.4-xray-64/src/xrEngine/xrSheduler.cpp	2023-10-20 20:54:50.549340200 +0100
+++ xray-monolith/src/xrEngine/xrSheduler.cpp	2023-10-20 20:54:32.536036600 +0100
@@ -247,4 +247,5 @@
 {
+#ifdef DEBUG
     VERIFY(!Registered(A));
-
+#endif
     ItemReg R;
@@ -264,4 +265,5 @@
 {
+#ifdef DEBUG
     VERIFY(Registered(A));
-
+#endif
 #ifdef DEBUG_SCHEDULER
